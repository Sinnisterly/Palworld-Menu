#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalGameSetting

#include "Basic.hpp"

#include "BP_PalGameSetting_classes.hpp"
#include "BP_PalGameSetting_parameters.hpp"


namespace SDK
{

// Function BP_PalGameSetting.BP_PalGameSetting_C.CalcCaptureRate
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   CaptureItemLevel                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    TargetHandle                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    ThrowCharacterHandle                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_PalGameSetting_C::CalcCaptureRate(float CaptureItemLevel, const class UPalIndividualCharacterHandle* TargetHandle, const class UPalIndividualCharacterHandle* ThrowCharacterHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PalGameSetting_C", "CalcCaptureRate");

	Params::BP_PalGameSetting_C_CalcCaptureRate Parms{};

	Parms.CaptureItemLevel = CaptureItemLevel;
	Parms.TargetHandle = TargetHandle;
	Parms.ThrowCharacterHandle = ThrowCharacterHandle;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PalGameSetting.BP_PalGameSetting_C.GetEnemyMarkScale
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TargetPosition                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SelfPosition                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_PalGameSetting_C::GetEnemyMarkScale(const struct FVector& TargetPosition, const struct FVector& SelfPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PalGameSetting_C", "GetEnemyMarkScale");

	Params::BP_PalGameSetting_C_GetEnemyMarkScale Parms{};

	Parms.TargetPosition = std::move(TargetPosition);
	Parms.SelfPosition = std::move(SelfPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PalGameSetting.BP_PalGameSetting_C.GetWeakScale
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   WeakCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_PalGameSetting_C::GetWeakScale(int32 WeakCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PalGameSetting_C", "GetWeakScale");

	Params::BP_PalGameSetting_C_GetWeakScale Parms{};

	Parms.WeakCount = WeakCount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

