#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_CombatPal

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_ActionFinished final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ActionFinished");
static_assert(sizeof(BP_AIAction_CombatPal_C_ActionFinished) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_ActionFinished");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionFinished, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ActionFinished::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_CombatPal_C_ActionFinished::WithResult' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ActionPause
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CombatPal_C_ActionPause final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ActionPause) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ActionPause");
static_assert(sizeof(BP_AIAction_CombatPal_C_ActionPause) == 0x000008, "Wrong size on BP_AIAction_CombatPal_C_ActionPause");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionPause, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ActionPause::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ActionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CombatPal_C_ActionStart final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ActionStart) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ActionStart");
static_assert(sizeof(BP_AIAction_CombatPal_C_ActionStart) == 0x000008, "Wrong size on BP_AIAction_CombatPal_C_ActionStart");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionStart, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ActionStart::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ActionTick
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_ActionTick final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ActionTick) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ActionTick");
static_assert(sizeof(BP_AIAction_CombatPal_C_ActionTick) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_ActionTick");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionTick, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ActionTick::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ActionTick, DeltaSeconds) == 0x000008, "Member 'BP_AIAction_CombatPal_C_ActionTick::DeltaSeconds' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.AddDamageResponse
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_CombatPal_C_AddDamageResponse final
{
public:
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_AddDamageResponse) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_AddDamageResponse");
static_assert(sizeof(BP_AIAction_CombatPal_C_AddDamageResponse) == 0x000028, "Wrong size on BP_AIAction_CombatPal_C_AddDamageResponse");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddDamageResponse, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_AIAction_CombatPal_C_AddDamageResponse::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddDamageResponse, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_AddDamageResponse::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddDamageResponse, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_AddDamageResponse::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddDamageResponse, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_AddDamageResponse::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.AddWarpStackTimer
// 0x0078 (0x0078 - 0x0000)
struct BP_AIAction_CombatPal_C_AddWarpStackTimer final
{
public:
	double                                        Const_WarpStackTime;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SelfPos;                                           // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoPoint_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalSpawnedCharacterType                      CallFunc_GetSpawnedCharacterType_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCD[0x1];                                     // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCE[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsNearTwoPoint_distance_ImplicitCast;     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_AddWarpStackTimer) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_AddWarpStackTimer");
static_assert(sizeof(BP_AIAction_CombatPal_C_AddWarpStackTimer) == 0x000078, "Wrong size on BP_AIAction_CombatPal_C_AddWarpStackTimer");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, Const_WarpStackTime) == 0x000000, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::Const_WarpStackTime' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, SelfPos) == 0x000008, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::SelfPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_IsNearTwoPoint_ReturnValue) == 0x000030, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_IsNearTwoPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_GetCharacter_ReturnValue) == 0x000038, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_GetSpawnedCharacterType_ReturnValue) == 0x000060, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_GetSpawnedCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000062, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000063, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000064, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_BooleanOR_ReturnValue) == 0x000065, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_BooleanOR_ReturnValue_1) == 0x000066, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_BooleanOR_ReturnValue_2) == 0x000070, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AddWarpStackTimer, CallFunc_IsNearTwoPoint_distance_ImplicitCast) == 0x000074, "Member 'BP_AIAction_CombatPal_C_AddWarpStackTimer::CallFunc_IsNearTwoPoint_distance_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.AttackNearestMapObject
// 0x0050 (0x0050 - 0x0000)
struct BP_AIAction_CombatPal_C_AttackNearestMapObject final
{
public:
	bool                                          ReachAble;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DCF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalMapObject*                          CallFunc_GetNearestEnemyBuildObject_ReturnValue;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistPathForLocation_ForBP_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_AttackNearestMapObject) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_AttackNearestMapObject");
static_assert(sizeof(BP_AIAction_CombatPal_C_AttackNearestMapObject) == 0x000050, "Wrong size on BP_AIAction_CombatPal_C_AttackNearestMapObject");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, ReachAble) == 0x000000, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::ReachAble' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_GetPalAIController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_GetNearestEnemyBuildObject_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_GetNearestEnemyBuildObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_AttackNearestMapObject, CallFunc_IsExistPathForLocation_ForBP_ReturnValue) == 0x000048, "Member 'BP_AIAction_CombatPal_C_AttackNearestMapObject::CallFunc_IsExistPathForLocation_ForBP_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ChangeCombatStartLocation
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AIAction_CombatPal_C_ChangeCombatStartLocation final
{
public:
	bool                                          Change;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           SelfBB;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GoBackTeritory_C> K2Node_DynamicCast_AsBPI_Go_Back_Teritory;         // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAICombatModule_Wild*                K2Node_DynamicCast_AsPal_AICombat_Module_Wild;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JudgeReturnCombatStartPosition_ReturnValue; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD3[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GoBackTeritory_C> K2Node_DynamicCast_AsBPI_Go_Back_Teritory_1;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD4[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard;     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD6[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard_1;   // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD7[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetLeaderBB_LeaderPalBrackboard;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard;                    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ChangeCombatStartLocation");
static_assert(sizeof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation) == 0x0000C0, "Wrong size on BP_AIAction_CombatPal_C_ChangeCombatStartLocation");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, Change) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::Change' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, SelfBB) == 0x000008, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::SelfBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_AsBPI_Go_Back_Teritory) == 0x000018, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_AsBPI_Go_Back_Teritory' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_AsPal_AICombat_Module_Wild) == 0x000030, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_AsPal_AICombat_Module_Wild' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_JudgeReturnCombatStartPosition_ReturnValue) == 0x00003A, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_JudgeReturnCombatStartPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetController_ReturnValue_1) == 0x000040, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_AsBPI_Go_Back_Teritory_1) == 0x000048, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_AsBPI_Go_Back_Teritory_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetController_ReturnValue_2) == 0x000060, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetController_ReturnValue_3) == 0x000070, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard) == 0x000078, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard_1) == 0x000090, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetLeaderBB_LeaderPalBrackboard) == 0x0000A8, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetLeaderBB_LeaderPalBrackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_GetMyBB_PalBrackboard) == 0x0000B0, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_GetMyBB_PalBrackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeCombatStartLocation, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_AIAction_CombatPal_C_ChangeCombatStartLocation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ChangeNextAction
// 0x0180 (0x0180 - 0x0000)
struct BP_AIAction_CombatPal_C_ChangeNextAction final
{
public:
	int32                                         NextSlotID;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnableSlotIDLength;                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           TempAIDynamicParam;                                // 0x0008(0x0050)(Edit, BlueprintVisible, NoDestructor)
	TArray<int32>                                 VaildID;                                           // 0x0058(0x0010)(Edit, BlueprintVisible)
	EPalActionType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD8[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Get_Next_Action_Slot_ID_SlotID;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DD9[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticCharacterParameterComponent*  CallFunc_GetStaticParamCompRef_StaticParamComp;    // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0080(0x0050)(NoDestructor)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter_1;   // 0x00D0(0x0050)(NoDestructor)
	bool                                          CallFunc_PlayerCameraCheck_AttackAble;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDA[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoActor_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDB[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp;    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UPalActionBase>             CallFunc_Map_Find_Value;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDC[0x5];                                     // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_FindWazaClass_WazaAction;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIActionType                              Temp_byte_Variable_1;                              // 0x0158(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDD[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UPalAIActionBase>           CallFunc_Map_Find_Value_1;                         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDE[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionBase*                       CallFunc_SpawnObject_ReturnValue;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PushChildAction_ReturnValue;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ChangeNextAction) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ChangeNextAction");
static_assert(sizeof(BP_AIAction_CombatPal_C_ChangeNextAction) == 0x000180, "Wrong size on BP_AIAction_CombatPal_C_ChangeNextAction");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, NextSlotID) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::NextSlotID' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, EnableSlotIDLength) == 0x000004, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::EnableSlotIDLength' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, TempAIDynamicParam) == 0x000008, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::TempAIDynamicParam' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, VaildID) == 0x000058, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::VaildID' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, Temp_byte_Variable) == 0x000068, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Get_Next_Action_Slot_ID_SlotID) == 0x00006C, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Get_Next_Action_Slot_ID_SlotID' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_GetStaticParamCompRef_StaticParamComp) == 0x000078, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_GetStaticParamCompRef_StaticParamComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000080, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, K2Node_MakeStruct_PalAIActionDynamicParameter_1) == 0x0000D0, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::K2Node_MakeStruct_PalAIActionDynamicParameter_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_PlayerCameraCheck_AttackAble) == 0x000120, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_PlayerCameraCheck_AttackAble' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_RandomInteger_ReturnValue) == 0x000124, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_IsNearTwoActor_ReturnValue) == 0x000128, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_IsNearTwoActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, K2Node_SwitchInteger_CmpSuccess) == 0x000129, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_GetController_ReturnValue) == 0x000130, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_GetActorActionComponentRef_ActionComp) == 0x000138, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_GetActorActionComponentRef_ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Map_Find_Value) == 0x000140, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_IsValidClass_ReturnValue) == 0x000149, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00014A, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_FindWazaClass_WazaAction) == 0x000150, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_FindWazaClass_WazaAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, Temp_byte_Variable_1) == 0x000158, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Map_Find_Value_1) == 0x000160, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_Map_Find_ReturnValue_1) == 0x000168, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_SpawnObject_ReturnValue) == 0x000170, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ChangeNextAction, CallFunc_PushChildAction_ReturnValue) == 0x000178, "Member 'BP_AIAction_CombatPal_C_ChangeNextAction::CallFunc_PushChildAction_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.CheckDeadTimer
// 0x0090 (0x0090 - 0x0000)
struct BP_AIAction_CombatPal_C_CheckDeadTimer final
{
public:
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0000(0x0050)(NoDestructor)
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAIActionComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DDF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionBase*                       CallFunc_SetActionClassParameter_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE0[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_CheckDeadTimer) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_CheckDeadTimer");
static_assert(sizeof(BP_AIAction_CombatPal_C_CheckDeadTimer) == 0x000090, "Wrong size on BP_AIAction_CombatPal_C_CheckDeadTimer");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000000, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_GetControllerRef_PalAIController) == 0x000050, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_GetControllerRef_PalAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_SetActionClassParameter_ReturnValue) == 0x000068, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_SetActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000080, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_IsDead_ReturnValue) == 0x000088, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_CheckDeadTimer, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'BP_AIAction_CombatPal_C_CheckDeadTimer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.DamageResponseForCombatPal
// 0x0158 (0x0158 - 0x0000)
struct BP_AIAction_CombatPal_C_DamageResponseForCombatPal final
{
public:
	struct FPalDamageResult                       DmgResult;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class APalCharacter*>                  AttackerList;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE2[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE3[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue_1;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE4[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x00C8(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE5[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE6[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_DamageResponseForCombatPal");
static_assert(sizeof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal) == 0x000158, "Wrong size on BP_AIAction_CombatPal_C_DamageResponseForCombatPal");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, DmgResult) == 0x000000, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::DmgResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, AttackerList) == 0x000050, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::AttackerList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, K2Node_DynamicCast_AsPal_Character) == 0x000068, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetComponentByClass_ReturnValue) == 0x000078, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetPalAIController_ReturnValue) == 0x000088, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetPalAIController_ReturnValue_1) == 0x000090, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetPalAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetBattleManager_ReturnValue) == 0x000098, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetController_ReturnValue) == 0x0000A0, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B0, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetBattleManager_ReturnValue_1) == 0x0000B8, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x0000C8, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000118, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetController_ReturnValue_1) == 0x000128, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetController_ReturnValue_2) == 0x000130, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000138, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_Array_Add_ReturnValue_1) == 0x000140, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x000148, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, CallFunc_SelectResponseBySenses_ReturnValue) == 0x000150, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_DamageResponseForCombatPal, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'BP_AIAction_CombatPal_C_DamageResponseForCombatPal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.ExecuteUbergraph_BP_AIAction_CombatPal
// 0x0250 (0x0250 - 0x0000)
struct BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UPalActionComponent*              K2Node_CustomEvent_actionComponent;                // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE8[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DE9[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterMovementComponent*         CallFunc_GetPalCharacterMovementComponent_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InFanShap_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEA[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEB[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalDeadInfo                           K2Node_CustomEvent_DeadInfo;                       // 0x0068(0x0050)(NoDestructor)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalAIActionType                              Temp_byte_Variable;                                // 0x00C0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleMode_ReturnValue;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEC[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult_1;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DED[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController;         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEE[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAICombatModule*                     CallFunc_SpawnObject_ReturnValue;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot_1;              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearMaxRange_AndRayCheck_ReturnValue;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DEF[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot_2;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp;    // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFarMinRange_ReturnValue;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF0[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp_1;  // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActionIsEmpty_ReturnValue;                // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF1[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticCharacterParameterComponent*  CallFunc_GetStaticParamCompRef_StaticParamComp;    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UPalAIActionBase>           CallFunc_Map_Find_Value;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF2[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionBase*                       CallFunc_SpawnObject_ReturnValue_1;                // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PushChildAction_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF3[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIAction_LeaveBase*                 K2Node_DynamicCast_AsPal_AIAction_Leave_Base;      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF4[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController_1;       // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF5[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp_2;  // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp_3;  // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActionBase*                         CallFunc_PlayAction_ReturnValue;                   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp_4;  // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActionIsEmpty_ReturnValue_1;              // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF6[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnAction*                            K2Node_Event_Action;                               // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult;                           // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF7[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeCombatStartLocation_Change;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetIsValid_Valid;                      // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF8[0x5];                                     // 0x01EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetSelfPalBlackBoard_PalBB;               // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetSelfPalBlackBoard_PalBB_1;             // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF9[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalActionComponent* ActionComponent)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFA[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFB[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InFanShap_ReturnValue_1;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFC[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_InFanShap_Degree_ImplicitCast;            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_tempDeltaSecond_ImplicitCast;   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast; // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast_1; // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_InFanShap_Degree_ImplicitCast_1;          // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal");
static_assert(sizeof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal) == 0x000250, "Wrong size on BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, EntryPoint) == 0x000000, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_ControlledPawn_3) == 0x000008, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_CustomEvent_actionComponent) == 0x000010, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_CustomEvent_actionComponent' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_DynamicCast_AsPal_Character) == 0x000018, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValidClass_ReturnValue) == 0x000021, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_ControlledPawn_2) == 0x000028, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_DeltaSeconds) == 0x000030, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetPalCharacterMovementComponent_ReturnValue) == 0x000048, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetPalCharacterMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_InFanShap_ReturnValue) == 0x000050, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_InFanShap_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsFalling_ReturnValue) == 0x000051, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_ControlledPawn_1) == 0x000058, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_CustomEvent_DeadInfo) == 0x000068, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_CustomEvent_DeadInfo' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetComponentByClass_ReturnValue) == 0x0000B8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, Temp_byte_Variable) == 0x0000C0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsBattleMode_ReturnValue) == 0x0000C1, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsBattleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_ControlledPawn) == 0x0000C8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_WithResult_1) == 0x0000D0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_WithResult_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetControllerRef_PalAIController) == 0x0000D8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetControllerRef_PalAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_SpawnObject_ReturnValue) == 0x0000E8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetSkillSlotRef_SkillSlot) == 0x0000F0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetSkillSlotRef_SkillSlot_1) == 0x0000F8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetSkillSlotRef_SkillSlot_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsNearMaxRange_AndRayCheck_ReturnValue) == 0x000100, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsNearMaxRange_AndRayCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetController_ReturnValue) == 0x000108, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetSkillSlotRef_SkillSlot_2) == 0x000110, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetSkillSlotRef_SkillSlot_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetActorActionComponentRef_ActionComp) == 0x000118, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetActorActionComponentRef_ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsFarMinRange_ReturnValue) == 0x000120, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsFarMinRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetActorActionComponentRef_ActionComp_1) == 0x000128, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetActorActionComponentRef_ActionComp_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_ActionIsEmpty_ReturnValue) == 0x000130, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_ActionIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetStaticParamCompRef_StaticParamComp) == 0x000138, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetStaticParamCompRef_StaticParamComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_Map_Find_Value) == 0x000140, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_SpawnObject_ReturnValue_1) == 0x000150, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_PushChildAction_ReturnValue) == 0x000158, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_PushChildAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_DynamicCast_AsPal_AIAction_Leave_Base) == 0x000160, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_DynamicCast_AsPal_AIAction_Leave_Base' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetControllerRef_PalAIController_1) == 0x000170, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetControllerRef_PalAIController_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetController_ReturnValue_1) == 0x000180, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetActorActionComponentRef_ActionComp_2) == 0x000188, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetActorActionComponentRef_ActionComp_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000190, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetActorActionComponentRef_ActionComp_3) == 0x000198, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetActorActionComponentRef_ActionComp_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_PlayAction_ReturnValue) == 0x0001A0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_PlayAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetActorActionComponentRef_ActionComp_4) == 0x0001A8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetActorActionComponentRef_ActionComp_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_ActionIsEmpty_ReturnValue_1) == 0x0001B0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_ActionIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_Action) == 0x0001B8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_Action' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_Event_WithResult) == 0x0001C0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_Event_WithResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetController_ReturnValue_2) == 0x0001C8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_ChangeCombatStartLocation_Change) == 0x0001E8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_ChangeCombatStartLocation_Change' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_TargetIsValid_Valid) == 0x0001E9, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_TargetIsValid_Valid' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue_3) == 0x0001EA, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetSelfPalBlackBoard_PalBB) == 0x0001F0, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetSelfPalBlackBoard_PalBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GetSelfPalBlackBoard_PalBB_1) == 0x0001F8, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GetSelfPalBlackBoard_PalBB_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue_4) == 0x000200, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_IsValid_ReturnValue_5) == 0x000201, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_CreateDelegate_OutputDelegate_1) == 0x000204, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000218, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000220, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_InFanShap_ReturnValue_1) == 0x000230, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_InFanShap_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_InFanShap_Degree_ImplicitCast) == 0x000234, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_InFanShap_Degree_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, K2Node_VariableSet_tempDeltaSecond_ImplicitCast) == 0x000238, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::K2Node_VariableSet_tempDeltaSecond_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast) == 0x000240, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast_1) == 0x000244, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_GeneralTurnToActor_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal, CallFunc_InFanShap_Degree_ImplicitCast_1) == 0x000248, "Member 'BP_AIAction_CombatPal_C_ExecuteUbergraph_BP_AIAction_CombatPal::CallFunc_InFanShap_Degree_ImplicitCast_1' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.FindWazaClass
// 0x0038 (0x0038 - 0x0000)
struct BP_AIAction_CombatPal_C_FindWazaClass final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WazaAction;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetStaticParamCompRef_StaticParamComp;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    CallFunc_GetWazaType_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UPalActionBase>             CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_FindWazaClass) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_FindWazaClass");
static_assert(sizeof(BP_AIAction_CombatPal_C_FindWazaClass) == 0x000038, "Wrong size on BP_AIAction_CombatPal_C_FindWazaClass");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, SlotIndex) == 0x000000, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, WazaAction) == 0x000008, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::WazaAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, CallFunc_GetStaticParamCompRef_StaticParamComp) == 0x000010, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::CallFunc_GetStaticParamCompRef_StaticParamComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000018, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, CallFunc_GetWazaType_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::CallFunc_GetWazaType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, CallFunc_Map_Find_Value) == 0x000028, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_FindWazaClass, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_AIAction_CombatPal_C_FindWazaClass::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.Get Next Action Slot ID
// 0x0018 (0x0018 - 0x0000)
struct BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EnableSlotIdNum;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ChoiceEnableSlotIDByRandom_ReturnValue;   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID");
static_assert(sizeof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID) == 0x000018, "Wrong size on BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID");
static_assert(offsetof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID, SlotID) == 0x000000, "Member 'BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID::SlotID' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID, EnableSlotIdNum) == 0x000004, "Member 'BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID::EnableSlotIdNum' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000008, "Member 'BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID, CallFunc_ChoiceEnableSlotIDByRandom_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_Get_Next_Action_Slot_ID::CallFunc_ChoiceEnableSlotIDByRandom_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.GetActorActionComponentRef
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_GetActorActionComponentRef final
{
public:
	class UPalActionComponent*                    ActionComp;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_GetActorActionComponentRef) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_GetActorActionComponentRef");
static_assert(sizeof(BP_AIAction_CombatPal_C_GetActorActionComponentRef) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_GetActorActionComponentRef");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetActorActionComponentRef, ActionComp) == 0x000000, "Member 'BP_AIAction_CombatPal_C_GetActorActionComponentRef::ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetActorActionComponentRef, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_GetActorActionComponentRef::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.GetControllerRef
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_CombatPal_C_GetControllerRef final
{
public:
	class APalAIController*                       PalAIController;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_GetControllerRef) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_GetControllerRef");
static_assert(sizeof(BP_AIAction_CombatPal_C_GetControllerRef) == 0x000020, "Wrong size on BP_AIAction_CombatPal_C_GetControllerRef");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetControllerRef, PalAIController) == 0x000000, "Member 'BP_AIAction_CombatPal_C_GetControllerRef::PalAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetControllerRef, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_GetControllerRef::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetControllerRef, K2Node_DynamicCast_AsPal_AIController) == 0x000010, "Member 'BP_AIAction_CombatPal_C_GetControllerRef::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetControllerRef, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIAction_CombatPal_C_GetControllerRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetControllerRef, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AIAction_CombatPal_C_GetControllerRef::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.GetSelfPalBlackBoard
// 0x0038 (0x0038 - 0x0000)
struct BP_AIAction_CombatPal_C_GetSelfPalBlackBoard final
{
public:
	class UBP_PalAIBlackboard_Common_C*           PalBB;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E00[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard;                    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_GetSelfPalBlackBoard");
static_assert(sizeof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard) == 0x000038, "Wrong size on BP_AIAction_CombatPal_C_GetSelfPalBlackBoard");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, PalBB) == 0x000000, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::PalBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, CallFunc_GetControllerRef_PalAIController) == 0x000008, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::CallFunc_GetControllerRef_PalAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard) == 0x000018, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::K2Node_DynamicCast_AsBPI_Get_Pal_AIBlackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSelfPalBlackBoard, CallFunc_GetMyBB_PalBrackboard) == 0x000030, "Member 'BP_AIAction_CombatPal_C_GetSelfPalBlackBoard::CallFunc_GetMyBB_PalBrackboard' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.GetSkillSlotRef
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_GetSkillSlotRef final
{
public:
	class UPalActiveSkillSlot*                    SkillSlot;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_GetSkillSlotRef) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_GetSkillSlotRef");
static_assert(sizeof(BP_AIAction_CombatPal_C_GetSkillSlotRef) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_GetSkillSlotRef");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSkillSlotRef, SkillSlot) == 0x000000, "Member 'BP_AIAction_CombatPal_C_GetSkillSlotRef::SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetSkillSlotRef, CallFunc_GetControllerRef_PalAIController) == 0x000008, "Member 'BP_AIAction_CombatPal_C_GetSkillSlotRef::CallFunc_GetControllerRef_PalAIController' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.GetStaticParamCompRef
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_GetStaticParamCompRef final
{
public:
	class UPalStaticCharacterParameterComponent*  StaticParamComp;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_GetStaticParamCompRef) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_GetStaticParamCompRef");
static_assert(sizeof(BP_AIAction_CombatPal_C_GetStaticParamCompRef) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_GetStaticParamCompRef");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetStaticParamCompRef, StaticParamComp) == 0x000000, "Member 'BP_AIAction_CombatPal_C_GetStaticParamCompRef::StaticParamComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_GetStaticParamCompRef, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_GetStaticParamCompRef::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.Interrupt Action
// 0x0004 (0x0004 - 0x0000)
struct BP_AIAction_CombatPal_C_Interrupt_Action final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_Interrupt_Action) == 0x000004, "Wrong alignment on BP_AIAction_CombatPal_C_Interrupt_Action");
static_assert(sizeof(BP_AIAction_CombatPal_C_Interrupt_Action) == 0x000004, "Wrong size on BP_AIAction_CombatPal_C_Interrupt_Action");
static_assert(offsetof(BP_AIAction_CombatPal_C_Interrupt_Action, SlotID) == 0x000000, "Member 'BP_AIAction_CombatPal_C_Interrupt_Action::SlotID' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.MoveToTarget
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AIAction_CombatPal_C_MoveToTarget final
{
public:
	bool                                          Temp;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E01[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalAIController*                       CallFunc_GetControllerRef_PalAIController;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnNavMesh_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttackNearestMapObject_ReachAble;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E02[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E03[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoPoint_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E04[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Next_Action_Slot_ID_SlotID;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearMaxRange_ReturnValue;               // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E05[0x1];                                     // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_FindWazaClass_WazaAction;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E06[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AIMoveToTargetActor_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_MoveToTarget) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_MoveToTarget");
static_assert(sizeof(BP_AIAction_CombatPal_C_MoveToTarget) == 0x0000A0, "Wrong size on BP_AIAction_CombatPal_C_MoveToTarget");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, Temp) == 0x000000, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::Temp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_GetControllerRef_PalAIController) == 0x000008, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_GetControllerRef_PalAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_IsOnNavMesh_ReturnValue) == 0x000028, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_IsOnNavMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_AttackNearestMapObject_ReachAble) == 0x000029, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_AttackNearestMapObject_ReachAble' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_IsValidClass_ReturnValue) == 0x000038, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000050, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_IsNearTwoPoint_ReturnValue) == 0x000068, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_IsNearTwoPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000070, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_Get_Next_Action_Slot_ID_SlotID) == 0x000078, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_Get_Next_Action_Slot_ID_SlotID' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00007C, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007D, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_IsNearMaxRange_ReturnValue) == 0x00007E, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_IsNearMaxRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_FindWazaClass_WazaAction) == 0x000080, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_FindWazaClass_WazaAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_BooleanAND_ReturnValue) == 0x000088, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000089, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_MoveToTarget, CallFunc_AIMoveToTargetActor_ReturnValue) == 0x000098, "Member 'BP_AIAction_CombatPal_C_MoveToTarget::CallFunc_AIMoveToTargetActor_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.NextAction_ByApproachFailure
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_NextAction_ByApproachFailure final
{
public:
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindFarthestSlotID_IgnoreSlotID_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_NextAction_ByApproachFailure) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_NextAction_ByApproachFailure");
static_assert(sizeof(BP_AIAction_CombatPal_C_NextAction_ByApproachFailure) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_NextAction_ByApproachFailure");
static_assert(offsetof(BP_AIAction_CombatPal_C_NextAction_ByApproachFailure, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000000, "Member 'BP_AIAction_CombatPal_C_NextAction_ByApproachFailure::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_NextAction_ByApproachFailure, CallFunc_FindFarthestSlotID_IgnoreSlotID_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_NextAction_ByApproachFailure::CallFunc_FindFarthestSlotID_IgnoreSlotID_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.OnChildActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CombatPal_C_OnChildActionFinished final
{
public:
	class UPawnAction*                            Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_OnChildActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_OnChildActionFinished");
static_assert(sizeof(BP_AIAction_CombatPal_C_OnChildActionFinished) == 0x000010, "Wrong size on BP_AIAction_CombatPal_C_OnChildActionFinished");
static_assert(offsetof(BP_AIAction_CombatPal_C_OnChildActionFinished, Action) == 0x000000, "Member 'BP_AIAction_CombatPal_C_OnChildActionFinished::Action' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_OnChildActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_CombatPal_C_OnChildActionFinished::WithResult' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.OnDeadDelegate_Event
// 0x0050 (0x0050 - 0x0000)
struct BP_AIAction_CombatPal_C_OnDeadDelegate_Event final
{
public:
	struct FPalDeadInfo                           DeadInfo;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AIAction_CombatPal_C_OnDeadDelegate_Event) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_OnDeadDelegate_Event");
static_assert(sizeof(BP_AIAction_CombatPal_C_OnDeadDelegate_Event) == 0x000050, "Wrong size on BP_AIAction_CombatPal_C_OnDeadDelegate_Event");
static_assert(offsetof(BP_AIAction_CombatPal_C_OnDeadDelegate_Event, DeadInfo) == 0x000000, "Member 'BP_AIAction_CombatPal_C_OnDeadDelegate_Event::DeadInfo' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.OnPlayAction
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CombatPal_C_OnPlayAction final
{
public:
	class UPalActionBase*                         Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_OnPlayAction) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_OnPlayAction");
static_assert(sizeof(BP_AIAction_CombatPal_C_OnPlayAction) == 0x000008, "Wrong size on BP_AIAction_CombatPal_C_OnPlayAction");
static_assert(offsetof(BP_AIAction_CombatPal_C_OnPlayAction, Action) == 0x000000, "Member 'BP_AIAction_CombatPal_C_OnPlayAction::Action' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.PlayerCameraCheck
// 0x0002 (0x0002 - 0x0000)
struct BP_AIAction_CombatPal_C_PlayerCameraCheck final
{
public:
	bool                                          AttackAble;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAIAttackAbleByPlayerCamera_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_PlayerCameraCheck) == 0x000001, "Wrong alignment on BP_AIAction_CombatPal_C_PlayerCameraCheck");
static_assert(sizeof(BP_AIAction_CombatPal_C_PlayerCameraCheck) == 0x000002, "Wrong size on BP_AIAction_CombatPal_C_PlayerCameraCheck");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayerCameraCheck, AttackAble) == 0x000000, "Member 'BP_AIAction_CombatPal_C_PlayerCameraCheck::AttackAble' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayerCameraCheck, CallFunc_IsAIAttackAbleByPlayerCamera_ReturnValue) == 0x000001, "Member 'BP_AIAction_CombatPal_C_PlayerCameraCheck::CallFunc_IsAIAttackAbleByPlayerCamera_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.PlayWazaAction
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_CombatPal_C_PlayWazaAction final
{
public:
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E07[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionBase*                         CallFunc_PlayAction_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_PlayWazaAction) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_PlayWazaAction");
static_assert(sizeof(BP_AIAction_CombatPal_C_PlayWazaAction) == 0x000028, "Wrong size on BP_AIAction_CombatPal_C_PlayWazaAction");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaAction, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'BP_AIAction_CombatPal_C_PlayWazaAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaAction, CallFunc_GetActorActionComponentRef_ActionComp) == 0x000008, "Member 'BP_AIAction_CombatPal_C_PlayWazaAction::CallFunc_GetActorActionComponentRef_ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaAction, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000010, "Member 'BP_AIAction_CombatPal_C_PlayWazaAction::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaAction, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_PlayWazaAction::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaAction, CallFunc_PlayAction_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_PlayWazaAction::CallFunc_PlayAction_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.PlayWazaDarknessStatus
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AIAction_CombatPal_C_PlayWazaDarknessStatus final
{
public:
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetActorActionComponentRef_ActionComp;    // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalActionBase*                         CallFunc_PlayActionLocation_ReturnValue;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_PlayWazaDarknessStatus");
static_assert(sizeof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus) == 0x0000C8, "Wrong size on BP_AIAction_CombatPal_C_PlayWazaDarknessStatus");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_RandomUnitVector_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_GetActorActionComponentRef_ActionComp) == 0x0000A0, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_GetActorActionComponentRef_ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_PlayWazaDarknessStatus, CallFunc_PlayActionLocation_ReturnValue) == 0x0000C0, "Member 'BP_AIAction_CombatPal_C_PlayWazaDarknessStatus::CallFunc_PlayActionLocation_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.RemoveDamageResponse
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_CombatPal_C_RemoveDamageResponse final
{
public:
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_RemoveDamageResponse) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_RemoveDamageResponse");
static_assert(sizeof(BP_AIAction_CombatPal_C_RemoveDamageResponse) == 0x000028, "Wrong size on BP_AIAction_CombatPal_C_RemoveDamageResponse");
static_assert(offsetof(BP_AIAction_CombatPal_C_RemoveDamageResponse, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_AIAction_CombatPal_C_RemoveDamageResponse::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_RemoveDamageResponse, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_RemoveDamageResponse::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_RemoveDamageResponse, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_RemoveDamageResponse::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_RemoveDamageResponse, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_RemoveDamageResponse::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.SetupSkillSlot
// 0x0040 (0x0040 - 0x0000)
struct BP_AIAction_CombatPal_C_SetupSkillSlot final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E08[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActiveSkillSlot*                    CallFunc_GetSkillSlotRef_SkillSlot;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EPalWazaID>                            CallFunc_GetEquipWaza_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    CallFunc_Array_Get_Item;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E09[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_SetupSkillSlot) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_SetupSkillSlot");
static_assert(sizeof(BP_AIAction_CombatPal_C_SetupSkillSlot) == 0x000040, "Wrong size on BP_AIAction_CombatPal_C_SetupSkillSlot");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_GetSkillSlotRef_SkillSlot) == 0x000008, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_GetSkillSlotRef_SkillSlot' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_GetEquipWaza_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_GetEquipWaza_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_Array_Get_Item) == 0x000031, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SetupSkillSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AIAction_CombatPal_C_SetupSkillSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.SightCheckAndResponseForCombatPal
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal final
{
public:
	bool                                          ChangeNextAction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TempTarget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPlayer;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APalCharacter*>                  TempTargetList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetSelfPalBlackBoard_PalBB;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0030(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0C[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0D[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0E[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllPlayer_InSightPlayers;       // 0x00D0(0x0010)(ReferenceParm)
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllAliveNPC_InSightCharacters;  // 0x00E0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal");
static_assert(sizeof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal) == 0x0000F0, "Wrong size on BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, ChangeNextAction) == 0x000000, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::ChangeNextAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, TempTarget) == 0x000008, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::TempTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, HitPlayer) == 0x000010, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::HitPlayer' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, TempTargetList) == 0x000018, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::TempTargetList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetSelfPalBlackBoard_PalBB) == 0x000028, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetSelfPalBlackBoard_PalBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000030, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000080, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetController_ReturnValue_1) == 0x000090, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x0000A0, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_SelectResponseBySenses_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetController_ReturnValue_2) == 0x0000B0, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, K2Node_SwitchEnum_CmpSuccess) == 0x0000B8, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000C0, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_SightCheckAllPlayer_InSightPlayers) == 0x0000D0, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_SightCheckAllPlayer_InSightPlayers' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal, CallFunc_SightCheckAllAliveNPC_InSightCharacters) == 0x0000E0, "Member 'BP_AIAction_CombatPal_C_SightCheckAndResponseForCombatPal::CallFunc_SightCheckAllAliveNPC_InSightCharacters' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.StartNextAction_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CombatPal_C_StartNextAction_Event final
{
public:
	const class UPalActionComponent*              ActionComponent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_StartNextAction_Event) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_StartNextAction_Event");
static_assert(sizeof(BP_AIAction_CombatPal_C_StartNextAction_Event) == 0x000008, "Wrong size on BP_AIAction_CombatPal_C_StartNextAction_Event");
static_assert(offsetof(BP_AIAction_CombatPal_C_StartNextAction_Event, ActionComponent) == 0x000000, "Member 'BP_AIAction_CombatPal_C_StartNextAction_Event::ActionComponent' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.TargetChange
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_CombatPal_C_TargetChange final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E0F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalLookAtComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E10[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetTargetActor_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_TargetChange) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_TargetChange");
static_assert(sizeof(BP_AIAction_CombatPal_C_TargetChange) == 0x000020, "Wrong size on BP_AIAction_CombatPal_C_TargetChange");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetChange, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AIAction_CombatPal_C_TargetChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetChange, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_TargetChange::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetChange, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'BP_AIAction_CombatPal_C_TargetChange::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetChange, CallFunc_GetTargetActor_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_TargetChange::CallFunc_GetTargetActor_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.TargetIsValid
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_CombatPal_C_TargetIsValid final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E11[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveActorFlag_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_TargetIsValid) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_TargetIsValid");
static_assert(sizeof(BP_AIAction_CombatPal_C_TargetIsValid) == 0x000020, "Wrong size on BP_AIAction_CombatPal_C_TargetIsValid");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, Valid) == 0x000000, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::Valid' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, K2Node_DynamicCast_AsPal_Character) == 0x000010, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, CallFunc_GetActiveActorFlag_ReturnValue) == 0x00001A, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::CallFunc_GetActiveActorFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, CallFunc_IsDead_ReturnValue) == 0x00001B, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_TargetIsValid, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'BP_AIAction_CombatPal_C_TargetIsValid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AIAction_CombatPal.BP_AIAction_CombatPal_C.WarpToSpawnerPoint
// 0x0148 (0x0148 - 0x0000)
struct BP_AIAction_CombatPal_C_WarpToSpawnerPoint final
{
public:
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue_1;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetSelfPalBlackBoard_PalBB;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E12[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint) == 0x000008, "Wrong alignment on BP_AIAction_CombatPal_C_WarpToSpawnerPoint");
static_assert(sizeof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint) == 0x000148, "Wrong size on BP_AIAction_CombatPal_C_WarpToSpawnerPoint");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_GetCharacter_ReturnValue) == 0x000000, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_GetCharacter_ReturnValue_1) == 0x000008, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_GetSelfPalBlackBoard_PalBB) == 0x000010, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_GetSelfPalBlackBoard_PalBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000138, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CombatPal_C_WarpToSpawnerPoint, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'BP_AIAction_CombatPal_C_WarpToSpawnerPoint::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

