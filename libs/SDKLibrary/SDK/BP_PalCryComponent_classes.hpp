#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalCryComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_PalEmo_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalCryComponent.BP_PalCryComponent_C
// 0x0108 (0x01A8 - 0x00A0)
class UBP_PalCryComponent_C final : public UPalCryComponentBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         ElapsedTimeFromLastIdleCry;                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C62[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CryingCharacter;                                   // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class UClass*, E_PalEmo>                 ActionEmoMap;                                      // 0x00B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, E_PalEmo>                 AIActionEmoMap;                                    // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        CoolTImeIdleCry;                                   // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCryingOnAIAction;                                // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C63[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CryingAIActionClass;                               // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentAIActionClass;                              // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       IndividualParameter;                               // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasHungry;                                         // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDebug;                                           // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C64[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        GeneralCoolTime;                                   // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LastCryEmoState;                                   // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTimeFromLastCry;                              // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalTribeID                                   CryPalID;                                          // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckAction(const class UPalActionBase* Action);
	void CheckAIAction();
	void CheckHungerType(EPalStatusHungerType Current, EPalStatusHungerType Last);
	void CheckWorkerEvent();
	void ExecuteUbergraph_BP_PalCryComponent(int32 EntryPoint);
	class FName GetPalID();
	void Initialize();
	void OnPlayCryWithAction(E_PalEmo PalEmo);
	void OnSpawnPal(bool Param_bIsActive);
	void PlayCry(class FName EmoState);
	void ProcessIdleCry(double DeltaTime);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalCryComponent_C">();
	}
	static class UBP_PalCryComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PalCryComponent_C>();
	}
};
static_assert(alignof(UBP_PalCryComponent_C) == 0x000008, "Wrong alignment on UBP_PalCryComponent_C");
static_assert(sizeof(UBP_PalCryComponent_C) == 0x0001A8, "Wrong size on UBP_PalCryComponent_C");
static_assert(offsetof(UBP_PalCryComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_PalCryComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, ElapsedTimeFromLastIdleCry) == 0x0000A8, "Member 'UBP_PalCryComponent_C::ElapsedTimeFromLastIdleCry' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, CryingCharacter) == 0x0000B0, "Member 'UBP_PalCryComponent_C::CryingCharacter' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, ActionEmoMap) == 0x0000B8, "Member 'UBP_PalCryComponent_C::ActionEmoMap' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, AIActionEmoMap) == 0x000108, "Member 'UBP_PalCryComponent_C::AIActionEmoMap' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, CoolTImeIdleCry) == 0x000158, "Member 'UBP_PalCryComponent_C::CoolTImeIdleCry' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, IsCryingOnAIAction) == 0x000160, "Member 'UBP_PalCryComponent_C::IsCryingOnAIAction' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, CryingAIActionClass) == 0x000168, "Member 'UBP_PalCryComponent_C::CryingAIActionClass' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, CurrentAIActionClass) == 0x000170, "Member 'UBP_PalCryComponent_C::CurrentAIActionClass' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, IndividualParameter) == 0x000178, "Member 'UBP_PalCryComponent_C::IndividualParameter' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, HasHungry) == 0x000180, "Member 'UBP_PalCryComponent_C::HasHungry' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, IsDebug) == 0x000181, "Member 'UBP_PalCryComponent_C::IsDebug' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, GeneralCoolTime) == 0x000188, "Member 'UBP_PalCryComponent_C::GeneralCoolTime' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, LastCryEmoState) == 0x000190, "Member 'UBP_PalCryComponent_C::LastCryEmoState' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, DeltaTimeFromLastCry) == 0x000198, "Member 'UBP_PalCryComponent_C::DeltaTimeFromLastCry' has a wrong offset!");
static_assert(offsetof(UBP_PalCryComponent_C, CryPalID) == 0x0001A0, "Member 'UBP_PalCryComponent_C::CryPalID' has a wrong offset!");

}

