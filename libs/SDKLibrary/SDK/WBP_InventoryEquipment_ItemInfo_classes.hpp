#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_ItemInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_PalUIItemInfoWindowDIsplayType_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C
// 0x03A0 (0x07A8 - 0x0408)
class UWBP_InventoryEquipment_ItemInfo_C final : public UPalUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Use;                                           // 0x0410(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_rarity;                                        // 0x0418(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_CommonDetail;                               // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_ItemNum;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_KeyGuide_Use;                               // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_MainParameter;                              // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SkillInfo;                                  // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SubParameter;                               // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SubParameter_1;                             // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_TechPoint;                                  // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal_KeyGuide_Equip;                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal_KeyGuide_LiftHalf;                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal_KeyGuide_LiftOne;                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal_KeyGuide_Move;                          // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Horizontal_KeyGuide_Use;                           // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Durability;                          // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_KeyGuide;                            // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconArrow_WeightReduce;                            // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon_TechPoint;                              // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemIcon;                                    // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemIconShadow;                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Consumable;                                // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_RarityText;                                // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 RichText_ItemInfo;                                 // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalRichTextBlock_C*                 RichText_ItemName;                                 // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LiftHalf_RightIcon;                        // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LiftOne_RightIcon;                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_KeyGuide_Equip;                             // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_KeyGuide_Move;                              // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USpacer*                                Spacer_KeyGuide_Use;                               // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_CTNum;                                        // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Cu;                                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_DurableNum;                                   // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Equip;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemCategory;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemNumTitle;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemNumValue;                                 // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_MainParamTitle;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_MainParamValue;                               // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_NowWeight;                                    // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Ra;                                           // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_SubParamTitle;                                // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_SubParamTitle_1;                              // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_SubParamValue;                                // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_SubParamValue_1;                              // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Tech_PointValue;                              // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_TechPointTitle;                               // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     TextPowerNum;                                      // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_AdditionalInfo;                        // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* WBP_InventoryEquipment_ItemInfo_addeffect;         // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* WBP_InventoryEquipment_ItemInfo_addeffect_1;       // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* WBP_InventoryEquipment_ItemInfo_addeffect_2;       // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* WBP_InventoryEquipment_ItemInfo_addeffect_3;       // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_Caution_C* WBP_InventoryEquipment_ItemInfo_Caution;           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_ItemInfo_Tecnology_C* WBP_InventoryEquipment_ItemInfo_Tecnology;         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_PalIcon_C*      WBP_InventoryEquipment_PalIcon;                    // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MainMenu_Pal_StatusElement_C*      WBP_MainMenu_Pal_StatusElement;                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalKeyGuideIcon_C*                 WBP_PalKeyGuideIcon;                               // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalKeyGuideIcon_C*                 WBP_PalKeyGuideIcon_1;                             // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerInputKeyGuideIcon_C*         WBP_PlayerInputKeyGuideIcon;                       // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerInputKeyGuideIcon_C*         WBP_PlayerInputKeyGuideIcon_1;                     // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerInputKeyGuideIcon_C*         WBP_PlayerInputKeyGuideIcon_2;                     // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerInputKeyGuideIcon_C*         WBP_PlayerInputKeyGuideIcon_65;                    // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ShopSellPrice_C*                   WBP_ShopSellPrice;                                 // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_PalUIItemInfoWindowDIsplayType              NowDisplayType;                                    // 0x0610(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PalUIItemInfoWindowDIsplayType              DefaultDisplayType;                                // 0x0611(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C2[0x6];                                     // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalItemTypeA, struct FDataTableRowHandle> MainParamMsgIDMap;                                 // 0x0618(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TMap<EPalItemTypeA, struct FDataTableRowHandle> SubParamMsgIDMap;                                  // 0x0668(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FDataTableRowHandle                    MainParamShieldOverrideMsgID;                      // 0x06B8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FPalDataTableRowName_UIInputAction     UseItem;                                           // 0x06C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FPalUICommonItemInfoDisplayData        CachedDisplayInfo;                                 // 0x06D0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference)
	struct FDataTableRowHandle                    EquipMsgID;                                        // 0x0700(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    RemoveEquipMsgID;                                  // 0x0710(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    ItemNumTitleMsgID;                                 // 0x0720(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    HPRegeneMsgID;                                     // 0x0730(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    RegeneDurationMsgID;                               // 0x0740(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    MaskedTechTitleMsgID;                              // 0x0750(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    MaskedTechDescMsgID;                               // 0x0760(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor)
	TArray<struct FDataTableRowHandle>            RarityMsgIDs;                                      // 0x0770(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                          IsBossTechPoint;                                   // 0x0780(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C3[0x7];                                     // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    NormalMsgId;                                       // 0x0788(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class UWBP_InventoryEquipment_ItemInfo_addeffect_C*> AdditionalInfoArray;                               // 0x0798(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void Change_Display_Mode(E_PalUIItemInfoWindowDIsplayType DisplayType);
	void Construct();
	void ConvertPassiveSkillNameToText(TArray<class FName>& PassiveSkillNameArray, TArray<class FText>* OutTextArray);
	void Destruct();
	void ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo(int32 EntryPoint);
	void Get_Display_Technology_Category_Name(class FName TechnologyName, class FText* CategoryText);
	void GetItemRegeneInfo(class FName ItemId, bool* IsRegene, struct FPalStatusEffectFoodDataRow* FoodInfo);
	void HideAdditionalText();
	void HideMainParameter();
	void HideSubParameter();
	void Is_Equipable_Item(class UPalItemSlot* Param_Slot, bool* IsEquipable);
	void OnInitialized();
	void OnInputMethodChanged(ECommonInputType bNewInputType);
	void OnUpdateTargetSlot(class UPalItemSlot* Param_Slot);
	void Set_Main_Param_Text(const class FText& Text);
	void Set_Main_Param_Value(int32 Value);
	void Set_Pal_Gear_Icon(class FName ItemId);
	void Set_Simple_Additional_Text(const class FText& Text);
	void Set_Sub_Param_Regene(const struct FPalStatusEffectFoodDataRow& FoodData);
	void Set_Sub_Param_Text(const class FText& Text);
	void Set_Sub_Param_Value(int32 Value);
	void SetImportanyAdditionalText(TArray<class FText>& TextArray);
	void Setup_by_Technology_Name(class FName TechnologyName, bool IsMasked, class UTexture2D* IconTexture);
	void Setup_Item_Icon(const class FName StaticItemId);
	void Setup_Item_Name();
	void Setup_Item_Weight();
	void Setup_Parameter(const class FName StaticItemId);
	void Setup_Tech_Mat_Details(const struct FPalTechnologyRecipeUnlockDataTableRow& TechData, bool IsMasked);
	void SetupByDisplayInfo(const struct FPalUICommonItemInfoDisplayData& DisplayInfo);
	void SetupItemDescription();
	void SetupItemDurability();
	void SetupItemNum();
	void SetupItemRarity();
	void SetupKeyGuide();
	void SetupPrice();
	void SetupSkillInfo();
	void SetupTechDetails();
	void SetupUseableKeyGuide_Internal(class FName StaticItemId);
	void UnbindEvent();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InventoryEquipment_ItemInfo_C">();
	}
	static class UWBP_InventoryEquipment_ItemInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InventoryEquipment_ItemInfo_C>();
	}
};
static_assert(alignof(UWBP_InventoryEquipment_ItemInfo_C) == 0x000008, "Wrong alignment on UWBP_InventoryEquipment_ItemInfo_C");
static_assert(sizeof(UWBP_InventoryEquipment_ItemInfo_C) == 0x0007A8, "Wrong size on UWBP_InventoryEquipment_ItemInfo_C");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, UberGraphFrame) == 0x000408, "Member 'UWBP_InventoryEquipment_ItemInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Anm_Use) == 0x000410, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Anm_Use' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Anm_rarity) == 0x000418, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Anm_rarity' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_CommonDetail) == 0x000420, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_CommonDetail' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_ItemNum) == 0x000428, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_ItemNum' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_KeyGuide_Use) == 0x000430, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_KeyGuide_Use' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_MainParameter) == 0x000438, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_MainParameter' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_SkillInfo) == 0x000440, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_SkillInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_SubParameter) == 0x000448, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_SubParameter' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_SubParameter_1) == 0x000450, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_SubParameter_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Canvas_TechPoint) == 0x000458, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Canvas_TechPoint' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Horizontal_KeyGuide_Equip) == 0x000460, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Horizontal_KeyGuide_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Horizontal_KeyGuide_LiftHalf) == 0x000468, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Horizontal_KeyGuide_LiftHalf' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Horizontal_KeyGuide_LiftOne) == 0x000470, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Horizontal_KeyGuide_LiftOne' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Horizontal_KeyGuide_Move) == 0x000478, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Horizontal_KeyGuide_Move' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Horizontal_KeyGuide_Use) == 0x000480, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Horizontal_KeyGuide_Use' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, HorizontalBox_Durability) == 0x000488, "Member 'UWBP_InventoryEquipment_ItemInfo_C::HorizontalBox_Durability' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, HorizontalBox_KeyGuide) == 0x000490, "Member 'UWBP_InventoryEquipment_ItemInfo_C::HorizontalBox_KeyGuide' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, IconArrow_WeightReduce) == 0x000498, "Member 'UWBP_InventoryEquipment_ItemInfo_C::IconArrow_WeightReduce' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Image_Icon_TechPoint) == 0x0004A0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Image_Icon_TechPoint' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Image_ItemIcon) == 0x0004A8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Image_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Image_ItemIconShadow) == 0x0004B0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Image_ItemIconShadow' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Overlay_Consumable) == 0x0004B8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Overlay_Consumable' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Overlay_RarityText) == 0x0004C0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Overlay_RarityText' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, RichText_ItemInfo) == 0x0004C8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::RichText_ItemInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, RichText_ItemName) == 0x0004D0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::RichText_ItemName' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, SizeBox_LiftHalf_RightIcon) == 0x0004D8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::SizeBox_LiftHalf_RightIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, SizeBox_LiftOne_RightIcon) == 0x0004E0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::SizeBox_LiftOne_RightIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Spacer_KeyGuide_Equip) == 0x0004E8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Spacer_KeyGuide_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Spacer_KeyGuide_Move) == 0x0004F0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Spacer_KeyGuide_Move' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Spacer_KeyGuide_Use) == 0x0004F8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Spacer_KeyGuide_Use' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_CTNum) == 0x000500, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_CTNum' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_Cu) == 0x000508, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_Cu' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_DurableNum) == 0x000510, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_DurableNum' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_Equip) == 0x000518, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_Equip' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_ItemCategory) == 0x000520, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_ItemCategory' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_ItemNumTitle) == 0x000528, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_ItemNumTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_ItemNumValue) == 0x000530, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_ItemNumValue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_MainParamTitle) == 0x000538, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_MainParamTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_MainParamValue) == 0x000540, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_MainParamValue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_NowWeight) == 0x000548, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_NowWeight' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_Ra) == 0x000550, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_Ra' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_SubParamTitle) == 0x000558, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_SubParamTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_SubParamTitle_1) == 0x000560, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_SubParamTitle_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_SubParamValue) == 0x000568, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_SubParamValue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_SubParamValue_1) == 0x000570, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_SubParamValue_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_Tech_PointValue) == 0x000578, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_Tech_PointValue' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, Text_TechPointTitle) == 0x000580, "Member 'UWBP_InventoryEquipment_ItemInfo_C::Text_TechPointTitle' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, TextPowerNum) == 0x000588, "Member 'UWBP_InventoryEquipment_ItemInfo_C::TextPowerNum' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, VerticalBox_AdditionalInfo) == 0x000590, "Member 'UWBP_InventoryEquipment_ItemInfo_C::VerticalBox_AdditionalInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_addeffect) == 0x000598, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_addeffect' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_addeffect_1) == 0x0005A0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_addeffect_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_addeffect_2) == 0x0005A8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_addeffect_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_addeffect_3) == 0x0005B0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_addeffect_3' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_Caution) == 0x0005B8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_Caution' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_ItemInfo_Tecnology) == 0x0005C0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_ItemInfo_Tecnology' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_InventoryEquipment_PalIcon) == 0x0005C8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_InventoryEquipment_PalIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_MainMenu_Pal_StatusElement) == 0x0005D0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_MainMenu_Pal_StatusElement' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PalKeyGuideIcon) == 0x0005D8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PalKeyGuideIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PalKeyGuideIcon_1) == 0x0005E0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PalKeyGuideIcon_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PlayerInputKeyGuideIcon) == 0x0005E8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PlayerInputKeyGuideIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PlayerInputKeyGuideIcon_1) == 0x0005F0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PlayerInputKeyGuideIcon_1' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PlayerInputKeyGuideIcon_2) == 0x0005F8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PlayerInputKeyGuideIcon_2' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_PlayerInputKeyGuideIcon_65) == 0x000600, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_PlayerInputKeyGuideIcon_65' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, WBP_ShopSellPrice) == 0x000608, "Member 'UWBP_InventoryEquipment_ItemInfo_C::WBP_ShopSellPrice' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, NowDisplayType) == 0x000610, "Member 'UWBP_InventoryEquipment_ItemInfo_C::NowDisplayType' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, DefaultDisplayType) == 0x000611, "Member 'UWBP_InventoryEquipment_ItemInfo_C::DefaultDisplayType' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, MainParamMsgIDMap) == 0x000618, "Member 'UWBP_InventoryEquipment_ItemInfo_C::MainParamMsgIDMap' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, SubParamMsgIDMap) == 0x000668, "Member 'UWBP_InventoryEquipment_ItemInfo_C::SubParamMsgIDMap' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, MainParamShieldOverrideMsgID) == 0x0006B8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::MainParamShieldOverrideMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, UseItem) == 0x0006C8, "Member 'UWBP_InventoryEquipment_ItemInfo_C::UseItem' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, CachedDisplayInfo) == 0x0006D0, "Member 'UWBP_InventoryEquipment_ItemInfo_C::CachedDisplayInfo' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, EquipMsgID) == 0x000700, "Member 'UWBP_InventoryEquipment_ItemInfo_C::EquipMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, RemoveEquipMsgID) == 0x000710, "Member 'UWBP_InventoryEquipment_ItemInfo_C::RemoveEquipMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, ItemNumTitleMsgID) == 0x000720, "Member 'UWBP_InventoryEquipment_ItemInfo_C::ItemNumTitleMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, HPRegeneMsgID) == 0x000730, "Member 'UWBP_InventoryEquipment_ItemInfo_C::HPRegeneMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, RegeneDurationMsgID) == 0x000740, "Member 'UWBP_InventoryEquipment_ItemInfo_C::RegeneDurationMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, MaskedTechTitleMsgID) == 0x000750, "Member 'UWBP_InventoryEquipment_ItemInfo_C::MaskedTechTitleMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, MaskedTechDescMsgID) == 0x000760, "Member 'UWBP_InventoryEquipment_ItemInfo_C::MaskedTechDescMsgID' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, RarityMsgIDs) == 0x000770, "Member 'UWBP_InventoryEquipment_ItemInfo_C::RarityMsgIDs' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, IsBossTechPoint) == 0x000780, "Member 'UWBP_InventoryEquipment_ItemInfo_C::IsBossTechPoint' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, NormalMsgId) == 0x000788, "Member 'UWBP_InventoryEquipment_ItemInfo_C::NormalMsgId' has a wrong offset!");
static_assert(offsetof(UWBP_InventoryEquipment_ItemInfo_C, AdditionalInfoArray) == 0x000798, "Member 'UWBP_InventoryEquipment_ItemInfo_C::AdditionalInfoArray' has a wrong offset!");

}

