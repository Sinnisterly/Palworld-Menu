#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionPairBehaviorBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActionPairBehaviorBase.BP_ActionPairBehaviorBase_C
// 0x0120 (0x0260 - 0x0140)
#pragma pack(push, 0x1)
class alignas(0x10) UBP_ActionPairBehaviorBase_C : public UPalActionBase
{
public:
	uint8                                         Pad_3918[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                PlayerGoalPos;                                     // 0x0148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                PalGoalPos;                                        // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FRotator                               PlayerGoalRotate;                                  // 0x0178(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FRotator                               PalGoalRotate;                                     // 0x0190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	double                                        Timer;                                             // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             FinishEvent;                                       // 0x01B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, AdvancedDisplay, BlueprintCallable)
	double                                        MotionTimeSecond;                                  // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PettingCamera_C*                    Camera;                                            // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        LerpSpeed;                                         // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          RemovePalMode;                                     // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_3919[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RemoveGoalPos;                                     // 0x01E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        AlphaRemove;                                       // 0x0200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        TempDeltaTime;                                     // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        TempAnimRate;                                      // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsJumpCancel;                                      // 0x0218(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	EPalActionType                                MonsterActionMontageType;                          // 0x0219(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalFacialEyeType                             FacialType;                                        // 0x021A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391A[0x5];                                     // 0x021B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 HeadEffectAsset;                                   // 0x0220(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EPalActionType                                EndActionType;                                     // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ActionPairBehaviorBase(int32 EntryPoint);
	void FinishEvent__DelegateSignature();
	void FinishPetting();
	void GetHumanAnime(class UAnimMontage** Montage);
	void Is_Valid_Target(bool* IsValid);
	void JumpCancel();
	void OnBeginAction();
	void OnBlendOut_00F343BB4B6F993C5A65D28008648678(class FName NotifyName);
	void OnBlendOut_195B11E24A68AB1C346EBCB5275B82C9(class FName NotifyName);
	void OnBlendOut_AFFE27B5471DDCA5938711B5A98C1BAC(class FName NotifyName);
	void OnCompleted(class AActor* Human, class AActor* Monster);
	void OnCompleted_00F343BB4B6F993C5A65D28008648678(class FName NotifyName);
	void OnCompleted_195B11E24A68AB1C346EBCB5275B82C9(class FName NotifyName);
	void OnCompleted_AFFE27B5471DDCA5938711B5A98C1BAC(class FName NotifyName);
	void OnEndAction();
	void OnInterrupted_00F343BB4B6F993C5A65D28008648678(class FName NotifyName);
	void OnInterrupted_195B11E24A68AB1C346EBCB5275B82C9(class FName NotifyName);
	void OnInterrupted_AFFE27B5471DDCA5938711B5A98C1BAC(class FName NotifyName);
	void OnLoaded_E1928592499A4EC8EA38C6BCC85A61EE(class UObject* Loaded);
	void OnNotifyBegin_00F343BB4B6F993C5A65D28008648678(class FName NotifyName);
	void OnNotifyBegin_195B11E24A68AB1C346EBCB5275B82C9(class FName NotifyName);
	void OnNotifyBegin_AFFE27B5471DDCA5938711B5A98C1BAC(class FName NotifyName);
	void OnNotifyEnd_00F343BB4B6F993C5A65D28008648678(class FName NotifyName);
	void OnNotifyEnd_195B11E24A68AB1C346EBCB5275B82C9(class FName NotifyName);
	void OnNotifyEnd_AFFE27B5471DDCA5938711B5A98C1BAC(class FName NotifyName);
	void RemovePalMoveing();
	class UNiagaraComponent* SpawnNiagara(const struct FVector& Location, class UObject* Object);
	void StartPettingCamera();
	void TickAction(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActionPairBehaviorBase_C">();
	}
	static class UBP_ActionPairBehaviorBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ActionPairBehaviorBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_ActionPairBehaviorBase_C) == 0x000010, "Wrong alignment on UBP_ActionPairBehaviorBase_C");
static_assert(sizeof(UBP_ActionPairBehaviorBase_C) == 0x000260, "Wrong size on UBP_ActionPairBehaviorBase_C");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, UberGraphFrame) == 0x000140, "Member 'UBP_ActionPairBehaviorBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, PlayerGoalPos) == 0x000148, "Member 'UBP_ActionPairBehaviorBase_C::PlayerGoalPos' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, PalGoalPos) == 0x000160, "Member 'UBP_ActionPairBehaviorBase_C::PalGoalPos' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, PlayerGoalRotate) == 0x000178, "Member 'UBP_ActionPairBehaviorBase_C::PlayerGoalRotate' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, PalGoalRotate) == 0x000190, "Member 'UBP_ActionPairBehaviorBase_C::PalGoalRotate' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, Timer) == 0x0001A8, "Member 'UBP_ActionPairBehaviorBase_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, FinishEvent) == 0x0001B0, "Member 'UBP_ActionPairBehaviorBase_C::FinishEvent' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, MotionTimeSecond) == 0x0001C0, "Member 'UBP_ActionPairBehaviorBase_C::MotionTimeSecond' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, Camera) == 0x0001C8, "Member 'UBP_ActionPairBehaviorBase_C::Camera' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, Alpha) == 0x0001D0, "Member 'UBP_ActionPairBehaviorBase_C::Alpha' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, LerpSpeed) == 0x0001D8, "Member 'UBP_ActionPairBehaviorBase_C::LerpSpeed' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, RemovePalMode) == 0x0001E0, "Member 'UBP_ActionPairBehaviorBase_C::RemovePalMode' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, RemoveGoalPos) == 0x0001E8, "Member 'UBP_ActionPairBehaviorBase_C::RemoveGoalPos' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, AlphaRemove) == 0x000200, "Member 'UBP_ActionPairBehaviorBase_C::AlphaRemove' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, TempDeltaTime) == 0x000208, "Member 'UBP_ActionPairBehaviorBase_C::TempDeltaTime' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, TempAnimRate) == 0x000210, "Member 'UBP_ActionPairBehaviorBase_C::TempAnimRate' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, IsJumpCancel) == 0x000218, "Member 'UBP_ActionPairBehaviorBase_C::IsJumpCancel' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, MonsterActionMontageType) == 0x000219, "Member 'UBP_ActionPairBehaviorBase_C::MonsterActionMontageType' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, FacialType) == 0x00021A, "Member 'UBP_ActionPairBehaviorBase_C::FacialType' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, HeadEffectAsset) == 0x000220, "Member 'UBP_ActionPairBehaviorBase_C::HeadEffectAsset' has a wrong offset!");
static_assert(offsetof(UBP_ActionPairBehaviorBase_C, EndActionType) == 0x000250, "Member 'UBP_ActionPairBehaviorBase_C::EndActionType' has a wrong offset!");

}

