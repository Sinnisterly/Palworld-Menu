#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_LookSideMove

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionAbort
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionAbort final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionAbort) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionAbort");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionAbort) == 0x000008, "Wrong size on BP_AIAction_LookSideMove_C_ActionAbort");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionAbort, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionAbort::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionFinished final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionFinished");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionFinished) == 0x000010, "Wrong size on BP_AIAction_LookSideMove_C_ActionFinished");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionFinished, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionFinished::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_ActionFinished::WithResult' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionPause
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionPause final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionPause) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionPause");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionPause) == 0x000008, "Wrong size on BP_AIAction_LookSideMove_C_ActionPause");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionPause, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionPause::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionPostTick
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionPostTick final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionPostTick) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionPostTick");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionPostTick) == 0x000010, "Wrong size on BP_AIAction_LookSideMove_C_ActionPostTick");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionPostTick, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionPostTick::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionPostTick, DeltaSeconds) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_ActionPostTick::DeltaSeconds' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionResume
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionResume final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionResume) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionResume");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionResume) == 0x000008, "Wrong size on BP_AIAction_LookSideMove_C_ActionResume");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionResume, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionResume::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionStart final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionStart) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionStart");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionStart) == 0x000008, "Wrong size on BP_AIAction_LookSideMove_C_ActionStart");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionStart, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionStart::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionTick
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionTick final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionTick) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionTick");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionTick) == 0x000010, "Wrong size on BP_AIAction_LookSideMove_C_ActionTick");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionTick, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionTick::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionTick, DeltaSeconds) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_ActionTick::DeltaSeconds' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ActionTickAnyThread
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_LookSideMove_C_ActionTickAnyThread final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ActionTickAnyThread) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ActionTickAnyThread");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ActionTickAnyThread) == 0x000010, "Wrong size on BP_AIAction_LookSideMove_C_ActionTickAnyThread");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionTickAnyThread, ControlledPawn) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ActionTickAnyThread::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ActionTickAnyThread, DeltaSeconds) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_ActionTickAnyThread::DeltaSeconds' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.CheckWalkable
// 0x0218 (0x0218 - 0x0000)
struct BP_AIAction_LookSideMove_C_CheckWalkable final
{
public:
	bool                                          IsRight;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3709[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GoalPos;                                           // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RightMulti;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SelfPos;                                           // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LeftRequestPoint;                                  // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightRequestPoint;                                 // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Param_SelfToTarget;                                // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370A[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_OutGoalLocation; // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_ReturnValue; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370B[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_CheckWalkable) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_CheckWalkable");
static_assert(sizeof(BP_AIAction_LookSideMove_C_CheckWalkable) == 0x000218, "Wrong size on BP_AIAction_LookSideMove_C_CheckWalkable");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, IsRight) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::IsRight' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, Success) == 0x000001, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::Success' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, GoalPos) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::GoalPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, RightMulti) == 0x000020, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::RightMulti' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, SelfPos) == 0x000028, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::SelfPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, Distance) == 0x000040, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::Distance' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, LeftRequestPoint) == 0x000048, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::LeftRequestPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, RightRequestPoint) == 0x000060, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::RightRequestPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, RightVector) == 0x000078, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::RightVector' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, Param_SelfToTarget) == 0x000090, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::Param_SelfToTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_GetController_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, K2Node_DynamicCast_AsPal_AIController) == 0x0000B0, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_OutGoalLocation) == 0x0000C0, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_OutGoalLocation' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_ReturnValue) == 0x0000D8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_IsExistPathForLocation_ForBP_HeightRangeCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000110, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000128, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000140, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000158, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Cross_VectorVector_ReturnValue) == 0x000170, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Add_VectorVector_ReturnValue) == 0x000188, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0001A0, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001B8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001D0, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_CheckWalkable, CallFunc_Vector_Normal2D_ReturnValue) == 0x000200, "Member 'BP_AIAction_LookSideMove_C_CheckWalkable::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.ExecuteUbergraph_BP_AIAction_LookSideMove
// 0x0158 (0x0158 - 0x0000)
struct BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWalkable_Success;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckWalkable_GoalPos;                    // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWalkable_Success_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_370F[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckWalkable_GoalPos_1;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWalkable_Success_2;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3710[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckWalkable_GoalPos_2;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWalkable_Success_3;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3711[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckWalkable_GoalPos_3;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_4;                     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_5;                     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_6;                     // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult_1;                         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3712[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_AIAction_FrontDashForLeave_C*       CallFunc_SpawnObject_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PushChildAction_ReturnValue;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3713[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3714[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPawnAction*                            K2Node_Event_Action;                               // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3715[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_2;                       // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3716[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_7;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWalkable_Success_4;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3717[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CheckWalkable_GoalPos_4;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds_1;                       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove");
static_assert(sizeof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove) == 0x000158, "Wrong size on BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, EntryPoint) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_Success) == 0x000020, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_Success' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_GoalPos) == 0x000028, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_GoalPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_Success_1) == 0x000040, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_Success_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_GoalPos_1) == 0x000048, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_GoalPos_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_Success_2) == 0x000060, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_Success_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_GoalPos_2) == 0x000068, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_GoalPos_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_Success_3) == 0x000080, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_Success_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_GoalPos_3) == 0x000088, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_GoalPos_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_3) == 0x0000A0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_4) == 0x0000A8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_5) == 0x0000B0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_5' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_6) == 0x0000B8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_6' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_WithResult_1) == 0x0000C0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_WithResult_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_SpawnObject_ReturnValue) == 0x0000C8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_PushChildAction_ReturnValue) == 0x0000D0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_PushChildAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_GetController_ReturnValue) == 0x0000D8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_K2_GetPawn_ReturnValue) == 0x0000E0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_DynamicCast_AsPal_Character) == 0x0000E8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_GetController_ReturnValue_1) == 0x0000F8, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_Action) == 0x000100, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_Action' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_WithResult) == 0x000108, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_WithResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_2) == 0x000110, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_DeltaSeconds_2) == 0x000118, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_DeltaSeconds_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_7) == 0x000120, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_7' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_Success_4) == 0x000128, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_Success_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_CheckWalkable_GoalPos_4) == 0x000130, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_CheckWalkable_GoalPos_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_ControlledPawn_1) == 0x000148, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, K2Node_Event_DeltaSeconds_1) == 0x000150, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::K2Node_Event_DeltaSeconds_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove, CallFunc_Delay_Duration_ImplicitCast) == 0x000154, "Member 'BP_AIAction_LookSideMove_C_ExecuteUbergraph_BP_AIAction_LookSideMove::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_LookSideMove.BP_AIAction_LookSideMove_C.OnChildActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_LookSideMove_C_OnChildActionFinished final
{
public:
	class UPawnAction*                            Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_LookSideMove_C_OnChildActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_LookSideMove_C_OnChildActionFinished");
static_assert(sizeof(BP_AIAction_LookSideMove_C_OnChildActionFinished) == 0x000010, "Wrong size on BP_AIAction_LookSideMove_C_OnChildActionFinished");
static_assert(offsetof(BP_AIAction_LookSideMove_C_OnChildActionFinished, Action) == 0x000000, "Member 'BP_AIAction_LookSideMove_C_OnChildActionFinished::Action' has a wrong offset!");
static_assert(offsetof(BP_AIAction_LookSideMove_C_OnChildActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_LookSideMove_C_OnChildActionFinished::WithResult' has a wrong offset!");

}

