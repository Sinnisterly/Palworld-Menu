#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_NPC_CombatBase

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionAbort
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ActionAbort final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ActionAbort) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ActionAbort");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ActionAbort) == 0x000008, "Wrong size on BP_AIAction_NPC_CombatBase_C_ActionAbort");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionAbort, ControlledPawn) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ActionAbort::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ActionFinished final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ActionFinished");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ActionFinished) == 0x000010, "Wrong size on BP_AIAction_NPC_CombatBase_C_ActionFinished");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionFinished, ControlledPawn) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ActionFinished::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_ActionFinished::WithResult' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionPause
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ActionPause final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ActionPause) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ActionPause");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ActionPause) == 0x000008, "Wrong size on BP_AIAction_NPC_CombatBase_C_ActionPause");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionPause, ControlledPawn) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ActionPause::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ActionStart final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ActionStart) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ActionStart");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ActionStart) == 0x000008, "Wrong size on BP_AIAction_NPC_CombatBase_C_ActionStart");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionStart, ControlledPawn) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ActionStart::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionTick
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ActionTick final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ActionTick) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ActionTick");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ActionTick) == 0x000010, "Wrong size on BP_AIAction_NPC_CombatBase_C_ActionTick");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionTick, ControlledPawn) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ActionTick::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ActionTick, DeltaSeconds) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_ActionTick::DeltaSeconds' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.AddCombatState
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_AddCombatState final
{
public:
	class UClass*                                 Param_Class;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStateMachineStateBase_BlueprintBase* CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_AddCombatState) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_AddCombatState");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_AddCombatState) == 0x000010, "Wrong size on BP_AIAction_NPC_CombatBase_C_AddCombatState");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_AddCombatState, Param_Class) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_AddCombatState::Param_Class' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_AddCombatState, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_AddCombatState::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ChangeReturnMode
// 0x0090 (0x0090 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ChangeReturnMode final
{
public:
	bool                                          ChangeSuccess;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EB8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  TempAICon;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetMyBB_self_CastInput;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetMyBB_self_CastInput_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard_1;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetLeaderBB_LeaderBB;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EB9[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetMyBB_self_CastInput_2;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard_2;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoPoint_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBA[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsNearTwoPoint_distance_ImplicitCast;     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ChangeReturnMode");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode) == 0x000090, "Wrong size on BP_AIAction_NPC_CombatBase_C_ChangeReturnMode");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, ChangeSuccess) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::ChangeSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, TempAICon) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::TempAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_self_CastInput) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_PalBrackboard) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_PalBrackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_self_CastInput_1) == 0x000028, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_PalBrackboard_1) == 0x000038, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_PalBrackboard_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetLeaderBB_LeaderBB) == 0x000040, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetLeaderBB_LeaderBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_self_CastInput_2) == 0x000068, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetMyBB_PalBrackboard_2) == 0x000078, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetMyBB_PalBrackboard_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_GetControllerRef_NPCAICon) == 0x000080, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_IsNearTwoPoint_ReturnValue) == 0x000089, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_IsNearTwoPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ChangeReturnMode, CallFunc_IsNearTwoPoint_distance_ImplicitCast) == 0x00008C, "Member 'BP_AIAction_NPC_CombatBase_C_ChangeReturnMode::CallFunc_IsNearTwoPoint_distance_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.DamageResponseForCombat
// 0x0118 (0x0118 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat final
{
public:
	struct FPalDamageResult                       DmgResult;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class APalCharacter*>                  AttackerList;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class APalCharacter*                          CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBB[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0070(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBC[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBD[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBE[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat) == 0x000118, "Wrong size on BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, DmgResult) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::DmgResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, AttackerList) == 0x000050, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::AttackerList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000070, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x0000C0, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, K2Node_DynamicCast_AsPal_Character) == 0x0000C8, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_GetComponentByClass_ReturnValue) == 0x0000D8, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_IsValid_ReturnValue_1) == 0x0000E0, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_GetController_ReturnValue) == 0x0000E8, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_GetController_ReturnValue_1) == 0x0000F0, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000F8, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_Array_Add_ReturnValue_1) == 0x000100, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x000108, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, CallFunc_SelectResponseBySenses_ReturnValue) == 0x000110, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat, K2Node_SwitchEnum_CmpSuccess) == 0x000111, "Member 'BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.Event_OnDead
// 0x0050 (0x0050 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_Event_OnDead final
{
public:
	struct FPalDeadInfo                           DeadInfo;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_Event_OnDead) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_Event_OnDead");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_Event_OnDead) == 0x000050, "Wrong size on BP_AIAction_NPC_CombatBase_C_Event_OnDead");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Event_OnDead, DeadInfo) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_Event_OnDead::DeadInfo' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ExecuteUbergraph_BP_AIAction_NPC_CombatBase
// 0x0180 (0x0180 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EBF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn_4;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC2[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalDeadInfo                           K2Node_CustomEvent_DeadInfo;                       // 0x0098(0x0050)(NoDestructor)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC3[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAICombatModule*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStateMachine*                       CallFunc_SpawnObject_ReturnValue_1;                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC4[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_1;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_2;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetMyBB_self_CastInput;                   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard;                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetMyBB_self_CastInput_1;                 // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetMyBB_PalBrackboard_1;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC5[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_tempDeltaTime_ImplicitCast;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase) == 0x000180, "Wrong size on BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, EntryPoint) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_ControlledPawn_4) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_ControlledPawn_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_K2_GetPawn_ReturnValue) == 0x000018, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_DynamicCast_AsPal_Character) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_ControlledPawn_3) == 0x000048, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_WithResult) == 0x000050, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_WithResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetController_ReturnValue_1) == 0x000058, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000070, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_ControlledPawn_2) == 0x000078, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000080, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetController_ReturnValue_2) == 0x000088, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_CustomEvent_DeadInfo) == 0x000098, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_CustomEvent_DeadInfo' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetControllerRef_NPCAICon) == 0x0000E8, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_ControlledPawn_1) == 0x0000F0, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_DeltaSeconds) == 0x0000F8, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_SpawnObject_ReturnValue) == 0x000100, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_SpawnObject_ReturnValue_1) == 0x000108, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_Event_ControlledPawn) == 0x000118, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetControllerRef_NPCAICon_1) == 0x000130, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetControllerRef_NPCAICon_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetControllerRef_NPCAICon_2) == 0x000138, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetControllerRef_NPCAICon_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetMyBB_self_CastInput) == 0x000140, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetMyBB_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetMyBB_PalBrackboard) == 0x000150, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetMyBB_PalBrackboard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetMyBB_self_CastInput_1) == 0x000158, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetMyBB_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_GetMyBB_PalBrackboard_1) == 0x000168, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_GetMyBB_PalBrackboard_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, CallFunc_IsValid_ReturnValue_2) == 0x000170, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase, K2Node_VariableSet_tempDeltaTime_ImplicitCast) == 0x000178, "Member 'BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase::K2Node_VariableSet_tempDeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.FindTargetNearPoint
// 0x0268 (0x0268 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint final
{
public:
	TArray<struct FVector>                        PointList;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        Const_SerchVector;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	double                                        Const_PerDistance;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TagetToSelfRight;                                  // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetToSelfZ0Normal;                              // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetPos;                                         // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SelfPos;                                           // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Result;                                            // 0x0088(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC6[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC7[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC8[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC9[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint) == 0x000268, "Wrong size on BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, PointList) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::PointList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Const_SerchVector) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Const_SerchVector' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Const_PerDistance) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Const_PerDistance' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, TagetToSelfRight) == 0x000028, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::TagetToSelfRight' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, TargetToSelfZ0Normal) == 0x000040, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::TargetToSelfZ0Normal' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, TargetPos) == 0x000058, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::TargetPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, SelfPos) == 0x000070, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::SelfPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Result) == 0x000088, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Result' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, K2Node_MakeArray_Array) == 0x000098, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, Temp_int_Variable) == 0x0000B4, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_BreakVector_X) == 0x0000D8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000130, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000148, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000160, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000180, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000198, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001B8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Array_Add_ReturnValue) == 0x0001D0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Array_Length_ReturnValue) == 0x0001D4, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Less_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_GetCharacter_ReturnValue) == 0x000210, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_Vector_Normal2D_ReturnValue) == 0x000218, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000230, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000248, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint, CallFunc_IsValid_ReturnValue) == 0x000260, "Member 'BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetBodyActionComponentRef
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef final
{
public:
	class UPalActionComponent*                    ActionComp;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef) == 0x000020, "Wrong size on BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef, ActionComp) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef::ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetControllerRef
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_GetControllerRef final
{
public:
	class ABP_NPCAIController_C*                  NPCAICon;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  K2Node_DynamicCast_AsBP_NPCAIController;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_GetControllerRef) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_GetControllerRef");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_GetControllerRef) == 0x000020, "Wrong size on BP_AIAction_NPC_CombatBase_C_GetControllerRef");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetControllerRef, NPCAICon) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_GetControllerRef::NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetControllerRef, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_GetControllerRef::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetControllerRef, K2Node_DynamicCast_AsBP_NPCAIController) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_GetControllerRef::K2Node_DynamicCast_AsBP_NPCAIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetControllerRef, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIAction_NPC_CombatBase_C_GetControllerRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetLeaderBB
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_GetLeaderBB final
{
public:
	class UBP_PalAIBlackboard_Common_C*           LeaderBB;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GetPalAIBlackboard_C> CallFunc_GetLeaderBB_self_CastInput;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           CallFunc_GetLeaderBB_LeaderPalBrackboard;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_GetLeaderBB");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB) == 0x000028, "Wrong size on BP_AIAction_NPC_CombatBase_C_GetLeaderBB");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB, LeaderBB) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_GetLeaderBB::LeaderBB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB, CallFunc_GetControllerRef_NPCAICon) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_GetLeaderBB::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB, CallFunc_GetLeaderBB_self_CastInput) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_GetLeaderBB::CallFunc_GetLeaderBB_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetLeaderBB, CallFunc_GetLeaderBB_LeaderPalBrackboard) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_GetLeaderBB::CallFunc_GetLeaderBB_LeaderPalBrackboard' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetMovementComponentRef
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef final
{
public:
	class UPalCharacterMovementComponent*         Movement;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         CallFunc_GetPalCharacterMovementComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef) == 0x000010, "Wrong size on BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef, Movement) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef::Movement' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef, CallFunc_GetPalCharacterMovementComponent_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef::CallFunc_GetPalCharacterMovementComponent_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetWeaponHandleRef
// 0x0018 (0x0018 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef final
{
public:
	class UPalNPCAIWeaponHandle*                  WeaponHandle;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCAIWeaponHandle*                  CallFunc_GetWeaponHandle_WeaponHandle;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef) == 0x000018, "Wrong size on BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef, WeaponHandle) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef::WeaponHandle' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef, CallFunc_GetControllerRef_NPCAICon) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef, CallFunc_GetWeaponHandle_WeaponHandle) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef::CallFunc_GetWeaponHandle_WeaponHandle' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.Is Alive Target Actor
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor final
{
public:
	bool                                          Alive;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveActorFlag_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor) == 0x000028, "Wrong size on BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, Alive) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::Alive' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, CallFunc_IsDead_ReturnValue) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, K2Node_DynamicCast_AsPal_Character) == 0x000018, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, CallFunc_GetActiveActorFlag_ReturnValue) == 0x000021, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::CallFunc_GetActiveActorFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.IsEndCurrentState
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_IsEndCurrentState final
{
public:
	bool                                          IsEnd;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStateMachineStateBase*              CallFunc_GetCurrentState_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_AINPC_CombatState_Base_C*           K2Node_DynamicCast_AsBP_AINPC_Combat_State_Base;   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEndSelfState_IsEnd;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_IsEndCurrentState");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState) == 0x000020, "Wrong size on BP_AIAction_NPC_CombatBase_C_IsEndCurrentState");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState, IsEnd) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_IsEndCurrentState::IsEnd' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState, CallFunc_GetCurrentState_ReturnValue) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_IsEndCurrentState::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState, K2Node_DynamicCast_AsBP_AINPC_Combat_State_Base) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_IsEndCurrentState::K2Node_DynamicCast_AsBP_AINPC_Combat_State_Base' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIAction_NPC_CombatBase_C_IsEndCurrentState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsEndCurrentState, CallFunc_IsEndSelfState_IsEnd) == 0x000019, "Member 'BP_AIAction_NPC_CombatBase_C_IsEndCurrentState::CallFunc_IsEndSelfState_IsEnd' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.IsNearTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_IsNearTarget final
{
public:
	double                                        Distance;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IgnoreHeight;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Near;                                              // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoActor_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECD[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_IsNearTwoActor_distance_ImplicitCast;     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_IsNearTarget) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_IsNearTarget");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_IsNearTarget) == 0x000010, "Wrong size on BP_AIAction_NPC_CombatBase_C_IsNearTarget");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsNearTarget, Distance) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_IsNearTarget::Distance' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsNearTarget, IgnoreHeight) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_IsNearTarget::IgnoreHeight' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsNearTarget, Near) == 0x000009, "Member 'BP_AIAction_NPC_CombatBase_C_IsNearTarget::Near' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsNearTarget, CallFunc_IsNearTwoActor_ReturnValue) == 0x00000A, "Member 'BP_AIAction_NPC_CombatBase_C_IsNearTarget::CallFunc_IsNearTwoActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_IsNearTarget, CallFunc_IsNearTwoActor_distance_ImplicitCast) == 0x00000C, "Member 'BP_AIAction_NPC_CombatBase_C_IsNearTarget::CallFunc_IsNearTwoActor_distance_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.LineTraceTarget
// 0x0002 (0x0002 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_LineTraceTarget final
{
public:
	bool                                          HitToTarget;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LineTraceToTarget_ForAIAttack_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_LineTraceTarget) == 0x000001, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_LineTraceTarget");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_LineTraceTarget) == 0x000002, "Wrong size on BP_AIAction_NPC_CombatBase_C_LineTraceTarget");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_LineTraceTarget, HitToTarget) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_LineTraceTarget::HitToTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_LineTraceTarget, CallFunc_LineTraceToTarget_ForAIAttack_ReturnValue) == 0x000001, "Member 'BP_AIAction_NPC_CombatBase_C_LineTraceTarget::CallFunc_LineTraceToTarget_ForAIAttack_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.MoveToTarget
// 0x0328 (0x0328 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_MoveToTarget final
{
public:
	bool                                          Param_IsNearTarget;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GoalPos;                                           // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CheckPointList;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ECF[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoActor_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetCharacter_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearTwoPoint_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED1[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnNavMesh_TargetLocation_ReturnValue;   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED2[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED3[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_1;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_2;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PalAIMoveToTargetLocation_ReturnValue;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED4[0x6];                                     // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_3;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_4;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon_5;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnNavMesh_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED5[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED6[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED7[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED8[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0130(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED9[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_FindTargetNearPoint_PointList;            // 0x0220(0x0010)(ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDA[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDB[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDC[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PalAIMoveToTargetActor_ReturnValue;       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDD[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_MoveToTarget) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_MoveToTarget");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_MoveToTarget) == 0x000328, "Wrong size on BP_AIAction_NPC_CombatBase_C_MoveToTarget");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, Param_IsNearTarget) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::Param_IsNearTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, GoalPos) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::GoalPos' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CheckPointList) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CheckPointList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetCharacter_ReturnValue) == 0x000038, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_IsNearTwoActor_ReturnValue) == 0x000040, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_IsNearTwoActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetCharacter_ReturnValue_1) == 0x000048, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_IsNearTwoPoint_ReturnValue) == 0x000068, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_IsNearTwoPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon) == 0x000070, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_IsOnNavMesh_TargetLocation_ReturnValue) == 0x000078, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_IsOnNavMesh_TargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon_1) == 0x000088, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon_2) == 0x000090, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_PalAIMoveToTargetLocation_ReturnValue) == 0x000098, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_PalAIMoveToTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon_3) == 0x0000A0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon_4) == 0x0000A8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_GetControllerRef_NPCAICon_5) == 0x0000B0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_GetControllerRef_NPCAICon_5' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_IsOnNavMesh_ReturnValue) == 0x0000B8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_IsOnNavMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, Temp_object_Variable) == 0x0000C8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_LineTraceSingle_OutHit) == 0x000130, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_LineTraceSingle_ReturnValue) == 0x000218, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_FindTargetNearPoint_PointList) == 0x000220, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_FindTargetNearPoint_PointList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x000230, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x000231, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_Time) == 0x000234, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_Distance) == 0x000238, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_Location) == 0x000240, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_Normal) == 0x000270, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x000288, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_PhysMat) == 0x0002A0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_HitActor) == 0x0002A8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_HitComponent) == 0x0002B0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_HitBoneName) == 0x0002B8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_BoneName) == 0x0002C0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_HitItem) == 0x0002C8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_ElementIndex) == 0x0002CC, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_FaceIndex) == 0x0002D0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_TraceStart) == 0x0002D8, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_BreakHitResult_TraceEnd) == 0x0002F0, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_PalAIMoveToTargetActor_ReturnValue) == 0x000308, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_PalAIMoveToTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_MoveToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000310, "Member 'BP_AIAction_NPC_CombatBase_C_MoveToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.SightCheckAndResponseForCombat
// 0x00E0 (0x00E0 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat final
{
public:
	bool                                          ChangeNextAction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TempTarget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class APalCharacter*>                  TempTargetList;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0028(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EDF[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE0[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE1[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllPlayer_InSightPlayers;       // 0x00C0(0x0010)(ReferenceParm)
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllAliveNPC_InSightCharacters;  // 0x00D0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat) == 0x0000E0, "Wrong size on BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, ChangeNextAction) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::ChangeNextAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, TempTarget) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::TempTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, TempTargetList) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::TempTargetList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000028, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000078, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_GetController_ReturnValue_1) == 0x000080, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_GetComponentByClass_ReturnValue) == 0x000088, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x000090, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_SelectResponseBySenses_ReturnValue) == 0x000098, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_GetController_ReturnValue_2) == 0x0000A0, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, K2Node_SwitchEnum_CmpSuccess) == 0x0000A8, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000B0, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_SightCheckAllPlayer_InSightPlayers) == 0x0000C0, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_SightCheckAllPlayer_InSightPlayers' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat, CallFunc_SightCheckAllAliveNPC_InSightCharacters) == 0x0000D0, "Member 'BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat::CallFunc_SightCheckAllAliveNPC_InSightCharacters' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TargetChange
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_TargetChange final
{
public:
	class AActor*                                 CallFunc_GetTargetActor_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_TargetChange) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_TargetChange");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_TargetChange) == 0x000008, "Wrong size on BP_AIAction_NPC_CombatBase_C_TargetChange");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetChange, CallFunc_GetTargetActor_ReturnValue) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_TargetChange::CallFunc_GetTargetActor_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TargetPlayerCameraCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck final
{
public:
	bool                                          AttackAble;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InFanShap_PlayerCamera_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck) == 0x000018, "Wrong size on BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck, AttackAble) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck::AttackAble' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck, K2Node_DynamicCast_AsPal_Player_Character) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck, CallFunc_InFanShap_PlayerCamera_ReturnValue) == 0x000011, "Member 'BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck::CallFunc_InFanShap_PlayerCamera_ReturnValue' has a wrong offset!");

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TickFinishCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_AIAction_NPC_CombatBase_C_TickFinishCheck final
{
public:
	bool                                          ActionFinish;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBattleMode_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ChangeReturnMode_ChangeSuccess;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EE3[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPCAIController_C*                  CallFunc_GetControllerRef_NPCAICon;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck) == 0x000008, "Wrong alignment on BP_AIAction_NPC_CombatBase_C_TickFinishCheck");
static_assert(sizeof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck) == 0x000018, "Wrong size on BP_AIAction_NPC_CombatBase_C_TickFinishCheck");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, ActionFinish) == 0x000000, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::ActionFinish' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, CallFunc_IsBattleMode_ReturnValue) == 0x000001, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::CallFunc_IsBattleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, CallFunc_ChangeReturnMode_ChangeSuccess) == 0x000002, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::CallFunc_ChangeReturnMode_ChangeSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, CallFunc_GetControllerRef_NPCAICon) == 0x000008, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::CallFunc_GetControllerRef_NPCAICon' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_NPC_CombatBase_C_TickFinishCheck, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_AIAction_NPC_CombatBase_C_TickFinishCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

