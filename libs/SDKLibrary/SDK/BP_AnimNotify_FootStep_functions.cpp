#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AnimNotify_FootStep

#include "Basic.hpp"

#include "BP_AnimNotify_FootStep_classes.hpp"
#include "BP_AnimNotify_FootStep_parameters.hpp"


namespace SDK
{

// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.Create Foot Step Effect
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FootTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::Create_Foot_Step_Effect(class AActor* OwnerActor, const struct FTransform& FootTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "Create Foot Step Effect");

	Params::BP_AnimNotify_FootStep_C_Create_Foot_Step_Effect Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.FootTransform = std::move(FootTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.CreateEffect
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FootTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPalLandingType                         NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPhysicalSurface                        PhysicalSurface                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::CreateEffect(class AActor* Owner, const struct FTransform& FootTransform, EPalLandingType NewParam, EPhysicalSurface PhysicalSurface) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "CreateEffect");

	Params::BP_AnimNotify_FootStep_C_CreateEffect Parms{};

	Parms.Owner = Owner;
	Parms.FootTransform = std::move(FootTransform);
	Parms.NewParam = NewParam;
	Parms.PhysicalSurface = PhysicalSurface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.CreateFootstepDecal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       FootTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::CreateFootstepDecal(class AActor* Owner, const struct FTransform& FootTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "CreateFootstepDecal");

	Params::BP_AnimNotify_FootStep_C_CreateFootstepDecal Parms{};

	Parms.Owner = Owner;
	Parms.FootTransform = std::move(FootTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.Get Foot Transform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPalFootType                            Param_FootType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       NewTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::Get_Foot_Transform(class AActor* Owner, EPalFootType Param_FootType, struct FTransform* NewTransform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "Get Foot Transform");

	Params::BP_AnimNotify_FootStep_C_Get_Foot_Transform Parms{};

	Parms.Owner = Owner;
	Parms.Param_FootType = Param_FootType;

	UObject::ProcessEvent(Func, &Parms);

	if (NewTransform != nullptr)
		*NewTransform = std::move(Parms.NewTransform);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.IsFootStepRun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_IsFootStepRun                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::IsFootStepRun(class AActor* Owner, bool* Param_IsFootStepRun) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "IsFootStepRun");

	Params::BP_AnimNotify_FootStep_C_IsFootStepRun Parms{};

	Parms.Owner = Owner;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsFootStepRun != nullptr)
		*Param_IsFootStepRun = Parms.Param_IsFootStepRun;
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.IsPlaySound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    PlaySound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::IsPlaySound(bool* PlaySound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "IsPlaySound");

	Params::BP_AnimNotify_FootStep_C_IsPlaySound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlaySound != nullptr)
		*PlaySound = Parms.PlaySound;
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.IsSteppingShallows
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::IsSteppingShallows(class AActor* OwnerActor, bool* NewParam) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "IsSteppingShallows");

	Params::BP_AnimNotify_FootStep_C_IsSteppingShallows Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.MakeSwitchStatePalSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class APalMonsterCharacter*             Pal                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           PalSize                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::MakeSwitchStatePalSize(class APalMonsterCharacter* Pal, class FString* PalSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "MakeSwitchStatePalSize");

	Params::BP_AnimNotify_FootStep_C_MakeSwitchStatePalSize Parms{};

	Parms.Pal = Pal;

	UObject::ProcessEvent(Func, &Parms);

	if (PalSize != nullptr)
		*PalSize = std::move(Parms.PalSize);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.PlaySound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FPalDataTableRowName_SoundID     SoundId                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::PlaySound(class AActor* Owner, const struct FPalDataTableRowName_SoundID& SoundId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "PlaySound");

	Params::BP_AnimNotify_FootStep_C_PlaySound Parms{};

	Parms.Owner = Owner;
	Parms.SoundId = std::move(SoundId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.PlayStepSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::PlayStepSound(class AActor* Owner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "PlayStepSound");

	Params::BP_AnimNotify_FootStep_C_PlayStepSound Parms{};

	Parms.Owner = Owner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.ProcFootStep
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPalFootType                            Param_FootType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::ProcFootStep(class AActor* Owner, EPalFootType Param_FootType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "ProcFootStep");

	Params::BP_AnimNotify_FootStep_C_ProcFootStep Parms{};

	Parms.Owner = Owner;
	Parms.Param_FootType = Param_FootType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.ProcJumpLanding
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPalFootType                            Param_FootType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::ProcJumpLanding(class AActor* Owner, EPalFootType Param_FootType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "ProcJumpLanding");

	Params::BP_AnimNotify_FootStep_C_ProcJumpLanding Parms{};

	Parms.Owner = Owner;
	Parms.Param_FootType = Param_FootType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.Received_Notify
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USkeletalMeshComponent*           MeshComp                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UAnimSequenceBase*                Animation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FAnimNotifyEventReference        EventReference                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_AnimNotify_FootStep_C::Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, const struct FAnimNotifyEventReference& EventReference) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "Received_Notify");

	Params::BP_AnimNotify_FootStep_C_Received_Notify Parms{};

	Parms.MeshComp = MeshComp;
	Parms.Animation = Animation;
	Parms.EventReference = std::move(EventReference);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AnimNotify_FootStep.BP_AnimNotify_FootStep_C.SpawnRollStepEffect
// (Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           Owner                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AnimNotify_FootStep_C::SpawnRollStepEffect(class AActor* Owner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AnimNotify_FootStep_C", "SpawnRollStepEffect");

	Params::BP_AnimNotify_FootStep_C_SpawnRollStepEffect Parms{};

	Parms.Owner = Owner;

	UObject::ProcessEvent(Func, &Parms);
}

}

