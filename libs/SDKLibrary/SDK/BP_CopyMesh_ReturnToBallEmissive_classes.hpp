#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CopyMesh_ReturnToBallEmissive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CopyMesh_ReturnToBallEmissive.BP_CopyMesh_ReturnToBallEmissive_C
// 0x0060 (0x0300 - 0x02A0)
class ABP_CopyMesh_ReturnToBallEmissive_C final : public APalCopyMeshVisualEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsEnd;                                             // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D7[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DissolveTime;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EmissionTimer;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentEmission;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EmissionMax;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EmissionTime;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveTimer;                                     // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DissolveStartTime;                                 // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDissolve;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NSStartTime;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndVisualEffect;                                 // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void End();
	void ExecuteUbergraph_BP_CopyMesh_ReturnToBallEmissive(int32 EntryPoint);
	void PlayPalReturnSound();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetEmission(double Value);
	void SetFade(double Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CopyMesh_ReturnToBallEmissive_C">();
	}
	static class ABP_CopyMesh_ReturnToBallEmissive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CopyMesh_ReturnToBallEmissive_C>();
	}
};
static_assert(alignof(ABP_CopyMesh_ReturnToBallEmissive_C) == 0x000008, "Wrong alignment on ABP_CopyMesh_ReturnToBallEmissive_C");
static_assert(sizeof(ABP_CopyMesh_ReturnToBallEmissive_C) == 0x000300, "Wrong size on ABP_CopyMesh_ReturnToBallEmissive_C");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, UberGraphFrame) == 0x0002A0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, IsEnd) == 0x0002A8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::IsEnd' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, DissolveTime) == 0x0002B0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::DissolveTime' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, EmissionTimer) == 0x0002B8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::EmissionTimer' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, CurrentEmission) == 0x0002C0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::CurrentEmission' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, EmissionMax) == 0x0002C8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::EmissionMax' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, EmissionTime) == 0x0002D0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::EmissionTime' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, DissolveTimer) == 0x0002D8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::DissolveTimer' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, DissolveStartTime) == 0x0002E0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::DissolveStartTime' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, CurrentDissolve) == 0x0002E8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::CurrentDissolve' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, NSStartTime) == 0x0002F0, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::NSStartTime' has a wrong offset!");
static_assert(offsetof(ABP_CopyMesh_ReturnToBallEmissive_C, IsEndVisualEffect) == 0x0002F8, "Member 'ABP_CopyMesh_ReturnToBallEmissive_C::IsEndVisualEffect' has a wrong offset!");

}

