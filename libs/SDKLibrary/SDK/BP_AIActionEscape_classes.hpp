#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIActionEscape

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_AIAction_CanCombatBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIActionEscape.BP_AIActionEscape_C
// 0x0048 (0x01A0 - 0x0158)
class UBP_AIActionEscape_C final : public UBP_AIAction_CanCombatBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AIActionEscape_C;                // 0x0158(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                GoalLocation;                                      // 0x0160(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AcceptanceRadius;                                  // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoveing;                                         // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLockLogic;                                       // 0x0191(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E98[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        EndDistance;                                       // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionAbort(class APawn* ControlledPawn);
	void ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult);
	void ActionTick(class APawn* ControlledPawn, float DeltaSeconds);
	void ChangeReturnMode(bool* ChangeSuccess);
	void ExecuteUbergraph_BP_AIActionEscape(int32 EntryPoint);
	void Is_Far_Spawn_Point(bool* IsFar);
	void NavMeshMove();
	void OnFail_023A017548911A48339C18BEF9D1B042(EPathFollowingResult MovementResult);
	void OnSuccess_023A017548911A48339C18BEF9D1B042(EPathFollowingResult MovementResult);
	void SetGoalLocation(bool* Success);
	void ActionPause(class APawn* ControlledPawn);
	void ActionResume(class APawn* ControlledPawn);
	void ActionStart(class APawn* ControlledPawn);
	void OnSquadMemberDeadEvent(const struct FPalDeadInfo& DeadInbfo);
	void SoundEvent(const struct FVector& EmitLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIActionEscape_C">();
	}
	static class UBP_AIActionEscape_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIActionEscape_C>();
	}
};
static_assert(alignof(UBP_AIActionEscape_C) == 0x000008, "Wrong alignment on UBP_AIActionEscape_C");
static_assert(sizeof(UBP_AIActionEscape_C) == 0x0001A0, "Wrong size on UBP_AIActionEscape_C");
static_assert(offsetof(UBP_AIActionEscape_C, UberGraphFrame_BP_AIActionEscape_C) == 0x000158, "Member 'UBP_AIActionEscape_C::UberGraphFrame_BP_AIActionEscape_C' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, GoalLocation) == 0x000160, "Member 'UBP_AIActionEscape_C::GoalLocation' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, TargetActor) == 0x000178, "Member 'UBP_AIActionEscape_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, Timer) == 0x000180, "Member 'UBP_AIActionEscape_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, AcceptanceRadius) == 0x000188, "Member 'UBP_AIActionEscape_C::AcceptanceRadius' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, IsMoveing) == 0x000190, "Member 'UBP_AIActionEscape_C::IsMoveing' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, IsLockLogic) == 0x000191, "Member 'UBP_AIActionEscape_C::IsLockLogic' has a wrong offset!");
static_assert(offsetof(UBP_AIActionEscape_C, EndDistance) == 0x000198, "Member 'UBP_AIActionEscape_C::EndDistance' has a wrong offset!");

}

