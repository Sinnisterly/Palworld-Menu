#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PocketpairUser

#include "Basic.hpp"

#include "PocketpairUser_classes.hpp"
#include "PocketpairUser_parameters.hpp"


namespace SDK
{

// Function PocketpairUser.HTTPRequestAsyncFunction.HTTPRequestAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           URL                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Verb                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UHTTPRequestAsyncFunction*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UHTTPRequestAsyncFunction* UHTTPRequestAsyncFunction::HTTPRequestAsyncFunction(class UPocketpairUserSubsystem* Target, const class FString& URL, const class FString& Verb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HTTPRequestAsyncFunction", "HTTPRequestAsyncFunction");

	Params::HTTPRequestAsyncFunction_HTTPRequestAsyncFunction Parms{};

	Parms.Target = Target;
	Parms.URL = std::move(URL);
	Parms.Verb = std::move(Verb);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.SwitchUserUIDefaultOnlineSubsystemAsyncFunction.SwitchUserUIAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USwitchUserUIDefaultOnlineSubsystemAsyncFunction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USwitchUserUIDefaultOnlineSubsystemAsyncFunction* USwitchUserUIDefaultOnlineSubsystemAsyncFunction::SwitchUserUIAsyncFunction(class UPocketpairUserSubsystem* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SwitchUserUIDefaultOnlineSubsystemAsyncFunction", "SwitchUserUIAsyncFunction");

	Params::SwitchUserUIDefaultOnlineSubsystemAsyncFunction_SwitchUserUIAsyncFunction Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.LoginDefaultOnlineSubsystemAsyncFunction.LoginDefaultAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoginDefaultOnlineSubsystemAsyncFunction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULoginDefaultOnlineSubsystemAsyncFunction* ULoginDefaultOnlineSubsystemAsyncFunction::LoginDefaultAsyncFunction(class UPocketpairUserSubsystem* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LoginDefaultOnlineSubsystemAsyncFunction", "LoginDefaultAsyncFunction");

	Params::LoginDefaultOnlineSubsystemAsyncFunction_LoginDefaultAsyncFunction Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.LoginEOSAsyncFunction.LoginEOSAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULoginEOSAsyncFunction*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ULoginEOSAsyncFunction* ULoginEOSAsyncFunction::LoginEOSAsyncFunction(class UPocketpairUserSubsystem* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LoginEOSAsyncFunction", "LoginEOSAsyncFunction");

	Params::LoginEOSAsyncFunction_LoginEOSAsyncFunction Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.CreateSessionAsyncFunction.CreateSessionAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDedicatedServer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PublicConnections                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InviteCode                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Desc                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerAddress                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ServerPort                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsPassword                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Version                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerType                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Region                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Namespace                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCreateSessionAsyncFunction*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCreateSessionAsyncFunction* UCreateSessionAsyncFunction::CreateSessionAsyncFunction(class UPocketpairUserSubsystem* Target, bool IsDedicatedServer, int32 PublicConnections, const class FString& InviteCode, const class FString& ServerName, const class FString& Desc, const class FString& ServerAddress, int32 ServerPort, bool IsPassword, const class FString& Version, const class FString& ServerType, const class FString& Region, const class FString& Namespace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CreateSessionAsyncFunction", "CreateSessionAsyncFunction");

	Params::CreateSessionAsyncFunction_CreateSessionAsyncFunction Parms{};

	Parms.Target = Target;
	Parms.IsDedicatedServer = IsDedicatedServer;
	Parms.PublicConnections = PublicConnections;
	Parms.InviteCode = std::move(InviteCode);
	Parms.ServerName = std::move(ServerName);
	Parms.Desc = std::move(Desc);
	Parms.ServerAddress = std::move(ServerAddress);
	Parms.ServerPort = ServerPort;
	Parms.IsPassword = IsPassword;
	Parms.Version = std::move(Version);
	Parms.ServerType = std::move(ServerType);
	Parms.Region = std::move(Region);
	Parms.Namespace = std::move(Namespace);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.FindSessionsAsyncFunction.FindSessionsAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsDedicatedServer                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InviteCode                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerType                                             (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Region                                                 (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LessThanTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           WorldGUID                                              (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Namespace                                              (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFindSessionsAsyncFunction*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFindSessionsAsyncFunction* UFindSessionsAsyncFunction::FindSessionsAsyncFunction(class UPocketpairUserSubsystem* Target, bool IsDedicatedServer, const class FString& InviteCode, const class FString& ServerType, const class FString& Region, const int32 LessThanTime, const class FString& WorldGUID, const class FString& Namespace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FindSessionsAsyncFunction", "FindSessionsAsyncFunction");

	Params::FindSessionsAsyncFunction_FindSessionsAsyncFunction Parms{};

	Parms.Target = Target;
	Parms.IsDedicatedServer = IsDedicatedServer;
	Parms.InviteCode = std::move(InviteCode);
	Parms.ServerType = std::move(ServerType);
	Parms.Region = std::move(Region);
	Parms.LessThanTime = LessThanTime;
	Parms.WorldGUID = std::move(WorldGUID);
	Parms.Namespace = std::move(Namespace);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.SanitizeDisplayNameAsyncFunction.SanitizeDisplayNameAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USanitizeDisplayNameAsyncFunction*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USanitizeDisplayNameAsyncFunction* USanitizeDisplayNameAsyncFunction::SanitizeDisplayNameAsyncFunction(class UPocketpairUserSubsystem* Target, const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SanitizeDisplayNameAsyncFunction", "SanitizeDisplayNameAsyncFunction");

	Params::SanitizeDisplayNameAsyncFunction_SanitizeDisplayNameAsyncFunction Parms{};

	Parms.Target = Target;
	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PingIP.ConstructPingObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPingIP*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPingIP* UPingIP::ConstructPingObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PingIP", "ConstructPingObject");

	Params::PingIP_ConstructPingObject Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PingIP.PollThread
// (Final, Native, Public, BlueprintCallable)

void UPingIP::PollThread()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PingIP", "PollThread");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PocketpairUser.PingIP.SendPing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           IpAddress                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPingIP::SendPing(const class FString& IpAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PingIP", "SendPing");

	Params::PingIP_SendPing Parms{};

	Parms.IpAddress = std::move(IpAddress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PocketpairUser.PocketpairUserInfo.GetDebugString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserInfo::GetDebugString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserInfo", "GetDebugString");

	Params::PocketpairUserInfo_GetDebugString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserInfo.GetNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UPocketpairUserInfo::GetNetId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserInfo", "GetNetId");

	Params::PocketpairUserInfo_GetNetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserInfo.GetNickname
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserInfo::GetNickname() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserInfo", "GetNickname");

	Params::PocketpairUserInfo_GetNickname Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserInfo.GetOnlineSubsystemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UPocketpairUserInfo::GetOnlineSubsystemName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserInfo", "GetOnlineSubsystemName");

	Params::PocketpairUserInfo_GetOnlineSubsystemName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairFriend.GetNetId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UPocketpairFriend::GetNetId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairFriend", "GetNetId");

	Params::PocketpairFriend_GetNetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.AddPingResultCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Address                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Ping                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPocketpairUserSubsystem::AddPingResultCache(const class FString& Address, int32 Ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "AddPingResultCache");

	Params::PocketpairUserSubsystem_AddPingResultCache Parms{};

	Parms.Address = std::move(Address);
	Parms.Ping = Ping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetPingResultCache
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Address                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPocketpairUserSubsystem::GetPingResultCache(const class FString& Address)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetPingResultCache");

	Params::PocketpairUserSubsystem_GetPingResultCache Parms{};

	Parms.Address = std::move(Address);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetPlayerNo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPocketpairUserSubsystem::GetPlayerNo(const class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetPlayerNo");

	Params::PocketpairUserSubsystem_GetPlayerNo Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetSocialId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSocialId                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSocialId UPocketpairUserSubsystem::GetSocialId(const class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetSocialId");

	Params::PocketpairUserSubsystem_GetSocialId Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.OnSessionInviteReceived
// (Final, Native, Public)
// Parameters:
// class FString                           InviteCode                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPocketpairUserSubsystem::OnSessionInviteReceived(const class FString& InviteCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "OnSessionInviteReceived");

	Params::PocketpairUserSubsystem_OnSessionInviteReceived Parms{};

	Parms.InviteCode = std::move(InviteCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PocketpairUser.PocketpairUserSubsystem.UnlockAchievement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPocketpairUserSubsystem::UnlockAchievement(const class FString& ID, float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "UnlockAchievement");

	Params::PocketpairUserSubsystem_UnlockAchievement Parms{};

	Parms.ID = std::move(ID);
	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetDefaultOnlineSubsystemName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UPocketpairUserSubsystem::GetDefaultOnlineSubsystemName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetDefaultOnlineSubsystemName");

	Params::PocketpairUserSubsystem_GetDefaultOnlineSubsystemName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetInviteCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserSubsystem::GetInviteCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetInviteCode");

	Params::PocketpairUserSubsystem_GetInviteCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetLocalUserInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class UPocketpairUserInfo*        ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UPocketpairUserInfo* UPocketpairUserSubsystem::GetLocalUserInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetLocalUserInfo");

	Params::PocketpairUserSubsystem_GetLocalUserInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetSaveDataUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserSubsystem::GetSaveDataUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetSaveDataUserId");

	Params::PocketpairUserSubsystem_GetSaveDataUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetTelemetrySessionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserSubsystem::GetTelemetrySessionId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetTelemetrySessionId");

	Params::PocketpairUserSubsystem_GetTelemetrySessionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.PocketpairUserSubsystem.GetTelemetryUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPocketpairUserSubsystem::GetTelemetryUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PocketpairUserSubsystem", "GetTelemetryUserId");

	Params::PocketpairUserSubsystem_GetTelemetryUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.GDKActivityAsyncFunction.GDKActivityAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ConnectionString                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxPlayerNum                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentPlayerNum                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGDKActivityAsyncFunction*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGDKActivityAsyncFunction* UGDKActivityAsyncFunction::GDKActivityAsyncFunction(class UPocketpairUserSubsystem* Target, const class FString& ConnectionString, int32 MaxPlayerNum, int32 CurrentPlayerNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GDKActivityAsyncFunction", "GDKActivityAsyncFunction");

	Params::GDKActivityAsyncFunction_GDKActivityAsyncFunction Parms{};

	Parms.Target = Target;
	Parms.ConnectionString = std::move(ConnectionString);
	Parms.MaxPlayerNum = MaxPlayerNum;
	Parms.CurrentPlayerNum = CurrentPlayerNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PocketpairUser.GDKInviteAsyncFunction.GDKInviteAsyncFunction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPocketpairUserSubsystem*         Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGDKInviteAsyncFunction*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGDKInviteAsyncFunction* UGDKInviteAsyncFunction::GDKInviteAsyncFunction(class UPocketpairUserSubsystem* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GDKInviteAsyncFunction", "GDKInviteAsyncFunction");

	Params::GDKInviteAsyncFunction_GDKInviteAsyncFunction Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

