#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_NPC_Combat_Melee

#include "Basic.hpp"

#include "BP_AIAction_NPC_CombatBase_classes.hpp"
#include "Engine_structs.hpp"
#include "EPal_NPC_CombatMeleeState_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIAction_NPC_Combat_Melee.BP_AIAction_NPC_Combat_Melee_C
// 0x0088 (0x0210 - 0x0188)
class UBP_AIAction_NPC_Combat_Melee_C final : public UBP_AIAction_NPC_CombatBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AIAction_NPC_Combat_Melee_C;     // 0x0188(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EPal_NPC_CombatMeleeState                     CurrentState;                                      // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_3F1D[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ConstAttackStartRange;                             // 0x0198(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStopTick;                                        // 0x01A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_3F1E[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ConstNearAttackRange;                              // 0x01A8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Timer;                                             // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	TMap<EPal_NPC_CombatMeleeState, class UClass*> StateMap;                                          // 0x01B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        BackwardMiniTime;                                  // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult);
	void ActionPause(class APawn* ControlledPawn);
	void ActionResume(class APawn* ControlledPawn);
	void ActionStart(class APawn* ControlledPawn);
	void ActionTick(class APawn* ControlledPawn, float DeltaSeconds);
	void AddMeleeCombatState(EPal_NPC_CombatMeleeState MeleeState);
	void AddTimer(double* CurrentTime);
	void Change_NextState(EPal_NPC_CombatMeleeState Next);
	void ExecuteUbergraph_BP_AIAction_NPC_Combat_Melee(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIAction_NPC_Combat_Melee_C">();
	}
	static class UBP_AIAction_NPC_Combat_Melee_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIAction_NPC_Combat_Melee_C>();
	}
};
static_assert(alignof(UBP_AIAction_NPC_Combat_Melee_C) == 0x000008, "Wrong alignment on UBP_AIAction_NPC_Combat_Melee_C");
static_assert(sizeof(UBP_AIAction_NPC_Combat_Melee_C) == 0x000210, "Wrong size on UBP_AIAction_NPC_Combat_Melee_C");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, UberGraphFrame_BP_AIAction_NPC_Combat_Melee_C) == 0x000188, "Member 'UBP_AIAction_NPC_Combat_Melee_C::UberGraphFrame_BP_AIAction_NPC_Combat_Melee_C' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, CurrentState) == 0x000190, "Member 'UBP_AIAction_NPC_Combat_Melee_C::CurrentState' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, ConstAttackStartRange) == 0x000198, "Member 'UBP_AIAction_NPC_Combat_Melee_C::ConstAttackStartRange' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, IsStopTick) == 0x0001A0, "Member 'UBP_AIAction_NPC_Combat_Melee_C::IsStopTick' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, ConstNearAttackRange) == 0x0001A8, "Member 'UBP_AIAction_NPC_Combat_Melee_C::ConstNearAttackRange' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, Timer) == 0x0001B0, "Member 'UBP_AIAction_NPC_Combat_Melee_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, StateMap) == 0x0001B8, "Member 'UBP_AIAction_NPC_Combat_Melee_C::StateMap' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_Combat_Melee_C, BackwardMiniTime) == 0x000208, "Member 'UBP_AIAction_NPC_Combat_Melee_C::BackwardMiniTime' has a wrong offset!");

}

