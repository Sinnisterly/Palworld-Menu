#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_FrontDashForLeave

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIAction_FrontDashForLeave.BP_AIAction_FrontDashForLeave_C
// 0x0030 (0x0160 - 0x0130)
class UBP_AIAction_FrontDashForLeave_C final : public UPalAIActionBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0130(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APalCharacter*                          SelfActor;                                         // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        GoalPositionList;                                  // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        RandomRight;                                       // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionAbort(class APawn* ControlledPawn);
	void ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult);
	void ActionPause(class APawn* ControlledPawn);
	void ActionStart(class APawn* ControlledPawn);
	void AddGoalList(double Right, double DistanceRate, const struct FVector& FrontVector, const struct FVector& RightVector);
	void ExecuteUbergraph_BP_AIAction_FrontDashForLeave(int32 EntryPoint);
	void FindGoalPosition(struct FVector* GoalPos, bool* Success);
	void InitByOutside(class APalCharacter* SelfCharacter, class AActor* CombatTarget);
	void OnBlendOut_DD579A8A44C50B0353DE318F089B04F8(class FName NotifyName);
	void OnCompleted_DD579A8A44C50B0353DE318F089B04F8(class FName NotifyName);
	void OnFail_EAE5FEB94CA8D53F1F50028C752C9624(EPathFollowingResult MovementResult);
	void OnInterrupted_DD579A8A44C50B0353DE318F089B04F8(class FName NotifyName);
	void OnNotifyBegin_DD579A8A44C50B0353DE318F089B04F8(class FName NotifyName);
	void OnNotifyEnd_DD579A8A44C50B0353DE318F089B04F8(class FName NotifyName);
	void OnSuccess_EAE5FEB94CA8D53F1F50028C752C9624(EPathFollowingResult MovementResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIAction_FrontDashForLeave_C">();
	}
	static class UBP_AIAction_FrontDashForLeave_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIAction_FrontDashForLeave_C>();
	}
};
static_assert(alignof(UBP_AIAction_FrontDashForLeave_C) == 0x000008, "Wrong alignment on UBP_AIAction_FrontDashForLeave_C");
static_assert(sizeof(UBP_AIAction_FrontDashForLeave_C) == 0x000160, "Wrong size on UBP_AIAction_FrontDashForLeave_C");
static_assert(offsetof(UBP_AIAction_FrontDashForLeave_C, UberGraphFrame) == 0x000130, "Member 'UBP_AIAction_FrontDashForLeave_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_FrontDashForLeave_C, SelfActor) == 0x000138, "Member 'UBP_AIAction_FrontDashForLeave_C::SelfActor' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_FrontDashForLeave_C, TargetActor) == 0x000140, "Member 'UBP_AIAction_FrontDashForLeave_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_FrontDashForLeave_C, GoalPositionList) == 0x000148, "Member 'UBP_AIAction_FrontDashForLeave_C::GoalPositionList' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_FrontDashForLeave_C, RandomRight) == 0x000158, "Member 'UBP_AIAction_FrontDashForLeave_C::RandomRight' has a wrong offset!");

}

