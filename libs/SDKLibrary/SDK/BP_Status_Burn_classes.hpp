#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Status_Burn

#include "Basic.hpp"

#include "BP_Status_WithVisualEffect_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Status_Burn.BP_Status_Burn_C
// 0x0028 (0x0088 - 0x0060)
class UBP_Status_Burn_C final : public UBP_Status_WithVisualEffect_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Status_Burn_C;                   // 0x0060(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           Timer;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DurationTimer_BP;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   KeyName;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rate;                                              // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Status_Burn(int32 EntryPoint);
	void OnBeginStatus();
	void OnEndStatus();
	void TickStatus(float DeltaTime);
	void _________2();
	void _________SlipDamage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Status_Burn_C">();
	}
	static class UBP_Status_Burn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Status_Burn_C>();
	}
};
static_assert(alignof(UBP_Status_Burn_C) == 0x000008, "Wrong alignment on UBP_Status_Burn_C");
static_assert(sizeof(UBP_Status_Burn_C) == 0x000088, "Wrong size on UBP_Status_Burn_C");
static_assert(offsetof(UBP_Status_Burn_C, UberGraphFrame_BP_Status_Burn_C) == 0x000060, "Member 'UBP_Status_Burn_C::UberGraphFrame_BP_Status_Burn_C' has a wrong offset!");
static_assert(offsetof(UBP_Status_Burn_C, Timer) == 0x000068, "Member 'UBP_Status_Burn_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_Status_Burn_C, DurationTimer_BP) == 0x000070, "Member 'UBP_Status_Burn_C::DurationTimer_BP' has a wrong offset!");
static_assert(offsetof(UBP_Status_Burn_C, KeyName) == 0x000078, "Member 'UBP_Status_Burn_C::KeyName' has a wrong offset!");
static_assert(offsetof(UBP_Status_Burn_C, Rate) == 0x000080, "Member 'UBP_Status_Burn_C::Rate' has a wrong offset!");

}

