#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Player

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ABP_Player_structs.hpp"
#include "Engine_structs.hpp"
#include "ControlRig_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Player.ABP_Player_C
// 0x9420 (0x9A30 - 0x0610)
class UABP_Player_C final : public UPalAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0610(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_Player::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0618(0x00C0)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x06D8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x06E0(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_7;                              // 0x06E8(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_6;                   // 0x0708(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_6;                              // 0x07D0(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_5;                   // 0x07F0(0x00C8)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_6;             // 0x08B8(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_6;             // 0x08D8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_16;                   // 0x08F8(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_28;                  // 0x0A00(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_41;                    // 0x0A48(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_40;                    // 0x0A70(0x0028)()
	uint8                                         Pad_3B91[0x8];                                     // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x0AA0(0x01F0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_5;                              // 0x0C90(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_4;                   // 0x0CB0(0x00C8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_18;                       // 0x0D78(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_5;             // 0x0EA0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_17;                       // 0x0EC0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_16;                       // 0x0FE8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_15;                       // 0x1110(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_14;                       // 0x1238(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_13;                       // 0x1360(0x0128)()
	uint8                                         Pad_3B92[0x8];                                     // 0x1488(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_5;                         // 0x1490(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_4;                         // 0x1700(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_3;                         // 0x1970(0x0270)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x1BE0(0x0270)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_15;                   // 0x1E50(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_39;                    // 0x1F58(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_27;                  // 0x1F80(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_38;                    // 0x1FC8(0x0028)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_5;             // 0x1FF0(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_4;                              // 0x2010(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_3;                   // 0x2030(0x00C8)()
	uint8                                         Pad_3B93[0x8];                                     // 0x20F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt;                              // 0x2100(0x0250)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_26;                  // 0x2350(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x2398(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_14;                   // 0x23B8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_37;                    // 0x24C0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_36;                    // 0x24E8(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x2510(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x2530(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x2550(0x00C8)()
	uint8                                         Pad_3B94[0x8];                                     // 0x2618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x2620(0x0270)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x2890(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x28B0(0x0020)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x28D0(0x0270)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_12;                       // 0x2B40(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_25;                  // 0x2C68(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_13;                   // 0x2CB0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_35;                    // 0x2DB8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_34;                    // 0x2DE0(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x2E08(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x2E28(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_24;                  // 0x2EF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x2F38(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_23;                  // 0x2F80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x2FC8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_14;                             // 0x3010(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_12;                   // 0x3058(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_9;                  // 0x3160(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_33;                    // 0x3240(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_32;                    // 0x3268(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x3290(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_31;                    // 0x33A8(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_22;                  // 0x33D0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_30;                    // 0x3418(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_13;                             // 0x3440(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_12;                             // 0x3488(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x34D0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_11;                             // 0x3518(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_29;                    // 0x3560(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x3588(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_11;                       // 0x35A8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x36D0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x37F8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x3920(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_10;                             // 0x3940(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_21;                  // 0x3988(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_28;                    // 0x39D0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_8;                  // 0x39F8(0x00E0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x3AD8(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_11;                   // 0x3B20(0x0108)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x3C28(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_20;                  // 0x3C70(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x3CB8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x3DE0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x3F08(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_10;                   // 0x4030(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_27;                    // 0x4138(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_7;                       // 0x4160(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_26;                    // 0x4228(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_19;                  // 0x4250(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x4298(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x42B8(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x4380(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_7;                  // 0x4488(0x00E0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x4568(0x0118)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x4680(0x0118)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x4798(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x47E0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x48E8(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x49F0(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x4A10(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x4B38(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x4C60(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x4D88(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x4DA8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x4DC8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x4EF0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x5018(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5140(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x5160(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_18;                  // 0x5268(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_17;                  // 0x52B0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_16;                  // 0x52F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_15;                  // 0x5340(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_25;                    // 0x5388(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_14;                  // 0x53B0(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x53F8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_24;                    // 0x5500(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_13;                  // 0x5528(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x5570(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x5598(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x55C0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x5608(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_12;                  // 0x5650(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_6;                  // 0x5698(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x5778(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x57A0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x57C8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x58D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x58F8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x5920(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x5948(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x5970(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_11;                  // 0x5998(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x59E0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_5;                  // 0x5A08(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x5AE8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x5B10(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x5B58(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x5B80(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_10;                  // 0x5BA8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x5BF0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x5C18(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x5D20(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_6;                       // 0x5D48(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x5E10(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x5E38(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x5E80(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_9;                   // 0x5F88(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x5FD0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_5;                       // 0x6018(0x00C8)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x60E0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x6128(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_4;                       // 0x6170(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x6238(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x6260(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x6288(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x62B0(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x62F8(0x00C8)()
	struct FAnimNode_RefPose                      AnimGraphNode_IdentityPose;                        // 0x63C0(0x0010)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x63D0(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x63F8(0x00E0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x64D8(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x6520(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x6540(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x6648(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x6670(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x66B8(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x6798(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x67C0(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x6808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x6830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x6858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x6880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x68A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x68D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x68F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x6920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x6948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x6970(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x6998(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x69C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x69E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x6A10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x6A38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x6A60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x6A88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x6AB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x6AD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x6B00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x6B28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x6B50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x6B78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x6BA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x6BC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x6BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x6C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x6C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x6C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x6C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x6CB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x6CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x6D08(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x6D30(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x6DA0(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x6DC0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x6E30(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x6E50(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x6EC0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x6EE0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x6F28(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x6F48(0x0048)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x6F90(0x0010)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x6FA0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x6FC0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x7008(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x7028(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x7070(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x7090(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x70D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x7120(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x7168(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x7188(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x71D0(0x00E0)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x72B0(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x7320(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x7368(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x73D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x73F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x7440(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x7488(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x74D0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x7518(0x00E0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x75F8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x7640(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x7688(0x0020)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_3;                       // 0x76A8(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x7770(0x0070)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_2;                       // 0x77E0(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x78A8(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x7970(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x79E0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x7A50(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x7AC0(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x7B30(0x0070)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x7BA0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x7BE8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x7C30(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x7C50(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x7C98(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x7CE0(0x0048)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x7D28(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x7DF0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x7E38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x7E80(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x7EC8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x7EE8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_6;                   // 0x7FB0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_5;                   // 0x8078(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_4;                   // 0x8140(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_3;                   // 0x8208(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x82D0(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x8398(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x8460(0x00C8)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x8528(0x0470)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x8998(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x89E0(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x8AC0(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x8BC8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x8BF0(0x0028)()
	float                                         K2Node_PropertyAccess_36;                          // 0x8C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_34;                          // 0x8C1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B95[0x3];                                     // 0x8C1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_31;                          // 0x8C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_PropertyAccess_30;                          // 0x8C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_PropertyAccess_29;                          // 0x8C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_28;                          // 0x8C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_27;                          // 0x8C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B96[0x7];                                     // 0x8C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_25;                          // 0x8C60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_24;                          // 0x8C78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_23;                          // 0x8C90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_22;                          // 0x8CA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_21;                          // 0x8CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_20;                          // 0x8CC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_19;                          // 0x8CC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_18;                          // 0x8CC3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_17;                          // 0x8CC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_16;                          // 0x8CC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalCharacterMovementCustomMode               K2Node_PropertyAccess_15;                          // 0x8CC6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B97[0x1];                                     // 0x8CC7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_14;                          // 0x8CC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_PropertyAccess_13;                          // 0x8CE0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_12;                          // 0x8D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B98[0x7];                                     // 0x8D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         K2Node_PropertyAccess_11;                          // 0x8D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_10;                          // 0x8D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_9;                           // 0x8D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B99[0x6];                                     // 0x8D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         K2Node_PropertyAccess_8;                           // 0x8D58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x8D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x8D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_5;                           // 0x8D62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x8D63(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9A[0x4];                                     // 0x8D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRidingAnimationInfo                   K2Node_PropertyAccess_3;                           // 0x8D68(0x0020)(NoDestructor)
	float                                         K2Node_PropertyAccess_2;                           // 0x8D88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9B[0x4];                                     // 0x8D8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess_1;                           // 0x8D90(0x0258)()
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess;                             // 0x8FE8(0x0258)()
	float                                         __CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83; // 0x9240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9C[0x4];                                     // 0x9244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x9248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAim;                                             // 0x9250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9D[0x7];                                     // 0x9251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              VelocityXY;                                        // 0x9258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGliding;                                         // 0x9268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9E[0x7];                                     // 0x9269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine;                                // 0x9270(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsShooting;                                        // 0x9288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9F[0x7];                                     // 0x9289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorArm;                                     // 0x9290(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsRiding;                                          // 0x92A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA0[0x7];                                     // 0x92A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAnimationInfo                   WeaponInfo;                                        // 0x92B0(0x0258)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FWeaponAnimationInfo                   PrevWeaponInfo;                                    // 0x9508(0x0258)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        ChangeWeaponWeight;                                // 0x9760(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x9768(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward;                                           // 0x9770(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Pitch;                                             // 0x9778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x9780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouch;                                          // 0x9788(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachLeftHand;                                  // 0x9789(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSliding;                                         // 0x978A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRequestSliding;                                  // 0x978B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnableSkySliding;                                // 0x978C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprint;                                          // 0x978D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA1[0x2];                                     // 0x978E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRidingAnimationInfo                   RidingAnimationInfo;                               // 0x9790(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          HasWeapon;                                         // 0x97B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA2[0x7];                                     // 0x97B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KawaiiWeight;                                      // 0x97B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Cloth01_FrontBagRotator;                           // 0x97C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsReloading;                                       // 0x97D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsJumpPreliminary;                                 // 0x97D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEndJump;                                         // 0x97DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA3[0x5];                                     // 0x97DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandTransform;                                 // 0x97E0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidSprintAnimation;                            // 0x9840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA4[0x7];                                     // 0x9841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 RidingActor;                                       // 0x9848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          RiderModelIsBackward;                              // 0x9850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRidingAO;                                       // 0x9851(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA5[0x6];                                     // 0x9852(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine_Ride_WS;                        // 0x9858(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDead;                                            // 0x9870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FootIKEnable;                                      // 0x9871(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLookatEnable;                                    // 0x9872(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA6[0x5];                                     // 0x9873(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LookAtTarget;                                      // 0x9878(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookatInTime;                                      // 0x9890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LookatOutTime;                                     // 0x9898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClimbing;                                        // 0x98A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA7[0x7];                                     // 0x98A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          UniqueRideAnim;                                    // 0x98A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUniqueRiding;                                    // 0x98B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA8[0x7];                                     // 0x98B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Ride_IKPosHandR;                                   // 0x98B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosHandL;                                   // 0x98D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosFootR;                                   // 0x98E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Ride_IKPosFootL;                                   // 0x9900(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Ride_SpineAddRotate;                               // 0x9918(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Ride_HipForwardAdd;                                // 0x9930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Ride_SpineWeight;                                  // 0x9938(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UniqueRide_RightHandWeight;                        // 0x9940(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_HandR;                                 // 0x9948(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_HandL;                                 // 0x9960(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_FootR;                                 // 0x9978(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RideIK_Pole_FootL;                                 // 0x9990(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUniqueRideIK;                                    // 0x99A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA9[0x7];                                     // 0x99A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UniqueRide_LeftHandWeight;                         // 0x99B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FootStepEffect;                                    // 0x99B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalking;                                         // 0x99C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAA[0x3];                                     // 0x99C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ClavicleAdjustDegree;                              // 0x99C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          GlidingAS;                                         // 0x99C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BlendTime_ForEagleGlider;                          // 0x99D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDedicatedServer;                                 // 0x99D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAB[0x7];                                     // 0x99D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TSCached_OwnerCharacter;                           // 0x99E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalShooterComponent*                   TSCached_ShooterComponent;                         // 0x99E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         TSCached_MovementComponent;                        // 0x99F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalLookAtComponent*                    TSCached_LookAtComponent;                          // 0x99F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalFootIKComponent*                    TSCached_FootIkComponent;                          // 0x9A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              TSCached_SkeletalMeshComponent;                    // 0x9A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TSCache_CameraRotator;                             // 0x9A10(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_Entered_Crouch();
	void AnimNotify_Entered_Sprint();
	void AnimNotify_Entered_StandIdle();
	void AnimNotify_Entered_Walk();
	void AnimNotify_Exit_Crouch();
	void AnimNotify_OnCrouch();
	void AnimNotify_OnCrouchMove();
	void AnimNotify_OnExitStand();
	void AnimNotify_OnStandIdle();
	void AnimNotify_OnWalk();
	void AnimNotify_Start_Climb();
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CanSpawnFootStepEffect(bool* CanSpawn);
	void Cloth01FrontBagRotation(struct FRotator* BagRotator);
	void ClothLayer(const struct FPoseLink& InPose, struct FPoseLink* Param_ClothLayer);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_137DA5324EFB47824ACFEFBEB5A9345E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_261928F6456722BEC96B86A1ADEB4BF2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_4416090C4FED6604161B15843476CF58();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_481DAFEA4AE40C2EFF25618E9C553B35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_48DAA1E9450D4A5A46AAFDAD0D2AD2B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_500901BD49D7425200ABDC8BE85C7F25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_51630B8C43E034BBFCD4F29091E8C6E3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_5E053D1A48F0BBA7E66B278333CAD210();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_6D1442674165687285F288812FDB1766();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_71C911754A5B3DC3A317788B75B519B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_7838EE814B598C3A344B9F8500E91FA4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_795924014DFB08AE86A92196C6243888();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_996FDE544B684CDDFCA6A784C6AE9917();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_BC9B02BC4F1BA6E447E80797ACACDD6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E26724CB458B422C7C5E32A0EDC0CCF8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E76C13FE4F7043059C87EA91999E16ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_E94DA2EA481166A5E285B289F1C37CBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_BlendListByBool_F4551B3F4954505485115494503A337D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ControlRig_3EAAD7D248100B118DCFE280A191AF83();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_LayeredBoneBlend_2A54E77148A6C7AEC0F9ED9AE38259A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_21D9D3ED464D031FBD32AAA417100B21();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_33CE303E429A72504664588F8208C607();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_3A5774CC4E383BBEFC920297F7931545();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_402B5DDF4A554B98804CAFBC147C07B1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_6E057CAF466FA7A297375EB70B4C9887();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_71AACF6D4D2B261CA61871BDCE75FA8C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_B70A311E47AEFAEE0A1D709D2E5F6D53();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_ModifyBone_DD28266243FD9E59AD3748AABC4EC94E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_RotationOffsetBlendSpace_3BFF5F7E4AE63A522D3E25878E1FB093();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_RotationOffsetBlendSpace_A05F6A464942E6EC33FA9B8763952574();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_0C4BD33A4A739BB806132999D7790073();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_1BDF9D1447DF958038E620AEAF8B3D3D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_2BA246414BFB0071817AB1B6C2FBC83F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_655311544FEA15E7245AB58E68400569();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_9CD38A96429EBB43F9FCA4AE888E9D30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_A0D7C56C4DB9926E12DA97B72BAE7F9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_C70243AF44D929CECBC285B95A209F65();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_DE4CD99543A8127206BEFDA34A61B600();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_ED5C3EC2486FB5B5EA51D8A3B5A970C9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_SequencePlayer_F8FF710E41ED5F7DA3BA9BAFE633876D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_1CFB42474BCF26A449A2E3960AF20DC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_22357FDA45F4F504502F4D9C2B8DAC0B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_690EA54243E92C4F5F8441A6ACAD0053();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7791845548B5FB3059EB7DABA1AC82E1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7BFFAF7F4E48FAADBB3FC4A30EEFAC05();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_7E971E664EA213C4A22D748CAF7084D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_819BBAD54A8DC3F5CD5532AB19D034AA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_8E3C577B4AB26BF954C089A7AE5DB9F4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_A134763D4D6875423DA3FB8416C19B47();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_ACBBE620474D08C7FF2166BE65257A91();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_ADB9F44F417FA3429012D4AC0960FE81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_B11373AF493FD1828F548C9C6DFCE1CF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_B81AB908417297CD4DEAABAD0C247287();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_BAAF9A3E45024386AB704DA5C92DDA6F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_BE56BE41476FF7AE05D9CF90C9BEB1A2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TransitionResult_DE4B6EE04F5CA7CAF338B8AC885C2C42();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TwoBoneIK_526ABD1A42AD6ADBA987689868DF9ACB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Player_AnimGraphNode_TwoBoneIK_64CC3FAB4A2F8101A3ABCDAB23163E95();
	void ExecuteUbergraph_ABP_Player(int32 EntryPoint);
	void FootIK(const struct FPoseLink& InPose_1, struct FPoseLink* Param_FootIK);
	void GameThreadUpdate(double DeltaTime);
	void GetFootStepCharacterSpeed(double* CharacterSpeed);
	void GetFootStepEffectScale(double* Scale);
	void GetRideIKPos(class FName SocketName, const struct FTransform& ConvTF, class USkeletalMeshComponent* Mesh, struct FVector* IKPos);
	void LeftHandAttach(const struct FPoseLink& InPose, struct FPoseLink* Param_LeftHandAttach);
	void Lookat(const struct FPoseLink& InPose_2, struct FPoseLink* Param_Lookat);
	void LookatParameterUpdate();
	void PalCharacterMovementComponentUpdate();
	void PlaySound(class FName SoundId);
	void RiderComponent_UniqueRideUpdate(class UPalRiderComponent* RiderComponent, class APalCharacter* ThisCharacter, double DeltaTime);
	void RiderComponentUpdate(class UPalRiderComponent* PalRiderComponent);
	void RidingOverride(const struct FPoseLink& InPose_0, struct FPoseLink* Param_RidingOverride);
	void SerWeaponNum(class UPalShooterComponent* ShooterComponent, int32* WeaponNum);
	void ShooterComponentUpdate();
	void StartFootStepEffect();
	void StopFootStepEffect();
	void TempFixLeftHandAttach();
	void UniqueRideFullBodyIK(const struct FPoseLink& InPose_3, struct FPoseLink* Param_UniqueRideFullBodyIK);
	void Update_Foot_Step_Effect(double DeltaTime);
	void UpdateAnimationParameter(class APalCharacter* ThisCharacter, double DeltaTime);
	void WeaponUpperOverride(const struct FPoseLink& InPose, struct FPoseLink* Param_WeaponUpperOverride);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Player_C">();
	}
	static class UABP_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Player_C>();
	}
};
static_assert(alignof(UABP_Player_C) == 0x000010, "Wrong alignment on UABP_Player_C");
static_assert(sizeof(UABP_Player_C) == 0x009A30, "Wrong size on UABP_Player_C");
static_assert(offsetof(UABP_Player_C, UberGraphFrame) == 0x000610, "Member 'UABP_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, __AnimBlueprintMutables) == 0x000618, "Member 'UABP_Player_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimBlueprintExtension_PropertyAccess) == 0x0006D8, "Member 'UABP_Player_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimBlueprintExtension_Base) == 0x0006E0, "Member 'UABP_Player_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_7) == 0x0006E8, "Member 'UABP_Player_C::AnimGraphNode_Root_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_6) == 0x000708, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_6) == 0x0007D0, "Member 'UABP_Player_C::AnimGraphNode_Root_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_5) == 0x0007F0, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_6) == 0x0008B8, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_6) == 0x0008D8, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_16) == 0x0008F8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_28) == 0x000A00, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_41) == 0x000A48, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_41' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_40) == 0x000A70, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_40' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Fabrik) == 0x000AA0, "Member 'UABP_Player_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_5) == 0x000C90, "Member 'UABP_Player_C::AnimGraphNode_Root_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_4) == 0x000CB0, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_18) == 0x000D78, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_5) == 0x000EA0, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_17) == 0x000EC0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_16) == 0x000FE8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_15) == 0x001110, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_14) == 0x001238, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_13) == 0x001360, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_5) == 0x001490, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_4) == 0x001700, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_3) == 0x001970, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_2) == 0x001BE0, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_15) == 0x001E50, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_39) == 0x001F58, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_39' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_27) == 0x001F80, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_38) == 0x001FC8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_38' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_5) == 0x001FF0, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_4) == 0x002010, "Member 'UABP_Player_C::AnimGraphNode_Root_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_3) == 0x002030, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LookAt) == 0x002100, "Member 'UABP_Player_C::AnimGraphNode_LookAt' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_26) == 0x002350, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x002398, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_14) == 0x0023B8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_37) == 0x0024C0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_37' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_36) == 0x0024E8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_36' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_4) == 0x002510, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_3) == 0x002530, "Member 'UABP_Player_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_2) == 0x002550, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK_1) == 0x002620, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_3) == 0x002890, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0028B0, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoBoneIK) == 0x0028D0, "Member 'UABP_Player_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_12) == 0x002B40, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_25) == 0x002C68, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_13) == 0x002CB0, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_35) == 0x002DB8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_35' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_34) == 0x002DE0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_34' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_2) == 0x002E08, "Member 'UABP_Player_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose_1) == 0x002E28, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_24) == 0x002EF0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_21) == 0x002F38, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_23) == 0x002F80, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_20) == 0x002FC8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_14) == 0x003010, "Member 'UABP_Player_C::AnimGraphNode_Slot_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_12) == 0x003058, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_9) == 0x003160, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_33) == 0x003240, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_33' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_32) == 0x003268, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x003290, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_31) == 0x0033A8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_22) == 0x0033D0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_30) == 0x003418, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_13) == 0x003440, "Member 'UABP_Player_C::AnimGraphNode_Slot_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_12) == 0x003488, "Member 'UABP_Player_C::AnimGraphNode_Slot_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_19) == 0x0034D0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_11) == 0x003518, "Member 'UABP_Player_C::AnimGraphNode_Slot_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_29) == 0x003560, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_2) == 0x003588, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_11) == 0x0035A8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_10) == 0x0036D0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_9) == 0x0037F8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x003920, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_10) == 0x003940, "Member 'UABP_Player_C::AnimGraphNode_Slot_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_21) == 0x003988, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_28) == 0x0039D0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_8) == 0x0039F8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_9) == 0x003AD8, "Member 'UABP_Player_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_11) == 0x003B20, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_18) == 0x003C28, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_20) == 0x003C70, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_8) == 0x003CB8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_7) == 0x003DE0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_6) == 0x003F08, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_10) == 0x004030, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_27) == 0x004138, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_7) == 0x004160, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_26) == 0x004228, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_19) == 0x004250, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root_1) == 0x004298, "Member 'UABP_Player_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedInputPose) == 0x0042B8, "Member 'UABP_Player_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_9) == 0x004380, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_7) == 0x004488, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x004568, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x004680, "Member 'UABP_Player_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_8) == 0x004798, "Member 'UABP_Player_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_8) == 0x0047E0, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_7) == 0x0048E8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0049F0, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_5) == 0x004A10, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_4) == 0x004B38, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_3) == 0x004C60, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x004D88, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalToComponentSpace) == 0x004DA8, "Member 'UABP_Player_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_2) == 0x004DC8, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone_1) == 0x004EF0, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ModifyBone) == 0x005018, "Member 'UABP_Player_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ComponentToLocalSpace) == 0x005140, "Member 'UABP_Player_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_6) == 0x005160, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_18) == 0x005268, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_17) == 0x0052B0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_16) == 0x0052F8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_15) == 0x005340, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_25) == 0x005388, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_14) == 0x0053B0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_5) == 0x0053F8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_24) == 0x005500, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_13) == 0x005528, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_23) == 0x005570, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_22) == 0x005598, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_7) == 0x0055C0, "Member 'UABP_Player_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_6) == 0x005608, "Member 'UABP_Player_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_12) == 0x005650, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_6) == 0x005698, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_21) == 0x005778, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_20) == 0x0057A0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_4) == 0x0057C8, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_19) == 0x0058D0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_18) == 0x0058F8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_17) == 0x005920, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_16) == 0x005948, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_15) == 0x005970, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_11) == 0x005998, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_14) == 0x0059E0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_5) == 0x005A08, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_13) == 0x005AE8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_5) == 0x005B10, "Member 'UABP_Player_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_12) == 0x005B58, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_11) == 0x005B80, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_10) == 0x005BA8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_10) == 0x005BF0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_3) == 0x005C18, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_9) == 0x005D20, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_6) == 0x005D48, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_8) == 0x005E10, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_17) == 0x005E38, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_2) == 0x005E80, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_9) == 0x005F88, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_16) == 0x005FD0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_5) == 0x006018, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_15) == 0x0060E0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_14) == 0x006128, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_4) == 0x006170, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_7) == 0x006238, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_6) == 0x006260, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_5) == 0x006288, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_4) == 0x0062B0, "Member 'UABP_Player_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ApplyAdditive) == 0x0062F8, "Member 'UABP_Player_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_IdentityPose) == 0x0063C0, "Member 'UABP_Player_C::AnimGraphNode_IdentityPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_4) == 0x0063D0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_4) == 0x0063F8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_8) == 0x0064D8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Root) == 0x006520, "Member 'UABP_Player_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose_1) == 0x006540, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_3) == 0x006648, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_3) == 0x006670, "Member 'UABP_Player_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_3) == 0x0066B8, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_2) == 0x006798, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_2) == 0x0067C0, "Member 'UABP_Player_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_32) == 0x006808, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_31) == 0x006830, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_30) == 0x006858, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_29) == 0x006880, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_28) == 0x0068A8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_27) == 0x0068D0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_26) == 0x0068F8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_25) == 0x006920, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_24) == 0x006948, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_23) == 0x006970, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_22) == 0x006998, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_21) == 0x0069C0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_20) == 0x0069E8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_19) == 0x006A10, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_18) == 0x006A38, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_17) == 0x006A60, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_16) == 0x006A88, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_15) == 0x006AB0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_14) == 0x006AD8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_13) == 0x006B00, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_12) == 0x006B28, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_11) == 0x006B50, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_10) == 0x006B78, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_9) == 0x006BA0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_8) == 0x006BC8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_7) == 0x006BF0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_6) == 0x006C18, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_5) == 0x006C40, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_4) == 0x006C68, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_3) == 0x006C90, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_2) == 0x006CB8, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult_1) == 0x006CE0, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TransitionResult) == 0x006D08, "Member 'UABP_Player_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_10) == 0x006D30, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_11) == 0x006DA0, "Member 'UABP_Player_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_9) == 0x006DC0, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_10) == 0x006E30, "Member 'UABP_Player_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_8) == 0x006E50, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_9) == 0x006EC0, "Member 'UABP_Player_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_13) == 0x006EE0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_8) == 0x006F28, "Member 'UABP_Player_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot_1) == 0x006F48, "Member 'UABP_Player_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LocalRefPose) == 0x006F90, "Member 'UABP_Player_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_7) == 0x006FA0, "Member 'UABP_Player_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_12) == 0x006FC0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_6) == 0x007008, "Member 'UABP_Player_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_11) == 0x007028, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_5) == 0x007070, "Member 'UABP_Player_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_7) == 0x007090, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_10) == 0x0070D8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_9) == 0x007120, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_4) == 0x007168, "Member 'UABP_Player_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_8) == 0x007188, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_2) == 0x0071D0, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_7) == 0x0072B0, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_6) == 0x007320, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_6) == 0x007368, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_3) == 0x0073D8, "Member 'UABP_Player_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_7) == 0x0073F8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_5) == 0x007440, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_6) == 0x007488, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_5) == 0x0074D0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend_1) == 0x007518, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_4) == 0x0075F8, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_4) == 0x007640, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_2) == 0x007688, "Member 'UABP_Player_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_3) == 0x0076A8, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_5) == 0x007770, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_2) == 0x0077E0, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend_1) == 0x0078A8, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_4) == 0x007970, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0079E0, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_2) == 0x007A50, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer_1) == 0x007AC0, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendSpacePlayer) == 0x007B30, "Member 'UABP_Player_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_3) == 0x007BA0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_2) == 0x007BE8, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult_1) == 0x007C30, "Member 'UABP_Player_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_3) == 0x007C50, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool_1) == 0x007C98, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_2) == 0x007CE0, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_TwoWayBlend) == 0x007D28, "Member 'UABP_Player_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_BlendListByBool) == 0x007DF0, "Member 'UABP_Player_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer_1) == 0x007E38, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SequencePlayer) == 0x007E80, "Member 'UABP_Player_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateResult) == 0x007EC8, "Member 'UABP_Player_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_StateMachine) == 0x007EE8, "Member 'UABP_Player_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_6) == 0x007FB0, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_5) == 0x008078, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_4) == 0x008140, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_3) == 0x008208, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_2) == 0x0082D0, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer_1) == 0x008398, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LinkedAnimLayer) == 0x008460, "Member 'UABP_Player_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_ControlRig) == 0x008528, "Member 'UABP_Player_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_Slot) == 0x008998, "Member 'UABP_Player_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_LayeredBoneBlend) == 0x0089E0, "Member 'UABP_Player_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_SaveCachedPose) == 0x008AC0, "Member 'UABP_Player_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose_1) == 0x008BC8, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AnimGraphNode_UseCachedPose) == 0x008BF0, "Member 'UABP_Player_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_36) == 0x008C18, "Member 'UABP_Player_C::K2Node_PropertyAccess_36' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_34) == 0x008C1C, "Member 'UABP_Player_C::K2Node_PropertyAccess_34' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_31) == 0x008C20, "Member 'UABP_Player_C::K2Node_PropertyAccess_31' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_30) == 0x008C38, "Member 'UABP_Player_C::K2Node_PropertyAccess_30' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_29) == 0x008C3C, "Member 'UABP_Player_C::K2Node_PropertyAccess_29' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_28) == 0x008C40, "Member 'UABP_Player_C::K2Node_PropertyAccess_28' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_27) == 0x008C58, "Member 'UABP_Player_C::K2Node_PropertyAccess_27' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_25) == 0x008C60, "Member 'UABP_Player_C::K2Node_PropertyAccess_25' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_24) == 0x008C78, "Member 'UABP_Player_C::K2Node_PropertyAccess_24' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_23) == 0x008C90, "Member 'UABP_Player_C::K2Node_PropertyAccess_23' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_22) == 0x008CA8, "Member 'UABP_Player_C::K2Node_PropertyAccess_22' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_21) == 0x008CC0, "Member 'UABP_Player_C::K2Node_PropertyAccess_21' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_20) == 0x008CC1, "Member 'UABP_Player_C::K2Node_PropertyAccess_20' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_19) == 0x008CC2, "Member 'UABP_Player_C::K2Node_PropertyAccess_19' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_18) == 0x008CC3, "Member 'UABP_Player_C::K2Node_PropertyAccess_18' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_17) == 0x008CC4, "Member 'UABP_Player_C::K2Node_PropertyAccess_17' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_16) == 0x008CC5, "Member 'UABP_Player_C::K2Node_PropertyAccess_16' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_15) == 0x008CC6, "Member 'UABP_Player_C::K2Node_PropertyAccess_15' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_14) == 0x008CC8, "Member 'UABP_Player_C::K2Node_PropertyAccess_14' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_13) == 0x008CE0, "Member 'UABP_Player_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_12) == 0x008D40, "Member 'UABP_Player_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_11) == 0x008D48, "Member 'UABP_Player_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_10) == 0x008D50, "Member 'UABP_Player_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_9) == 0x008D51, "Member 'UABP_Player_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_8) == 0x008D58, "Member 'UABP_Player_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_7) == 0x008D60, "Member 'UABP_Player_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_6) == 0x008D61, "Member 'UABP_Player_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_5) == 0x008D62, "Member 'UABP_Player_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_4) == 0x008D63, "Member 'UABP_Player_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_3) == 0x008D68, "Member 'UABP_Player_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_2) == 0x008D88, "Member 'UABP_Player_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess_1) == 0x008D90, "Member 'UABP_Player_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, K2Node_PropertyAccess) == 0x008FE8, "Member 'UABP_Player_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, __CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83) == 0x009240, "Member 'UABP_Player_C::__CustomProperty_ClavicleAdjustFloat_3EAAD7D248100B118DCFE280A191AF83' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Speed) == 0x009248, "Member 'UABP_Player_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsAim) == 0x009250, "Member 'UABP_Player_C::IsAim' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, VelocityXY) == 0x009258, "Member 'UABP_Player_C::VelocityXY' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsGliding) == 0x009268, "Member 'UABP_Player_C::IsGliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorForSpine) == 0x009270, "Member 'UABP_Player_C::AimRotatorForSpine' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsShooting) == 0x009288, "Member 'UABP_Player_C::IsShooting' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorArm) == 0x009290, "Member 'UABP_Player_C::AimRotatorArm' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsRiding) == 0x0092A8, "Member 'UABP_Player_C::IsRiding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, WeaponInfo) == 0x0092B0, "Member 'UABP_Player_C::WeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, PrevWeaponInfo) == 0x009508, "Member 'UABP_Player_C::PrevWeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, ChangeWeaponWeight) == 0x009760, "Member 'UABP_Player_C::ChangeWeaponWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Right) == 0x009768, "Member 'UABP_Player_C::Right' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Forward) == 0x009770, "Member 'UABP_Player_C::Forward' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Pitch) == 0x009778, "Member 'UABP_Player_C::Pitch' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Yaw) == 0x009780, "Member 'UABP_Player_C::Yaw' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsCrouch) == 0x009788, "Member 'UABP_Player_C::IsCrouch' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsAttachLeftHand) == 0x009789, "Member 'UABP_Player_C::IsAttachLeftHand' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsSliding) == 0x00978A, "Member 'UABP_Player_C::IsSliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsRequestSliding) == 0x00978B, "Member 'UABP_Player_C::IsRequestSliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsEnableSkySliding) == 0x00978C, "Member 'UABP_Player_C::IsEnableSkySliding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsSprint) == 0x00978D, "Member 'UABP_Player_C::IsSprint' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RidingAnimationInfo) == 0x009790, "Member 'UABP_Player_C::RidingAnimationInfo' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, HasWeapon) == 0x0097B0, "Member 'UABP_Player_C::HasWeapon' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, KawaiiWeight) == 0x0097B8, "Member 'UABP_Player_C::KawaiiWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Cloth01_FrontBagRotator) == 0x0097C0, "Member 'UABP_Player_C::Cloth01_FrontBagRotator' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsReloading) == 0x0097D8, "Member 'UABP_Player_C::IsReloading' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsJumpPreliminary) == 0x0097D9, "Member 'UABP_Player_C::IsJumpPreliminary' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsEndJump) == 0x0097DA, "Member 'UABP_Player_C::IsEndJump' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LeftHandTransform) == 0x0097E0, "Member 'UABP_Player_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsValidSprintAnimation) == 0x009840, "Member 'UABP_Player_C::IsValidSprintAnimation' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RidingActor) == 0x009848, "Member 'UABP_Player_C::RidingActor' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RiderModelIsBackward) == 0x009850, "Member 'UABP_Player_C::RiderModelIsBackward' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UseRidingAO) == 0x009851, "Member 'UABP_Player_C::UseRidingAO' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, AimRotatorForSpine_Ride_WS) == 0x009858, "Member 'UABP_Player_C::AimRotatorForSpine_Ride_WS' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsDead) == 0x009870, "Member 'UABP_Player_C::IsDead' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, FootIKEnable) == 0x009871, "Member 'UABP_Player_C::FootIKEnable' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsLookatEnable) == 0x009872, "Member 'UABP_Player_C::IsLookatEnable' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookAtTarget) == 0x009878, "Member 'UABP_Player_C::LookAtTarget' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookatInTime) == 0x009890, "Member 'UABP_Player_C::LookatInTime' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, LookatOutTime) == 0x009898, "Member 'UABP_Player_C::LookatOutTime' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsClimbing) == 0x0098A0, "Member 'UABP_Player_C::IsClimbing' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRideAnim) == 0x0098A8, "Member 'UABP_Player_C::UniqueRideAnim' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsUniqueRiding) == 0x0098B0, "Member 'UABP_Player_C::IsUniqueRiding' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosHandR) == 0x0098B8, "Member 'UABP_Player_C::Ride_IKPosHandR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosHandL) == 0x0098D0, "Member 'UABP_Player_C::Ride_IKPosHandL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosFootR) == 0x0098E8, "Member 'UABP_Player_C::Ride_IKPosFootR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_IKPosFootL) == 0x009900, "Member 'UABP_Player_C::Ride_IKPosFootL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_SpineAddRotate) == 0x009918, "Member 'UABP_Player_C::Ride_SpineAddRotate' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_HipForwardAdd) == 0x009930, "Member 'UABP_Player_C::Ride_HipForwardAdd' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, Ride_SpineWeight) == 0x009938, "Member 'UABP_Player_C::Ride_SpineWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRide_RightHandWeight) == 0x009940, "Member 'UABP_Player_C::UniqueRide_RightHandWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_HandR) == 0x009948, "Member 'UABP_Player_C::RideIK_Pole_HandR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_HandL) == 0x009960, "Member 'UABP_Player_C::RideIK_Pole_HandL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_FootR) == 0x009978, "Member 'UABP_Player_C::RideIK_Pole_FootR' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, RideIK_Pole_FootL) == 0x009990, "Member 'UABP_Player_C::RideIK_Pole_FootL' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsUniqueRideIK) == 0x0099A8, "Member 'UABP_Player_C::IsUniqueRideIK' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, UniqueRide_LeftHandWeight) == 0x0099B0, "Member 'UABP_Player_C::UniqueRide_LeftHandWeight' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, FootStepEffect) == 0x0099B8, "Member 'UABP_Player_C::FootStepEffect' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsWalking) == 0x0099C0, "Member 'UABP_Player_C::IsWalking' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, ClavicleAdjustDegree) == 0x0099C4, "Member 'UABP_Player_C::ClavicleAdjustDegree' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, GlidingAS) == 0x0099C8, "Member 'UABP_Player_C::GlidingAS' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, BlendTime_ForEagleGlider) == 0x0099D0, "Member 'UABP_Player_C::BlendTime_ForEagleGlider' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, IsDedicatedServer) == 0x0099D8, "Member 'UABP_Player_C::IsDedicatedServer' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_OwnerCharacter) == 0x0099E0, "Member 'UABP_Player_C::TSCached_OwnerCharacter' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_ShooterComponent) == 0x0099E8, "Member 'UABP_Player_C::TSCached_ShooterComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_MovementComponent) == 0x0099F0, "Member 'UABP_Player_C::TSCached_MovementComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_LookAtComponent) == 0x0099F8, "Member 'UABP_Player_C::TSCached_LookAtComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_FootIkComponent) == 0x009A00, "Member 'UABP_Player_C::TSCached_FootIkComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCached_SkeletalMeshComponent) == 0x009A08, "Member 'UABP_Player_C::TSCached_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(UABP_Player_C, TSCache_CameraRotator) == 0x009A10, "Member 'UABP_Player_C::TSCache_CameraRotator' has a wrong offset!");

}

