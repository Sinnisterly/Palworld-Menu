#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterAIControllerBase

#include "Basic.hpp"

#include "BP_MonsterAIControllerBase_classes.hpp"
#include "BP_MonsterAIControllerBase_parameters.hpp"


namespace SDK
{

// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.CreateBaseCampLogMessageText
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPalMonsterControllerBaseCampLogContentContent                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Result                                                 (Parm, OutParm)

void ABP_MonsterAIControllerBase_C::CreateBaseCampLogMessageText(struct FPalMonsterControllerBaseCampLogContent& Content, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "CreateBaseCampLogMessageText");

	Params::BP_MonsterAIControllerBase_C_CreateBaseCampLogMessageText Parms{};

	Parms.Content = std::move(Content);

	UObject::ProcessEvent(Func, &Parms);

	Content = std::move(Parms.Content);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.ExecuteUbergraph_BP_MonsterAIControllerBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::ExecuteUbergraph_BP_MonsterAIControllerBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "ExecuteUbergraph_BP_MonsterAIControllerBase");

	Params::BP_MonsterAIControllerBase_C_ExecuteUbergraph_BP_MonsterAIControllerBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.PlayDefaultAction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIControllerBase_C::PlayDefaultAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "PlayDefaultAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "ReceivePossess");

	Params::BP_MonsterAIControllerBase_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "ReceiveTick");

	Params::BP_MonsterAIControllerBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.SetupBySpawner
// (BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIControllerBase_C::SetupBySpawner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "SetupBySpawner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.ShowBaseCampLog_Internal
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalMonsterControllerBaseCampLogContentContent                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MonsterAIControllerBase_C::ShowBaseCampLog_Internal(struct FPalMonsterControllerBaseCampLogContent& Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "ShowBaseCampLog_Internal");

	Params::BP_MonsterAIControllerBase_C_ShowBaseCampLog_Internal Parms{};

	Parms.Content = std::move(Content);

	UObject::ProcessEvent(Func, &Parms);

	Content = std::move(Parms.Content);
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.To Log Tone Type
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPalMonsterControllerBaseCampLogType    LogType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPalLogContentToneType                  ToneType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::To_Log_Tone_Type(EPalMonsterControllerBaseCampLogType LogType, EPalLogContentToneType* ToneType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "To Log Tone Type");

	Params::BP_MonsterAIControllerBase_C_To_Log_Tone_Type Parms{};

	Parms.LogType = LogType;

	UObject::ProcessEvent(Func, &Parms);

	if (ToneType != nullptr)
		*ToneType = Parms.ToneType;
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.ToLogFontStyleName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPalMonsterControllerBaseCampLogType    LogType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StyleName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::ToLogFontStyleName(EPalMonsterControllerBaseCampLogType LogType, class FName* StyleName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "ToLogFontStyleName");

	Params::BP_MonsterAIControllerBase_C_ToLogFontStyleName Parms{};

	Parms.LogType = LogType;

	UObject::ProcessEvent(Func, &Parms);

	if (StyleName != nullptr)
		*StyleName = Parms.StyleName;
}


// Function BP_MonsterAIControllerBase.BP_MonsterAIControllerBase_C.«¹¿à¤ÙóÈ_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIControllerBase_C::_________0(class APalCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIControllerBase_C", "«¹¿à¤ÙóÈ_0");

	Params::BP_MonsterAIControllerBase_C__________0 Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

