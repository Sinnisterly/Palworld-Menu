#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalInGameMenuItemSlotButton

#include "Basic.hpp"

#include "WBP_PalItemSlotButtonBase_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PalInGameMenuItemSlotButton.WBP_PalInGameMenuItemSlotButton_C
// 0x00A0 (0x0608 - 0x0568)
class UWBP_PalInGameMenuItemSlotButton_C final : public UWBP_PalItemSlotButtonBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_PalInGameMenuItemSlotButton_C;  // 0x0568(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_UnselectToSelect;                              // 0x0570(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_RepairOnToOff;                                 // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Bg_Lock;                                       // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Focus;                                         // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Rarity_0To4;                                   // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Bg_Empty;                                      // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Bg_Normal;                                     // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanelCorrution;                              // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPalProgressBar*                        CorruptionProgressBar;                             // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     CorruptionRemainTime;                              // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusBase;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FocusFrame;                                        // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayRepair;                                     // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Durable;                               // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ItemWeight;                                   // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InventoryEquipment_PalIcon_C*      WBP_InventoryEquipment_PalIcon;                    // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInGameMenuItemSlot_C*           WBP_PalInGameMenuItemSlot;                         // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton;                            // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          HasLiftting;                                       // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnmEvent_Focus();
	void AnmEvent_Rarity(int32 Rarity);
	void AnmEvent_RepairMark(bool IsEnable);
	void AnmEvent_Unfocus();
	void Destruct();
	void ExecuteUbergraph_WBP_PalInGameMenuItemSlotButton(int32 EntryPoint);
	void On_Notify_Durability_Impl(double MaxDurability, double NowDurability, class UWBP_PalItemSlotButtonBase_C* SelfWidget);
	void On_Set_Valid_Slot_Impl();
	void OnDraggedEvent(class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnDroppedEvent(class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnEmptyEvent();
	void OnHoveredEvent(class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnInitialized();
	void OnLiftedEvent(int32 LiftNum, class UWBP_PalItemSlotButtonBase_C* Widget);
	void OnSetCorruptionImpl();
	void OnSetEmptySlotImpl();
	void OnSetValidSlotEvent();
	void OnUnhoveredEvent(class UWBP_PalItemSlotButtonBase_C* Widget);
	void SetEnableDefaultClickSound(bool Enable);
	void SetPalGearIcon(class FName ItemId);
	void SetSlotLock();
	void Toggle_Corruption_Visibility(bool Visible);
	void ToggleLock(bool Lock);
	void RegisterButton(class UCommonButtonBase** Button);
	void RegisterItemSlotWidget(class UWBP_PalItemSlotBase_C** ItemSlotWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PalInGameMenuItemSlotButton_C">();
	}
	static class UWBP_PalInGameMenuItemSlotButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PalInGameMenuItemSlotButton_C>();
	}
};
static_assert(alignof(UWBP_PalInGameMenuItemSlotButton_C) == 0x000008, "Wrong alignment on UWBP_PalInGameMenuItemSlotButton_C");
static_assert(sizeof(UWBP_PalInGameMenuItemSlotButton_C) == 0x000608, "Wrong size on UWBP_PalInGameMenuItemSlotButton_C");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, UberGraphFrame_WBP_PalInGameMenuItemSlotButton_C) == 0x000568, "Member 'UWBP_PalInGameMenuItemSlotButton_C::UberGraphFrame_WBP_PalInGameMenuItemSlotButton_C' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_UnselectToSelect) == 0x000570, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_UnselectToSelect' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_RepairOnToOff) == 0x000578, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_RepairOnToOff' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_Bg_Lock) == 0x000580, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_Bg_Lock' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_Focus) == 0x000588, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_Focus' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_Rarity_0To4) == 0x000590, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_Rarity_0To4' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_Bg_Empty) == 0x000598, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_Bg_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Anm_Bg_Normal) == 0x0005A0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Anm_Bg_Normal' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, CanvasPanelCorrution) == 0x0005A8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::CanvasPanelCorrution' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, CorruptionProgressBar) == 0x0005B0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::CorruptionProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, CorruptionRemainTime) == 0x0005B8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::CorruptionRemainTime' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, FocusBase) == 0x0005C0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::FocusBase' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, FocusFrame) == 0x0005C8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::FocusFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, OverlayRepair) == 0x0005D0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::OverlayRepair' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, ProgressBar_Durable) == 0x0005D8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::ProgressBar_Durable' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, Text_ItemWeight) == 0x0005E0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::Text_ItemWeight' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, WBP_InventoryEquipment_PalIcon) == 0x0005E8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::WBP_InventoryEquipment_PalIcon' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, WBP_PalInGameMenuItemSlot) == 0x0005F0, "Member 'UWBP_PalInGameMenuItemSlotButton_C::WBP_PalInGameMenuItemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, WBP_PalInvisibleButton) == 0x0005F8, "Member 'UWBP_PalInGameMenuItemSlotButton_C::WBP_PalInvisibleButton' has a wrong offset!");
static_assert(offsetof(UWBP_PalInGameMenuItemSlotButton_C, HasLiftting) == 0x000600, "Member 'UWBP_PalInGameMenuItemSlotButton_C::HasLiftting' has a wrong offset!");

}

