#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function ABP_Player.ABP_Player_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Player_C_AnimGraph");
static_assert(sizeof(ABP_Player_C_AnimGraph) == 0x000010, "Wrong size on ABP_Player_C_AnimGraph");
static_assert(offsetof(ABP_Player_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'ABP_Player_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.BlueprintThreadSafeUpdateAnimation
// 0x00D8 (0x00D8 - 0x0000)
struct ABP_Player_C_BlueprintThreadSafeUpdateAnimation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAD[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue_1;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BAF[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_ReturnValue;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_ReturnValue_1;                 // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB0[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast;     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1;   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation) == 0x000008, "Wrong alignment on ABP_Player_C_BlueprintThreadSafeUpdateAnimation");
static_assert(sizeof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation) == 0x0000D8, "Wrong size on ABP_Player_C_BlueprintThreadSafeUpdateAnimation");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, DeltaTime) == 0x000000, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000010, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_GetRightVector_ReturnValue) == 0x000028, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_IsValid_ThreadSafe_ReturnValue) == 0x000040, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_IsValid_ThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000048, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_IsValid_ThreadSafe_ReturnValue_1) == 0x000060, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_IsValid_ThreadSafe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_RInterpTo_ReturnValue) == 0x000080, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_ClampAngle_ReturnValue) == 0x0000A8, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_ClampAngle_ReturnValue_1) == 0x0000B0, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_ClampAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast) == 0x0000B8, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0000BC, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000C0, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_ClampAngle_AngleDegrees_ImplicitCast) == 0x0000C8, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_ClampAngle_AngleDegrees_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_BlueprintThreadSafeUpdateAnimation, CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1) == 0x0000D0, "Member 'ABP_Player_C_BlueprintThreadSafeUpdateAnimation::CallFunc_ClampAngle_AngleDegrees_ImplicitCast_1' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Player_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Player_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Player_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Player_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Player_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Player_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.CanSpawnFootStepEffect
// 0x0058 (0x0058 - 0x0000)
struct ABP_Player_C_CanSpawnFootStepEffect final
{
public:
	bool                                          CanSpawn;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Owner;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UPalRiderComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRiding_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalDebugSetting*                       CallFunc_GetPalDebugSetting_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CallFunc_GetFloorPhisicalSurface_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFloorPhysMaterial_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB4[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnteredWater_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_CanSpawnFootStepEffect) == 0x000008, "Wrong alignment on ABP_Player_C_CanSpawnFootStepEffect");
static_assert(sizeof(ABP_Player_C_CanSpawnFootStepEffect) == 0x000058, "Wrong size on ABP_Player_C_CanSpawnFootStepEffect");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CanSpawn) == 0x000000, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CanSpawn' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, Owner) == 0x000008, "Member 'ABP_Player_C_CanSpawnFootStepEffect::Owner' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsRiding_ReturnValue) == 0x000018, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsRiding_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_GetPalDebugSetting_ReturnValue) == 0x000020, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_GetPalDebugSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000030, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_GetFloorPhisicalSurface_ReturnValue) == 0x000038, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_GetFloorPhisicalSurface_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'ABP_Player_C_CanSpawnFootStepEffect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsValid_ReturnValue_2) == 0x00003B, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_HasFloorPhysMaterial_ReturnValue) == 0x00003C, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_HasFloorPhysMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000040, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000048, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsValid_ReturnValue_3) == 0x000050, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_CanSpawnFootStepEffect, CallFunc_IsEnteredWater_ReturnValue) == 0x000051, "Member 'ABP_Player_C_CanSpawnFootStepEffect::CallFunc_IsEnteredWater_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.Cloth01FrontBagRotation
// 0x01A0 (0x01A0 - 0x0000)
struct ABP_Player_C_Cloth01FrontBagRotation final
{
public:
	struct FRotator                               BagRotator;                                        // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BB5[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_GetBoneRotation_ReturnValue;              // 0x0020(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  CallFunc_GetBoneRotation_ReturnValue_1;            // 0x0040(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Right_ReturnValue;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Forward_ReturnValue;               // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Quat_RotateVector_ReturnValue;            // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Quat_RotateVector_ReturnValue_1;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_Cloth01FrontBagRotation) == 0x000010, "Wrong alignment on ABP_Player_C_Cloth01FrontBagRotation");
static_assert(sizeof(ABP_Player_C_Cloth01FrontBagRotation) == 0x0001A0, "Wrong size on ABP_Player_C_Cloth01FrontBagRotation");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, BagRotator) == 0x000000, "Member 'ABP_Player_C_Cloth01FrontBagRotation::BagRotator' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_GetBoneRotation_ReturnValue) == 0x000020, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_GetBoneRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_GetBoneRotation_ReturnValue_1) == 0x000040, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_GetBoneRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Vector_Right_ReturnValue) == 0x000060, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Vector_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Vector_Up_ReturnValue) == 0x000078, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A8, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Vector_Forward_ReturnValue) == 0x0000C0, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Vector_Forward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Quat_RotateVector_ReturnValue) == 0x0000F0, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Quat_RotateVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Normal_ReturnValue) == 0x000108, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Quat_RotateVector_ReturnValue_1) == 0x000120, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Quat_RotateVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000138, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000140, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000148, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_FClamp_ReturnValue) == 0x000150, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Lerp_ReturnValue) == 0x000158, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Lerp_ReturnValue_1) == 0x000160, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_Lerp_ReturnValue_2) == 0x000168, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_MakeRotator_ReturnValue) == 0x000170, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000188, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00018C, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Cloth01FrontBagRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000190, "Member 'ABP_Player_C_Cloth01FrontBagRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.ClothLayer
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_ClothLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_ClothLayer;                                  // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_ClothLayer) == 0x000008, "Wrong alignment on ABP_Player_C_ClothLayer");
static_assert(sizeof(ABP_Player_C_ClothLayer) == 0x000020, "Wrong size on ABP_Player_C_ClothLayer");
static_assert(offsetof(ABP_Player_C_ClothLayer, InPose) == 0x000000, "Member 'ABP_Player_C_ClothLayer::InPose' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ClothLayer, Param_ClothLayer) == 0x000010, "Member 'ABP_Player_C_ClothLayer::Param_ClothLayer' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.ExecuteUbergraph_ABP_Player
// 0x0388 (0x0388 - 0x0000)
struct ABP_Player_C_ExecuteUbergraph_ABP_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable;                                // 0x0004(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_1;                              // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_2;                              // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_3;                              // 0x000A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_4;                              // 0x000B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_5;                              // 0x000C(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_6;                              // 0x000D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB6[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_7;                              // 0x002A(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_8;                              // 0x002B(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB8[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_2;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BB9[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          CallFunc_Map_Find_Value_3;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBA[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_1;      // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPalShooterComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_2;      // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBB[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x00D8(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_3;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_4;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimSequence*                          CallFunc_Map_Find_Value_4;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_9;                              // 0x0121(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_10;                             // 0x0122(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeaponAnimationPoseType                      Temp_byte_Variable_11;                             // 0x0123(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0127(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBC[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_5;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBD[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalFootType                                  Temp_byte_Variable_12;                             // 0x0140(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBE[0x2];                                     // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_6;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBF[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalFootType                                  Temp_byte_Variable_13;                             // 0x0171(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC0[0x2];                                     // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value_7;                         // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC1[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC2[0x6];                                     // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue;           // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC3[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC4[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAimOffsetBlendSpace*                   CallFunc_Map_Find_Value_8;                         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_8;                   // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC5[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAimOffsetBlendSpace*                   CallFunc_Map_Find_Value_9;                         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_9;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC6[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue;                     // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0217(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC7[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_10;                        // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_10;                  // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC8[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_11;                        // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_11;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC9[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_12;                        // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_12;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCA[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_Map_Find_Value_13;                        // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_13;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_3;     // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCB[0x1];                                     // 0x0267(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCC[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCD[0x2];                                     // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCE[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BCF[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_1;            // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character_1;              // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD0[0x7];                                     // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterMovementComponent*         CallFunc_GetComponentByClass_ReturnValue_1;        // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalLookAtComponent*                    CallFunc_GetComponentByClass_ReturnValue_2;        // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalFootIKComponent*                    CallFunc_GetComponentByClass_ReturnValue_3;        // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetComponentByClass_ReturnValue_4;        // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue_2;            // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD1[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast;              // 0x02F0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_1;            // 0x02F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD2[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_12_ImplicitCast; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_13_ImplicitCast; // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_14_ImplicitCast; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_15_ImplicitCast; // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_2;            // 0x0350(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_3;            // 0x0354(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_4;            // 0x0358(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD3[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2;  // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD4[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateAnimationParameter_DeltaTime_ImplicitCast; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_Foot_Step_Effect_DeltaTime_ImplicitCast; // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_ExecuteUbergraph_ABP_Player) == 0x000008, "Wrong alignment on ABP_Player_C_ExecuteUbergraph_ABP_Player");
static_assert(sizeof(ABP_Player_C_ExecuteUbergraph_ABP_Player) == 0x000388, "Wrong size on ABP_Player_C_ExecuteUbergraph_ABP_Player");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, EntryPoint) == 0x000000, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable) == 0x000004, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_2) == 0x000007, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_1) == 0x000008, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_2) == 0x000009, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_3) == 0x00000A, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_4) == 0x00000B, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_5) == 0x00000C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_6) == 0x00000D, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value) == 0x000010, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_1) == 0x000020, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_1) == 0x000028, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_3) == 0x000029, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_7) == 0x00002A, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_8) == 0x00002B, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_2) == 0x000030, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_2) == 0x000038, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003A, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_1) == 0x00003D, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_2) == 0x00003E, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_3) == 0x000060, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_3) == 0x000068, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000070, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_RotatorFloat_ReturnValue_1) == 0x000088, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_RotatorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_RotatorFloat_ReturnValue_2) == 0x0000A8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_RotatorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_struct_Variable) == 0x0000C8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_delegate_Variable) == 0x0000D8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_RotatorFloat_ReturnValue_3) == 0x0000E8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_RotatorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_RotatorFloat_ReturnValue_4) == 0x000100, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_RotatorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_4) == 0x000118, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_4) == 0x000120, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_9) == 0x000121, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_10) == 0x000122, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_11) == 0x000123, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_3) == 0x000124, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_3) == 0x000125, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_4) == 0x000126, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000127, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_4) == 0x000128, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_5) == 0x000129, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_4) == 0x00012A, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_5) == 0x00012B, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_5) == 0x000130, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_5) == 0x000138, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00013C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_12) == 0x000140, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_6) == 0x000141, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_6) == 0x000144, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_6) == 0x000148, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeVector_ReturnValue_1) == 0x000158, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_6) == 0x000170, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, Temp_byte_Variable_13) == 0x000171, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_7) == 0x000174, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_7) == 0x000178, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeVector_ReturnValue_2) == 0x000180, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_7) == 0x000198, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_8) == 0x000199, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeRotator_ReturnValue) == 0x0001A8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_IsValid_ThreadSafe_ReturnValue) == 0x0001C0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_IsValid_ThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Vector_IsZero_ReturnValue) == 0x0001C1, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_5) == 0x0001C2, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001C3, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_9) == 0x0001C4, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_VSizeXYSquared_ReturnValue) == 0x0001C8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_10) == 0x0001D1, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_6) == 0x0001D2, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_7) == 0x0001D3, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_7) == 0x0001D4, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_8) == 0x0001D8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_8) == 0x0001E0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_9) == 0x0001E8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_9) == 0x0001F0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BreakVector_X) == 0x0001F8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BreakVector_Y) == 0x000200, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BreakVector_Z) == 0x000208, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_8) == 0x000211, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_8) == 0x000212, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_9) == 0x000213, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_IsZero2D_ReturnValue) == 0x000214, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_IsZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_9) == 0x000215, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_10) == 0x000216, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_11) == 0x000217, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_12) == 0x000218, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_11) == 0x000219, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_10) == 0x00021A, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_11) == 0x00021B, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00021C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_12) == 0x00021D, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_13) == 0x00021E, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_12) == 0x00021F, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_13) == 0x000220, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000221, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanOR_ReturnValue_14) == 0x000222, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_13) == 0x000223, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_10) == 0x000228, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_10) == 0x000230, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000231, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000232, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_14) == 0x000233, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_11) == 0x000238, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_11) == 0x000240, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_12) == 0x000248, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_12) == 0x000250, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_Value_13) == 0x000258, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_Value_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Map_Find_ReturnValue_13) == 0x000260, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Map_Find_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_14) == 0x000261, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_15) == 0x000262, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000263, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_ReturnValue_3) == 0x000264, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_15) == 0x000265, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_16) == 0x000266, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetCurveValue_ReturnValue) == 0x000268, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Lerp_ReturnValue) == 0x000270, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_Event_DeltaTimeX) == 0x000278, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Not_PreBool_ReturnValue_16) == 0x00027C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_17) == 0x00027D, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000280, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_BooleanAND_ReturnValue_18) == 0x000288, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_DynamicCast_AsPal_Character) == 0x000290, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_DynamicCast_bSuccess) == 0x000298, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_IsDedicatedServer_ReturnValue) == 0x000299, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_TryGetPawnOwner_ReturnValue_1) == 0x0002A0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_TryGetPawnOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_DynamicCast_AsPal_Character_1) == 0x0002A8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_DynamicCast_AsPal_Character_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_DynamicCast_bSuccess_1) == 0x0002B0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0002B8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0002C0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0002C8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_GetComponentByClass_ReturnValue_4) == 0x0002D0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_TryGetPawnOwner_ReturnValue_2) == 0x0002D8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_TryGetPawnOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_PostEvent_ReturnValue) == 0x0002E0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0002E8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Array_Set_Item_ImplicitCast) == 0x0002F0, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Array_Set_Item_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Array_Set_Item_ImplicitCast_1) == 0x0002F4, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Array_Set_Item_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0002F8, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeVector_X_ImplicitCast) == 0x000308, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000310, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000318, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_StructMemberSet___FloatProperty_12_ImplicitCast) == 0x000320, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_StructMemberSet___FloatProperty_12_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_StructMemberSet___FloatProperty_13_ImplicitCast) == 0x000324, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_StructMemberSet___FloatProperty_13_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_StructMemberSet___FloatProperty_14_ImplicitCast) == 0x000328, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_StructMemberSet___FloatProperty_14_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_StructMemberSet___FloatProperty_15_ImplicitCast) == 0x00032C, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_StructMemberSet___FloatProperty_15_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000330, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000338, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000340, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000348, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Array_Set_Item_ImplicitCast_2) == 0x000350, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Array_Set_Item_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Array_Set_Item_ImplicitCast_3) == 0x000354, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Array_Set_Item_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Array_Set_Item_ImplicitCast_4) == 0x000358, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Array_Set_Item_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2) == 0x000360, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000368, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000370, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_UpdateAnimationParameter_DeltaTime_ImplicitCast) == 0x000378, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_UpdateAnimationParameter_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ExecuteUbergraph_ABP_Player, CallFunc_Update_Foot_Step_Effect_DeltaTime_ImplicitCast) == 0x000380, "Member 'ABP_Player_C_ExecuteUbergraph_ABP_Player::CallFunc_Update_Foot_Step_Effect_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.FootIK
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_FootIK final
{
public:
	struct FPoseLink                              InPose_1;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_FootIK;                                      // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_FootIK) == 0x000008, "Wrong alignment on ABP_Player_C_FootIK");
static_assert(sizeof(ABP_Player_C_FootIK) == 0x000020, "Wrong size on ABP_Player_C_FootIK");
static_assert(offsetof(ABP_Player_C_FootIK, InPose_1) == 0x000000, "Member 'ABP_Player_C_FootIK::InPose_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_FootIK, Param_FootIK) == 0x000010, "Member 'ABP_Player_C_FootIK::Param_FootIK' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.GameThreadUpdate
// 0x0010 (0x0010 - 0x0000)
struct ABP_Player_C_GameThreadUpdate final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_GameThreadUpdate) == 0x000008, "Wrong alignment on ABP_Player_C_GameThreadUpdate");
static_assert(sizeof(ABP_Player_C_GameThreadUpdate) == 0x000010, "Wrong size on ABP_Player_C_GameThreadUpdate");
static_assert(offsetof(ABP_Player_C_GameThreadUpdate, DeltaTime) == 0x000000, "Member 'ABP_Player_C_GameThreadUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GameThreadUpdate, CallFunc_GetGameSetting_ReturnValue) == 0x000008, "Member 'ABP_Player_C_GameThreadUpdate::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.GetFootStepCharacterSpeed
// 0x0048 (0x0048 - 0x0000)
struct ABP_Player_C_GetFootStepCharacterSpeed final
{
public:
	double                                        CharacterSpeed;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         MovementComponent;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_GetFootStepCharacterSpeed) == 0x000008, "Wrong alignment on ABP_Player_C_GetFootStepCharacterSpeed");
static_assert(sizeof(ABP_Player_C_GetFootStepCharacterSpeed) == 0x000048, "Wrong size on ABP_Player_C_GetFootStepCharacterSpeed");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CharacterSpeed) == 0x000000, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CharacterSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, MovementComponent) == 0x000008, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::MovementComponent' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000028, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000038, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepCharacterSpeed, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000040, "Member 'ABP_Player_C_GetFootStepCharacterSpeed::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.GetFootStepEffectScale
// 0x0038 (0x0038 - 0x0000)
struct ABP_Player_C_GetFootStepEffectScale final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalDatabaseCharacterParameter*         CallFunc_GetDatabaseCharacterParameter_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalSizeParameterDataRow               CallFunc_FindPalSizeParameter_RowData;             // 0x0010(0x0018)()
	bool                                          CallFunc_FindPalSizeParameter_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Scale_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_GetFootStepEffectScale) == 0x000008, "Wrong alignment on ABP_Player_C_GetFootStepEffectScale");
static_assert(sizeof(ABP_Player_C_GetFootStepEffectScale) == 0x000038, "Wrong size on ABP_Player_C_GetFootStepEffectScale");
static_assert(offsetof(ABP_Player_C_GetFootStepEffectScale, Scale) == 0x000000, "Member 'ABP_Player_C_GetFootStepEffectScale::Scale' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepEffectScale, CallFunc_GetDatabaseCharacterParameter_ReturnValue) == 0x000008, "Member 'ABP_Player_C_GetFootStepEffectScale::CallFunc_GetDatabaseCharacterParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepEffectScale, CallFunc_FindPalSizeParameter_RowData) == 0x000010, "Member 'ABP_Player_C_GetFootStepEffectScale::CallFunc_FindPalSizeParameter_RowData' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepEffectScale, CallFunc_FindPalSizeParameter_ReturnValue) == 0x000028, "Member 'ABP_Player_C_GetFootStepEffectScale::CallFunc_FindPalSizeParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetFootStepEffectScale, K2Node_FunctionResult_Scale_ImplicitCast) == 0x000030, "Member 'ABP_Player_C_GetFootStepEffectScale::K2Node_FunctionResult_Scale_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.GetRideIKPos
// 0x01A0 (0x01A0 - 0x0000)
struct ABP_Player_C_GetRideIKPos final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD7[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ConvTF;                                            // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKPos;                                             // 0x0078(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_GetRideIKPos) == 0x000010, "Wrong alignment on ABP_Player_C_GetRideIKPos");
static_assert(sizeof(ABP_Player_C_GetRideIKPos) == 0x0001A0, "Wrong size on ABP_Player_C_GetRideIKPos");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, SocketName) == 0x000000, "Member 'ABP_Player_C_GetRideIKPos::SocketName' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, ConvTF) == 0x000010, "Member 'ABP_Player_C_GetRideIKPos::ConvTF' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, Mesh) == 0x000070, "Member 'ABP_Player_C_GetRideIKPos::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, IKPos) == 0x000078, "Member 'ABP_Player_C_GetRideIKPos::IKPos' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, CallFunc_GetSocketTransform_ReturnValue) == 0x000090, "Member 'ABP_Player_C_GetRideIKPos::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, CallFunc_ComposeTransforms_ReturnValue) == 0x0000F0, "Member 'ABP_Player_C_GetRideIKPos::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, CallFunc_BreakTransform_Location) == 0x000150, "Member 'ABP_Player_C_GetRideIKPos::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, CallFunc_BreakTransform_Rotation) == 0x000168, "Member 'ABP_Player_C_GetRideIKPos::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_GetRideIKPos, CallFunc_BreakTransform_Scale) == 0x000180, "Member 'ABP_Player_C_GetRideIKPos::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.LeftHandAttach
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_LeftHandAttach final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_LeftHandAttach;                              // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_LeftHandAttach) == 0x000008, "Wrong alignment on ABP_Player_C_LeftHandAttach");
static_assert(sizeof(ABP_Player_C_LeftHandAttach) == 0x000020, "Wrong size on ABP_Player_C_LeftHandAttach");
static_assert(offsetof(ABP_Player_C_LeftHandAttach, InPose) == 0x000000, "Member 'ABP_Player_C_LeftHandAttach::InPose' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_LeftHandAttach, Param_LeftHandAttach) == 0x000010, "Member 'ABP_Player_C_LeftHandAttach::Param_LeftHandAttach' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.Lookat
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_Lookat final
{
public:
	struct FPoseLink                              InPose_2;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_Lookat;                                      // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_Lookat) == 0x000008, "Wrong alignment on ABP_Player_C_Lookat");
static_assert(sizeof(ABP_Player_C_Lookat) == 0x000020, "Wrong size on ABP_Player_C_Lookat");
static_assert(offsetof(ABP_Player_C_Lookat, InPose_2) == 0x000000, "Member 'ABP_Player_C_Lookat::InPose_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Lookat, Param_Lookat) == 0x000010, "Member 'ABP_Player_C_Lookat::Param_Lookat' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.LookatParameterUpdate
// 0x0018 (0x0018 - 0x0000)
struct ABP_Player_C_LookatParameterUpdate final
{
public:
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LookatInTime_ImplicitCast;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LookatOutTime_ImplicitCast;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_LookatParameterUpdate) == 0x000008, "Wrong alignment on ABP_Player_C_LookatParameterUpdate");
static_assert(sizeof(ABP_Player_C_LookatParameterUpdate) == 0x000018, "Wrong size on ABP_Player_C_LookatParameterUpdate");
static_assert(offsetof(ABP_Player_C_LookatParameterUpdate, CallFunc_IsValid_ThreadSafe_ReturnValue) == 0x000000, "Member 'ABP_Player_C_LookatParameterUpdate::CallFunc_IsValid_ThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_LookatParameterUpdate, K2Node_VariableSet_LookatInTime_ImplicitCast) == 0x000008, "Member 'ABP_Player_C_LookatParameterUpdate::K2Node_VariableSet_LookatInTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_LookatParameterUpdate, K2Node_VariableSet_LookatOutTime_ImplicitCast) == 0x000010, "Member 'ABP_Player_C_LookatParameterUpdate::K2Node_VariableSet_LookatOutTime_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.PalCharacterMovementComponentUpdate
// 0x00A8 (0x00A8 - 0x0000)
struct ABP_Player_C_PalCharacterMovementComponentUpdate final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDA[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_PalCharacterMovementComponentUpdate) == 0x000008, "Wrong alignment on ABP_Player_C_PalCharacterMovementComponentUpdate");
static_assert(sizeof(ABP_Player_C_PalCharacterMovementComponentUpdate) == 0x0000A8, "Wrong size on ABP_Player_C_PalCharacterMovementComponentUpdate");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_VSize_ReturnValue) == 0x000008, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_X) == 0x000010, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_Y) == 0x000018, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_Z) == 0x000020, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_NegateRotator_ReturnValue) == 0x000028, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000068, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_X_1) == 0x000080, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_BreakVector_Z_1) == 0x000090, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PalCharacterMovementComponentUpdate, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'ABP_Player_C_PalCharacterMovementComponentUpdate::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.PlaySound
// 0x0070 (0x0070 - 0x0000)
struct ABP_Player_C_PlaySound final
{
public:
	class FName                                   SoundId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetDown;                                        // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffsetUp;                                          // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       Options;                                           // 0x0038(0x0004)(Edit, BlueprintVisible, NoDestructor)
	uint8                                         Pad_3BDB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Owner;                                             // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   Name_None;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions;                 // 0x0050(0x0004)(NoDestructor)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDC[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_PlaySound) == 0x000008, "Wrong alignment on ABP_Player_C_PlaySound");
static_assert(sizeof(ABP_Player_C_PlaySound) == 0x000070, "Wrong size on ABP_Player_C_PlaySound");
static_assert(offsetof(ABP_Player_C_PlaySound, SoundId) == 0x000000, "Member 'ABP_Player_C_PlaySound::SoundId' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, OffsetDown) == 0x000008, "Member 'ABP_Player_C_PlaySound::OffsetDown' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, OffsetUp) == 0x000020, "Member 'ABP_Player_C_PlaySound::OffsetUp' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, Options) == 0x000038, "Member 'ABP_Player_C_PlaySound::Options' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, Owner) == 0x000040, "Member 'ABP_Player_C_PlaySound::Owner' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, Name_None) == 0x000048, "Member 'ABP_Player_C_PlaySound::Name_None' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, K2Node_MakeStruct_PalSoundOptions) == 0x000050, "Member 'ABP_Player_C_PlaySound::K2Node_MakeStruct_PalSoundOptions' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x000054, "Member 'ABP_Player_C_PlaySound::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, CallFunc_NotEqual_NameName_ReturnValue) == 0x00005C, "Member 'ABP_Player_C_PlaySound::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000060, "Member 'ABP_Player_C_PlaySound::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000068, "Member 'ABP_Player_C_PlaySound::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'ABP_Player_C_PlaySound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_PlaySound, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'ABP_Player_C_PlaySound::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.RiderComponent_UniqueRideUpdate
// 0x0460 (0x0460 - 0x0000)
struct ABP_Player_C_RiderComponent_UniqueRideUpdate final
{
public:
	class UPalRiderComponent*                     RiderComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          ThisCharacter;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDD[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             UniqueRideCoordinateTransform;                     // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Const_MaxDistance;                                 // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HumanChestPos;                                     // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 MonsterMesh;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MonsterActor;                                      // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUniqueRideIK_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDE[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUniqueRideAnimeAssetBase*           CallFunc_GetUniqueRideAnimeAsset_ReturnValue;      // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BDF[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRideIKPos_IKPos;                       // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRideIKPos_IKPos_1;                     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRideIKPos_IKPos_2;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRideIKPos_IKPos_3;                     // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMainMeshByActor_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalRideMarkerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue_1;       // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0210(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x02D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE0[0x8];                                     // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0340(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetRindingActor_ReturnValue;              // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_RiderComponent_UniqueRideUpdate) == 0x000010, "Wrong alignment on ABP_Player_C_RiderComponent_UniqueRideUpdate");
static_assert(sizeof(ABP_Player_C_RiderComponent_UniqueRideUpdate) == 0x000460, "Wrong size on ABP_Player_C_RiderComponent_UniqueRideUpdate");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, RiderComponent) == 0x000000, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::RiderComponent' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, ThisCharacter) == 0x000008, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::ThisCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, DeltaTime) == 0x000010, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, UniqueRideCoordinateTransform) == 0x000020, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::UniqueRideCoordinateTransform' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, Const_MaxDistance) == 0x000080, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::Const_MaxDistance' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, Distance) == 0x000088, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::Distance' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, HumanChestPos) == 0x000090, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::HumanChestPos' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, MonsterMesh) == 0x0000A8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::MonsterMesh' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, MonsterActor) == 0x0000B0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::MonsterActor' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_BooleanOR_ReturnValue) == 0x0000B8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_CanUniqueRideIK_ReturnValue) == 0x0000B9, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_CanUniqueRideIK_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetUniqueRideAnimeAsset_ReturnValue) == 0x0000C0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetUniqueRideAnimeAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C9, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRideIKPos_IKPos) == 0x0000D0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRideIKPos_IKPos' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRideIKPos_IKPos_1) == 0x0000E8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRideIKPos_IKPos_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRideIKPos_IKPos_2) == 0x000100, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRideIKPos_IKPos_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRideIKPos_IKPos_3) == 0x000118, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRideIKPos_IKPos_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetMainMeshByActor_ReturnValue) == 0x000130, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetMainMeshByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetMainMesh_ReturnValue) == 0x000138, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetMainMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRelativeTransform_ReturnValue) == 0x000140, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetComponentByClass_ReturnValue) == 0x0001A0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetAttachSocketName_ReturnValue) == 0x0001A8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRelativeTransform_ReturnValue_1) == 0x0001B0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetSocketTransform_ReturnValue) == 0x000210, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_ComposeTransforms_ReturnValue) == 0x000270, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_ComposeTransforms_ReturnValue_1) == 0x0002D0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000330, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_InvertTransform_ReturnValue) == 0x000340, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0003A0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_FClamp_ReturnValue) == 0x0003C0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Vector_Distance_ReturnValue) == 0x0003C8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Lerp_ReturnValue) == 0x0003D8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_FClamp_ReturnValue_1) == 0x0003E0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Vector_Distance_ReturnValue_1) == 0x0003E8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_FMax_ReturnValue) == 0x0003F0, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0003F8, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetActorUpVector_ReturnValue) == 0x000410, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000428, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_GetRindingActor_ReturnValue) == 0x000440, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_GetRindingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponent_UniqueRideUpdate, CallFunc_Add_VectorVector_ReturnValue) == 0x000448, "Member 'ABP_Player_C_RiderComponent_UniqueRideUpdate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.RiderComponentUpdate
// 0x0050 (0x0050 - 0x0000)
struct ABP_Player_C_RiderComponentUpdate final
{
public:
	class UPalRiderComponent*                     PalRiderComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRiding_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalUniqueRideAnimeAssetBase*           CallFunc_GetUniqueRideAnimeAsset_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          CallFunc_GetRideAnimSequence_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalRideMarkerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRiderModelIsBackward_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE3[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetRindingActor_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_RiderComponentUpdate) == 0x000008, "Wrong alignment on ABP_Player_C_RiderComponentUpdate");
static_assert(sizeof(ABP_Player_C_RiderComponentUpdate) == 0x000050, "Wrong size on ABP_Player_C_RiderComponentUpdate");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, PalRiderComponent) == 0x000000, "Member 'ABP_Player_C_RiderComponentUpdate::PalRiderComponent' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_IsRiding_ReturnValue) == 0x000008, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_IsRiding_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_GetUniqueRideAnimeAsset_ReturnValue) == 0x000020, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_GetUniqueRideAnimeAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_GetRideAnimSequence_ReturnValue) == 0x000030, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_GetRideAnimSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_GetRiderModelIsBackward_ReturnValue) == 0x000040, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_GetRiderModelIsBackward_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RiderComponentUpdate, CallFunc_GetRindingActor_ReturnValue) == 0x000048, "Member 'ABP_Player_C_RiderComponentUpdate::CallFunc_GetRindingActor_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.RidingOverride
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_RidingOverride final
{
public:
	struct FPoseLink                              InPose_0;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_RidingOverride;                              // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_RidingOverride) == 0x000008, "Wrong alignment on ABP_Player_C_RidingOverride");
static_assert(sizeof(ABP_Player_C_RidingOverride) == 0x000020, "Wrong size on ABP_Player_C_RidingOverride");
static_assert(offsetof(ABP_Player_C_RidingOverride, InPose_0) == 0x000000, "Member 'ABP_Player_C_RidingOverride::InPose_0' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_RidingOverride, Param_RidingOverride) == 0x000010, "Member 'ABP_Player_C_RidingOverride::Param_RidingOverride' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.SerWeaponNum
// 0x0030 (0x0030 - 0x0000)
struct ABP_Player_C_SerWeaponNum final
{
public:
	class UPalShooterComponent*                   ShooterComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         WeaponNum;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE4[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_SerWeaponNum) == 0x000008, "Wrong alignment on ABP_Player_C_SerWeaponNum");
static_assert(sizeof(ABP_Player_C_SerWeaponNum) == 0x000030, "Wrong size on ABP_Player_C_SerWeaponNum");
static_assert(offsetof(ABP_Player_C_SerWeaponNum, ShooterComponent) == 0x000000, "Member 'ABP_Player_C_SerWeaponNum::ShooterComponent' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_SerWeaponNum, WeaponNum) == 0x000008, "Member 'ABP_Player_C_SerWeaponNum::WeaponNum' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_SerWeaponNum, CallFunc_GetHasWeapon_ReturnValue) == 0x000010, "Member 'ABP_Player_C_SerWeaponNum::CallFunc_GetHasWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_SerWeaponNum, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'ABP_Player_C_SerWeaponNum::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_SerWeaponNum, K2Node_SwitchString_CmpSuccess) == 0x000028, "Member 'ABP_Player_C_SerWeaponNum::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.ShooterComponentUpdate
// 0x00B8 (0x00B8 - 0x0000)
struct ABP_Player_C_ShooterComponentUpdate final
{
public:
	class UPalRiderComponent*                     RiderComponent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ThreadSafe_ReturnValue_1;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE5[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE7[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_VariableSet_ChangeWeaponWeight_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_ShooterComponentUpdate) == 0x000008, "Wrong alignment on ABP_Player_C_ShooterComponentUpdate");
static_assert(sizeof(ABP_Player_C_ShooterComponentUpdate) == 0x0000B8, "Wrong size on ABP_Player_C_ShooterComponentUpdate");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, RiderComponent) == 0x000000, "Member 'ABP_Player_C_ShooterComponentUpdate::RiderComponent' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_IsValid_ThreadSafe_ReturnValue) == 0x000008, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_IsValid_ThreadSafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_IsValid_ThreadSafe_ReturnValue_1) == 0x000009, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_IsValid_ThreadSafe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_MakeRotFromX_ReturnValue) == 0x000010, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_MakeRotator_ReturnValue_1) == 0x000078, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, K2Node_VariableSet_ChangeWeaponWeight_ImplicitCast) == 0x000090, "Member 'ABP_Player_C_ShooterComponentUpdate::K2Node_VariableSet_ChangeWeaponWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0000B0, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_ShooterComponentUpdate, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0000B4, "Member 'ABP_Player_C_ShooterComponentUpdate::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.StartFootStepEffect
// 0x0030 (0x0030 - 0x0000)
struct ABP_Player_C_StartFootStepEffect final
{
public:
	double                                        CallFunc_GetFootStepEffectScale_Scale;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE8[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMainMeshByActor_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_StartFootStepEffect) == 0x000008, "Wrong alignment on ABP_Player_C_StartFootStepEffect");
static_assert(sizeof(ABP_Player_C_StartFootStepEffect) == 0x000030, "Wrong size on ABP_Player_C_StartFootStepEffect");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_GetFootStepEffectScale_Scale) == 0x000000, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_GetFootStepEffectScale_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_GetMainMeshByActor_ReturnValue) == 0x000018, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_GetMainMeshByActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000020, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_StartFootStepEffect, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x000028, "Member 'ABP_Player_C_StartFootStepEffect::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.StopFootStepEffect
// 0x0001 (0x0001 - 0x0000)
struct ABP_Player_C_StopFootStepEffect final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_StopFootStepEffect) == 0x000001, "Wrong alignment on ABP_Player_C_StopFootStepEffect");
static_assert(sizeof(ABP_Player_C_StopFootStepEffect) == 0x000001, "Wrong size on ABP_Player_C_StopFootStepEffect");
static_assert(offsetof(ABP_Player_C_StopFootStepEffect, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Player_C_StopFootStepEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.TempFixLeftHandAttach
// 0x00B0 (0x00B0 - 0x0000)
struct ABP_Player_C_TempFixLeftHandAttach final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BE9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEA[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUseLeftHandAttach_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue_2;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetLeftHandTransform_ReturnValue;         // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue_3;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUseLeftHandAttach_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanLeftHandAttach_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEC[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         CallFunc_GetHasWeapon_ReturnValue_4;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_TempFixLeftHandAttach) == 0x000010, "Wrong alignment on ABP_Player_C_TempFixLeftHandAttach");
static_assert(sizeof(ABP_Player_C_TempFixLeftHandAttach) == 0x0000B0, "Wrong size on ABP_Player_C_TempFixLeftHandAttach");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetHasWeapon_ReturnValue) == 0x000008, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetHasWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetHasWeapon_ReturnValue_1) == 0x000018, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetHasWeapon_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_IsUseLeftHandAttach_ReturnValue) == 0x000020, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_IsUseLeftHandAttach_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetHasWeapon_ReturnValue_2) == 0x000028, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetHasWeapon_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetLeftHandTransform_ReturnValue) == 0x000030, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetLeftHandTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetHasWeapon_ReturnValue_3) == 0x000090, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetHasWeapon_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_IsUseLeftHandAttach_ReturnValue_1) == 0x000098, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_IsUseLeftHandAttach_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_CanLeftHandAttach_ReturnValue) == 0x000099, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_CanLeftHandAttach_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_GetHasWeapon_ReturnValue_4) == 0x0000A0, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_GetHasWeapon_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_TempFixLeftHandAttach, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'ABP_Player_C_TempFixLeftHandAttach::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.UniqueRideFullBodyIK
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_UniqueRideFullBodyIK final
{
public:
	struct FPoseLink                              InPose_3;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_UniqueRideFullBodyIK;                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_UniqueRideFullBodyIK) == 0x000008, "Wrong alignment on ABP_Player_C_UniqueRideFullBodyIK");
static_assert(sizeof(ABP_Player_C_UniqueRideFullBodyIK) == 0x000020, "Wrong size on ABP_Player_C_UniqueRideFullBodyIK");
static_assert(offsetof(ABP_Player_C_UniqueRideFullBodyIK, InPose_3) == 0x000000, "Member 'ABP_Player_C_UniqueRideFullBodyIK::InPose_3' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UniqueRideFullBodyIK, Param_UniqueRideFullBodyIK) == 0x000010, "Member 'ABP_Player_C_UniqueRideFullBodyIK::Param_UniqueRideFullBodyIK' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.Update Foot Step Effect
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_Update_Foot_Step_Effect final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSpawnFootStepEffect_CanSpawn;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BED[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetFootStepCharacterSpeed_CharacterSpeed; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEE[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVariableFloat_InValue_ImplicitCast;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_Update_Foot_Step_Effect) == 0x000008, "Wrong alignment on ABP_Player_C_Update_Foot_Step_Effect");
static_assert(sizeof(ABP_Player_C_Update_Foot_Step_Effect) == 0x000020, "Wrong size on ABP_Player_C_Update_Foot_Step_Effect");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, DeltaTime) == 0x000000, "Member 'ABP_Player_C_Update_Foot_Step_Effect::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'ABP_Player_C_Update_Foot_Step_Effect::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, CallFunc_CanSpawnFootStepEffect_CanSpawn) == 0x000009, "Member 'ABP_Player_C_Update_Foot_Step_Effect::CallFunc_CanSpawnFootStepEffect_CanSpawn' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, CallFunc_GetFootStepCharacterSpeed_CharacterSpeed) == 0x000010, "Member 'ABP_Player_C_Update_Foot_Step_Effect::CallFunc_GetFootStepCharacterSpeed_CharacterSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ABP_Player_C_Update_Foot_Step_Effect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_Update_Foot_Step_Effect, CallFunc_SetVariableFloat_InValue_ImplicitCast) == 0x00001C, "Member 'ABP_Player_C_Update_Foot_Step_Effect::CallFunc_SetVariableFloat_InValue_ImplicitCast' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.UpdateAnimationParameter
// 0x0070 (0x0070 - 0x0000)
struct ABP_Player_C_UpdateAnimationParameter final
{
public:
	class APalCharacter*                          ThisCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BEF[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Cloth01FrontBagRotation_BagRotator;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF0[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF1[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotator_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPalRiderComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Player_C_UpdateAnimationParameter) == 0x000008, "Wrong alignment on ABP_Player_C_UpdateAnimationParameter");
static_assert(sizeof(ABP_Player_C_UpdateAnimationParameter) == 0x000070, "Wrong size on ABP_Player_C_UpdateAnimationParameter");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, ThisCharacter) == 0x000000, "Member 'ABP_Player_C_UpdateAnimationParameter::ThisCharacter' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, DeltaTime) == 0x000008, "Member 'ABP_Player_C_UpdateAnimationParameter::DeltaTime' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_IsDead_ReturnValue) == 0x000010, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_Cloth01FrontBagRotation_BagRotator) == 0x000018, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_Cloth01FrontBagRotation_BagRotator' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_BooleanAND_ReturnValue_1) == 0x000032, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, K2Node_DynamicCast_AsPal_Player_Character) == 0x000038, "Member 'ABP_Player_C_UpdateAnimationParameter::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ABP_Player_C_UpdateAnimationParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_GetCameraRotator_ReturnValue) == 0x000048, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_GetCameraRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_GetComponentByClass_ReturnValue) == 0x000060, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_UpdateAnimationParameter, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ABP_Player_C_UpdateAnimationParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ABP_Player.ABP_Player_C.WeaponUpperOverride
// 0x0020 (0x0020 - 0x0000)
struct ABP_Player_C_WeaponUpperOverride final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Param_WeaponUpperOverride;                         // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Player_C_WeaponUpperOverride) == 0x000008, "Wrong alignment on ABP_Player_C_WeaponUpperOverride");
static_assert(sizeof(ABP_Player_C_WeaponUpperOverride) == 0x000020, "Wrong size on ABP_Player_C_WeaponUpperOverride");
static_assert(offsetof(ABP_Player_C_WeaponUpperOverride, InPose) == 0x000000, "Member 'ABP_Player_C_WeaponUpperOverride::InPose' has a wrong offset!");
static_assert(offsetof(ABP_Player_C_WeaponUpperOverride, Param_WeaponUpperOverride) == 0x000010, "Member 'ABP_Player_C_WeaponUpperOverride::Param_WeaponUpperOverride' has a wrong offset!");

}

