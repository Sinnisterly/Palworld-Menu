#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_NPC_Base_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_Base.ABP_NPC_Base_C
// 0x2B80 (0x3190 - 0x0610)
class UABP_NPC_Base_C : public UPalAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0610(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_NPC_Base::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0618(0x001C)(HasGetValueTypeHash)
	uint8                                         Pad_3CCD[0x4];                                     // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0638(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0640(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0648(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0668(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x0730(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x0838(0x0028)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x0860(0x01F0)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0A50(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_8;                   // 0x0A70(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0AB8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x0AD8(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0B00(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0B20(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x0BE8(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x0CF0(0x00E0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x0DD0(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x0EB0(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0FB8(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_7;                   // 0x10C0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_6;                   // 0x1108(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1150(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x1178(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x11A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x11E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x1230(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1278(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x12C0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x1308(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1330(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1358(0x0048)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x13A0(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1468(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1488(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x1590(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x15D8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x1600(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x1648(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1690(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1770(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1798(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x17C0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x17E8(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x18F0(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1938(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x1958(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x1A80(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1BA8(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1CD0(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1CF0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1D18(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1E20(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1E48(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_2;                   // 0x1E68(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x1FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1FF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2020(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2048(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x2070(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x20B8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x20D8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2120(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2140(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x2188(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x21A8(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2270(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2290(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x22B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x22E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2308(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2330(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2358(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x2380(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x23C8(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x2410(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x2480(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x24A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x24E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2508(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2550(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x2598(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x25E0(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x2600(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x2648(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x26B8(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2728(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2748(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2790(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x27B0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2878(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2898(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2960(0x0048)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer_1;                   // 0x29A8(0x00C8)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x2A70(0x00C8)()
	bool                                          K2Node_PropertyAccess_13;                          // 0x2B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_12;                          // 0x2B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CCE[0x6];                                     // 0x2B3A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_PropertyAccess_11;                          // 0x2B40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                K2Node_PropertyAccess_10;                          // 0x2B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_PropertyAccess_9;                           // 0x2B70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CCF[0x8];                                     // 0x2B88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_PropertyAccess_8;                           // 0x2B90(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_7;                           // 0x2BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_6;                           // 0x2BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD0[0x6];                                     // 0x2BF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalWeaponBase*                         K2Node_PropertyAccess_5;                           // 0x2BF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_4;                           // 0x2C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_3;                           // 0x2C01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_PropertyAccess_2;                           // 0x2C02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD1[0x5];                                     // 0x2C03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_PropertyAccess_1;                           // 0x2C08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponAnimationInfo                   K2Node_PropertyAccess;                             // 0x2C20(0x0258)()
	struct FWeaponAnimationInfo                   WeaponInfo;                                        // 0x2E78(0x0258)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector2D                              VelocityXY;                                        // 0x30D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x30E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAim;                                             // 0x30E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReloading;                                       // 0x30E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouch;                                          // 0x30EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD2[0x5];                                     // 0x30EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               AimRotatorForSpine;                                // 0x30F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEndJump;                                         // 0x3108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidSprintAnimation;                            // 0x3109(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSprint;                                          // 0x310A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD3[0x5];                                     // 0x310B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandTransform;                                 // 0x3110(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAttachLeftHand;                                  // 0x3170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD4[0x7];                                     // 0x3171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalShooterComponent*                   TSCache_ShooterComponent;                          // 0x3178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          TSCache_OwnerPalCharacter;                         // 0x3180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void BlueprintBeginPlay();
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_E2DE616E480579F7354F33B1777A4358();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_F4C92C35456A21C307270A83D6D219A6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_F63282324F16651B07F04EA37B13D648();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendListByBool_FA0E6E324CA7134F3022AA94B20262ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_BlendSpacePlayer_ECEA17A54981985346E400AE295C30FF();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_0D482E0C4B2E4E7CD091E386E53618A7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_103905184AD9AADFC2AC7783DC8F943D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_3AE6580A4F970316C15CF69E11CE9615();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_40C8EDE3400634534A504B80F766E208();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_8536992D4A36125389B06C90F08A99B2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_A843A5B240417E340E569DA258225C81();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_SequencePlayer_BBD8BB9A4AAC9FE30FB9758FBD35CF09();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_1D93E8984AE04BDD9AC072AC8F1B4CC6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_41047BF041CF74296033DFA993D3480E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_98F8247B476FFB0446F91DB7328341FA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_A9D4C35A4750D9C872FF0F8E72859E1D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_B09EDEC94382438CC2EA92A0E18A09D7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_F009816844CF3DF7CEFF7DAA17E020BA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_Base_AnimGraphNode_TransitionResult_FB87F47D45ADB262044FA6BC9B050E13();
	void ExecuteUbergraph_ABP_NPC_Base(int32 EntryPoint);
	void LeftHandIK(const struct FPoseLink& InPose_LeftHand, struct FPoseLink* Param_LeftHandIK);
	void NPC_HairClothLayer(const struct FPoseLink& InPose, struct FPoseLink* Param_NPC_HairClothLayer);
	void ShooterComponentUpdate(class UPalShooterComponent* ShooterComponent);
	void WeaponUpper(const struct FPoseLink& InPose, struct FPoseLink* Param_WeaponUpper);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_Base_C">();
	}
	static class UABP_NPC_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_Base_C>();
	}
};
static_assert(alignof(UABP_NPC_Base_C) == 0x000010, "Wrong alignment on UABP_NPC_Base_C");
static_assert(sizeof(UABP_NPC_Base_C) == 0x003190, "Wrong size on UABP_NPC_Base_C");
static_assert(offsetof(UABP_NPC_Base_C, UberGraphFrame) == 0x000610, "Member 'UABP_NPC_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, __AnimBlueprintMutables) == 0x000618, "Member 'UABP_NPC_Base_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimBlueprintExtension_PropertyAccess) == 0x000638, "Member 'UABP_NPC_Base_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimBlueprintExtension_Base) == 0x000640, "Member 'UABP_NPC_Base_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_3) == 0x000648, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose_2) == 0x000668, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_6) == 0x000730, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_11) == 0x000838, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Fabrik) == 0x000860, "Member 'UABP_NPC_Base_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000A50, "Member 'UABP_NPC_Base_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_8) == 0x000A70, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000AB8, "Member 'UABP_NPC_Base_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_10) == 0x000AD8, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_2) == 0x000B00, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose_1) == 0x000B20, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_5) == 0x000BE8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend_2) == 0x000CF0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend_1) == 0x000DD0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_4) == 0x000EB0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_3) == 0x000FB8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_7) == 0x0010C0, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_6) == 0x001108, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_9) == 0x001150, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_8) == 0x001178, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_11) == 0x0011A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_10) == 0x0011E8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_9) == 0x001230, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_8) == 0x001278, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_5) == 0x0012C0, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_7) == 0x001308, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_6) == 0x001330, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_4) == 0x001358, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedInputPose) == 0x0013A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root_1) == 0x001468, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_2) == 0x001488, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_3) == 0x001590, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_5) == 0x0015D8, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_3) == 0x001600, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_2) == 0x001648, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LayeredBoneBlend) == 0x001690, "Member 'UABP_NPC_Base_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_4) == 0x001770, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_3) == 0x001798, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_2) == 0x0017C0, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose_1) == 0x0017E8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot_1) == 0x0018F0, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LocalToComponentSpace) == 0x001938, "Member 'UABP_NPC_Base_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone_2) == 0x001958, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone_1) == 0x001A80, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ModifyBone) == 0x001BA8, "Member 'UABP_NPC_Base_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_ComponentToLocalSpace) == 0x001CD0, "Member 'UABP_NPC_Base_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose_1) == 0x001CF0, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SaveCachedPose) == 0x001D18, "Member 'UABP_NPC_Base_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_UseCachedPose) == 0x001E20, "Member 'UABP_NPC_Base_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Root) == 0x001E48, "Member 'UABP_NPC_Base_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer_2) == 0x001E68, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_13) == 0x001F30, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_12) == 0x001F58, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_11) == 0x001F80, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_10) == 0x001FA8, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_9) == 0x001FD0, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_8) == 0x001FF8, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_7) == 0x002020, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_6) == 0x002048, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_7) == 0x002070, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_9) == 0x0020B8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_6) == 0x0020D8, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_8) == 0x002120, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_5) == 0x002140, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_7) == 0x002188, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine_2) == 0x0021A8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_6) == 0x002270, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_5) == 0x002290, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_4) == 0x0022B8, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_3) == 0x0022E0, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_2) == 0x002308, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult_1) == 0x002330, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_TransitionResult) == 0x002358, "Member 'UABP_NPC_Base_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_4) == 0x002380, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_2) == 0x0023C8, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer_2) == 0x002410, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_5) == 0x002480, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_3) == 0x0024A0, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_4) == 0x0024E8, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_2) == 0x002508, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer_1) == 0x002550, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool_1) == 0x002598, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_3) == 0x0025E0, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendListByBool) == 0x002600, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer_1) == 0x002648, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_BlendSpacePlayer) == 0x0026B8, "Member 'UABP_NPC_Base_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_2) == 0x002728, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_SequencePlayer) == 0x002748, "Member 'UABP_NPC_Base_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult_1) == 0x002790, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine_1) == 0x0027B0, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateResult) == 0x002878, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_StateMachine) == 0x002898, "Member 'UABP_NPC_Base_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_Slot) == 0x002960, "Member 'UABP_NPC_Base_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer_1) == 0x0029A8, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AnimGraphNode_LinkedAnimLayer) == 0x002A70, "Member 'UABP_NPC_Base_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_13) == 0x002B38, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_13' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_12) == 0x002B39, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_12' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_11) == 0x002B40, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_11' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_10) == 0x002B58, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_10' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_9) == 0x002B70, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_9' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_8) == 0x002B90, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_8' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_7) == 0x002BF0, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_7' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_6) == 0x002BF1, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_6' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_5) == 0x002BF8, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_5' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_4) == 0x002C00, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_4' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_3) == 0x002C01, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_3' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_2) == 0x002C02, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess_1) == 0x002C08, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, K2Node_PropertyAccess) == 0x002C20, "Member 'UABP_NPC_Base_C::K2Node_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, WeaponInfo) == 0x002E78, "Member 'UABP_NPC_Base_C::WeaponInfo' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, VelocityXY) == 0x0030D0, "Member 'UABP_NPC_Base_C::VelocityXY' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, Speed) == 0x0030E0, "Member 'UABP_NPC_Base_C::Speed' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsAim) == 0x0030E8, "Member 'UABP_NPC_Base_C::IsAim' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsReloading) == 0x0030E9, "Member 'UABP_NPC_Base_C::IsReloading' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsCrouch) == 0x0030EA, "Member 'UABP_NPC_Base_C::IsCrouch' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, AimRotatorForSpine) == 0x0030F0, "Member 'UABP_NPC_Base_C::AimRotatorForSpine' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsEndJump) == 0x003108, "Member 'UABP_NPC_Base_C::IsEndJump' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsValidSprintAnimation) == 0x003109, "Member 'UABP_NPC_Base_C::IsValidSprintAnimation' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsSprint) == 0x00310A, "Member 'UABP_NPC_Base_C::IsSprint' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, LeftHandTransform) == 0x003110, "Member 'UABP_NPC_Base_C::LeftHandTransform' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, IsAttachLeftHand) == 0x003170, "Member 'UABP_NPC_Base_C::IsAttachLeftHand' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, TSCache_ShooterComponent) == 0x003178, "Member 'UABP_NPC_Base_C::TSCache_ShooterComponent' has a wrong offset!");
static_assert(offsetof(UABP_NPC_Base_C, TSCache_OwnerPalCharacter) == 0x003180, "Member 'UABP_NPC_Base_C::TSCache_OwnerPalCharacter' has a wrong offset!");

}

