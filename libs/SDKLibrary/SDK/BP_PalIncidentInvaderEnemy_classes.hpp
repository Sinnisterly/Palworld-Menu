#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentInvaderEnemy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "BP_PalIncidentInvaderBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalIncidentInvaderEnemy.BP_PalIncidentInvaderEnemy_C
// 0x0080 (0x0310 - 0x0290)
class UBP_PalIncidentInvaderEnemy_C final : public UBP_PalIncidentInvaderBase_C
{
public:
	uint8                                         Pad_380E[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PalIncidentInvaderEnemy_C;       // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        MarchTimer;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalInvaderDatabaseRow                 ChosenInvaderData;                                 // 0x0298(0x0070)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void EndProc();
	void ExecuteUbergraph_BP_PalIncidentInvaderEnemy(int32 EntryPoint);
	void Get_Character_Location_Type(EPalCharacterLocationType* CharacterLocationType);
	bool GetInvaderStartPoint(struct FVector* Result);
	void OnAllCharacterSpawned(TArray<class APalAIController*>& Param_MemberController);
	void OnCharacterSpawned(class APalCharacter* SpawnedCharacter);
	void ReturnToSpawnedPoint();
	void StartProc();
	void Tick(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalIncidentInvaderEnemy_C">();
	}
	static class UBP_PalIncidentInvaderEnemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PalIncidentInvaderEnemy_C>();
	}
};
static_assert(alignof(UBP_PalIncidentInvaderEnemy_C) == 0x000010, "Wrong alignment on UBP_PalIncidentInvaderEnemy_C");
static_assert(sizeof(UBP_PalIncidentInvaderEnemy_C) == 0x000310, "Wrong size on UBP_PalIncidentInvaderEnemy_C");
static_assert(offsetof(UBP_PalIncidentInvaderEnemy_C, UberGraphFrame_BP_PalIncidentInvaderEnemy_C) == 0x000288, "Member 'UBP_PalIncidentInvaderEnemy_C::UberGraphFrame_BP_PalIncidentInvaderEnemy_C' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderEnemy_C, MarchTimer) == 0x000290, "Member 'UBP_PalIncidentInvaderEnemy_C::MarchTimer' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderEnemy_C, ChosenInvaderData) == 0x000298, "Member 'UBP_PalIncidentInvaderEnemy_C::ChosenInvaderData' has a wrong offset!");

}

