#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCInteractConditionFunctions

#include "Basic.hpp"

#include "BP_NPCInteractConditionFunctions_classes.hpp"
#include "BP_NPCInteractConditionFunctions_parameters.hpp"


namespace SDK
{

// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.HasItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::HasItem(class UPalNPCInteractCondition* Condition, class FName ItemId, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "HasItem");

	Params::BP_NPCInteractConditionFunctions_C_HasItem Parms{};

	Parms.Condition = Condition;
	Parms.ItemId = ItemId;
	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.HasItems
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class FName>                     ItemIds                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Num                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::HasItems(class UPalNPCInteractCondition* Condition, TArray<class FName>& ItemIds, int32 Num)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "HasItems");

	Params::BP_NPCInteractConditionFunctions_C_HasItems Parms{};

	Parms.Condition = Condition;
	Parms.ItemIds = std::move(ItemIds);
	Parms.Num = Num;

	UObject::ProcessEvent(Func, &Parms);

	ItemIds = std::move(Parms.ItemIds);
}


// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.IsLive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::IsLive(class UPalNPCInteractCondition* Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "IsLive");

	Params::BP_NPCInteractConditionFunctions_C_IsLive Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.IsOtomoSpawned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::IsOtomoSpawned(class UPalNPCInteractCondition* Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "IsOtomoSpawned");

	Params::BP_NPCInteractConditionFunctions_C_IsOtomoSpawned Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.NoCombat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::NoCombat(class UPalNPCInteractCondition* Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "NoCombat");

	Params::BP_NPCInteractConditionFunctions_C_NoCombat Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPCInteractConditionFunctions.BP_NPCInteractConditionFunctions_C.TestFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalNPCInteractCondition*         Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_NPCInteractConditionFunctions_C::TestFunction(class UPalNPCInteractCondition* Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPCInteractConditionFunctions_C", "TestFunction");

	Params::BP_NPCInteractConditionFunctions_C_TestFunction Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}

}

