#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WorldSecurityLaw_AttackToNonCriminal

#include "Basic.hpp"

#include "BP_WorldSecurityLaw_AttackToNonCriminal_classes.hpp"
#include "BP_WorldSecurityLaw_AttackToNonCriminal_parameters.hpp"


namespace SDK
{

// Function BP_WorldSecurityLaw_AttackToNonCriminal.BP_WorldSecurityLaw_AttackToNonCriminal_C.Condition
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageResult                 DamageResult                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class UPalIndividualCharacterHandle*    CriminalHandle                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_WorldSecurityLaw_AttackToNonCriminal_C::Condition(const struct FPalDamageResult& DamageResult, class UPalIndividualCharacterHandle** CriminalHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSecurityLaw_AttackToNonCriminal_C", "Condition");

	Params::BP_WorldSecurityLaw_AttackToNonCriminal_C_Condition Parms{};

	Parms.DamageResult = std::move(DamageResult);

	UObject::ProcessEvent(Func, &Parms);

	if (CriminalHandle != nullptr)
		*CriminalHandle = Parms.CriminalHandle;

	return Parms.ReturnValue;
}


// Function BP_WorldSecurityLaw_AttackToNonCriminal.BP_WorldSecurityLaw_AttackToNonCriminal_C.IsOrganizationCitizen
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EPalOrganizationType                    OrganizationType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCitizen                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_WorldSecurityLaw_AttackToNonCriminal_C::IsOrganizationCitizen(EPalOrganizationType OrganizationType, bool* bCitizen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSecurityLaw_AttackToNonCriminal_C", "IsOrganizationCitizen");

	Params::BP_WorldSecurityLaw_AttackToNonCriminal_C_IsOrganizationCitizen Parms{};

	Parms.OrganizationType = OrganizationType;

	UObject::ProcessEvent(Func, &Parms);

	if (bCitizen != nullptr)
		*bCitizen = Parms.bCitizen;
}


// Function BP_WorldSecurityLaw_AttackToNonCriminal.BP_WorldSecurityLaw_AttackToNonCriminal_C.IsValidCharacterActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bValid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalCharacterParameterComponent*  CharacterParameter                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_WorldSecurityLaw_AttackToNonCriminal_C::IsValidCharacterActor(class AActor* Actor, bool* bValid, class UPalCharacterParameterComponent** CharacterParameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_WorldSecurityLaw_AttackToNonCriminal_C", "IsValidCharacterActor");

	Params::BP_WorldSecurityLaw_AttackToNonCriminal_C_IsValidCharacterActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (bValid != nullptr)
		*bValid = Parms.bValid;

	if (CharacterParameter != nullptr)
		*CharacterParameter = Parms.CharacterParameter;
}

}

