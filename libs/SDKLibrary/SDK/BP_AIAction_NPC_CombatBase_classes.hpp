#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_NPC_CombatBase

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C
// 0x0058 (0x0188 - 0x0130)
class UBP_AIAction_NPC_CombatBase_C : public UPalAIActionBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0130(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 TargetActor;                                       // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          SelfActor;                                         // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalAICombatModule*                     CombatModule;                                      // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnerLocation;                                   // 0x0150(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnTerritoryRadius;                             // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TempDeltaTime;                                     // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalStateMachine*                       StateMachine;                                      // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMeleeWeapon;                                     // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActionAbort(class APawn* ControlledPawn);
	void ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult);
	void ActionPause(class APawn* ControlledPawn);
	void ActionStart(class APawn* ControlledPawn);
	void ActionTick(class APawn* ControlledPawn, float DeltaSeconds);
	void AddCombatState(class UClass* Param_Class);
	void ChangeReturnMode(bool* ChangeSuccess);
	void DamageResponseForCombat(const struct FPalDamageResult& DmgResult);
	void Event_OnDead(const struct FPalDeadInfo& DeadInfo);
	void ExecuteUbergraph_BP_AIAction_NPC_CombatBase(int32 EntryPoint);
	void FindTargetNearPoint(TArray<struct FVector>* PointList);
	void GetBodyActionComponentRef(class UPalActionComponent** ActionComp);
	void GetControllerRef(class ABP_NPCAIController_C** NPCAICon);
	void GetLeaderBB(class UBP_PalAIBlackboard_Common_C** LeaderBB);
	void GetMovementComponentRef(class UPalCharacterMovementComponent** Movement);
	void GetWeaponHandleRef(class UPalNPCAIWeaponHandle** WeaponHandle);
	void Is_Alive_Target_Actor(bool* Alive);
	void IsEndCurrentState(bool* IsEnd);
	void IsNearTarget(double Distance, bool IgnoreHeight, bool* Near);
	void LineTraceTarget(bool* HitToTarget);
	void MoveToTarget(bool* Param_IsNearTarget);
	void SightCheckAndResponseForCombat(bool* ChangeNextAction);
	void TargetChange();
	void TargetPlayerCameraCheck(bool* AttackAble);
	void TickFinishCheck(bool* ActionFinish);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AIAction_NPC_CombatBase_C">();
	}
	static class UBP_AIAction_NPC_CombatBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AIAction_NPC_CombatBase_C>();
	}
};
static_assert(alignof(UBP_AIAction_NPC_CombatBase_C) == 0x000008, "Wrong alignment on UBP_AIAction_NPC_CombatBase_C");
static_assert(sizeof(UBP_AIAction_NPC_CombatBase_C) == 0x000188, "Wrong size on UBP_AIAction_NPC_CombatBase_C");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, UberGraphFrame) == 0x000130, "Member 'UBP_AIAction_NPC_CombatBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, TargetActor) == 0x000138, "Member 'UBP_AIAction_NPC_CombatBase_C::TargetActor' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, SelfActor) == 0x000140, "Member 'UBP_AIAction_NPC_CombatBase_C::SelfActor' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, CombatModule) == 0x000148, "Member 'UBP_AIAction_NPC_CombatBase_C::CombatModule' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, SpawnerLocation) == 0x000150, "Member 'UBP_AIAction_NPC_CombatBase_C::SpawnerLocation' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, ReturnTerritoryRadius) == 0x000168, "Member 'UBP_AIAction_NPC_CombatBase_C::ReturnTerritoryRadius' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, TempDeltaTime) == 0x000170, "Member 'UBP_AIAction_NPC_CombatBase_C::TempDeltaTime' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, StateMachine) == 0x000178, "Member 'UBP_AIAction_NPC_CombatBase_C::StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_AIAction_NPC_CombatBase_C, IsMeleeWeapon) == 0x000180, "Member 'UBP_AIAction_NPC_CombatBase_C::IsMeleeWeapon' has a wrong offset!");

}

