#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalPlayerDataCharacterMake

#include "Basic.hpp"

#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalPlayerDataCharacterMake.BP_PalPlayerDataCharacterMake_C
// 0x0000 (0x00C0 - 0x00C0)
class UBP_PalPlayerDataCharacterMake_C final : public UPalPlayerDataCharacterMake
{
public:
	void CalcSubsurfaceColor(const struct FLinearColor& OriginalRGB, struct FLinearColor* SubsurfaceRGB);
	void ConvertMakeInfo_HSVToRGB(const struct FPalPlayerDataCharacterMakeInfo& MakeInfo, double SVLimit, struct FPalPlayerDataCharacterMakeInfo* ConvertedMakeInfo);
	void ConvertMakeInfo_RGBToHSV(const struct FPalPlayerDataCharacterMakeInfo& MakeInfo, double SVLimitValur, struct FPalPlayerDataCharacterMakeInfo* ConvertedMakeInfo);
	void GetBodyShiftRGB(class FName BodyMeshName, struct FLinearColor* OutRGB);
	void GetBrowShiftRGB(class FName HairMeshName, struct FLinearColor* OutRGB);
	void GetEyeShiftRGB(class FName HeadMeshName, class FName EyeMaterialName, struct FLinearColor* OutRGB);
	void GetHairShiftRGB(class FName HairMeshName, struct FLinearColor* OutRGB);
	void GetOriginalPresetMakeInfo(class FName PresetName, struct FPalPlayerDataCharacterMakeInfo* OutMakeInfo);
	void GetPresetMakeInfo(class UObject* WorldContextObject, const class FName& PresetName, struct FPalPlayerDataCharacterMakeInfo* OutMakeInfo);
	void RecalcHSV(const struct FLinearColor& BaseHSV, const struct FLinearColor& ShiftRGB, double SVLimit, struct FLinearColor* OutHSV);
	void RecalcRGB(const struct FLinearColor& InHSV, const struct FLinearColor& ShiftRGB, double SVLimit, struct FLinearColor* OutRGB);
	void RGBToHSV(const struct FLinearColor& InRGB, struct FLinearColor* OutHSV);

	class FName GetRandomBodyMeshName() const;
	class FName GetRandomHairMeshName() const;
	class FName GetRandomHeadMeshName() const;
	void GetRandomRawNameByDataTable(class UDataTable* DataTable, class FName* RawName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalPlayerDataCharacterMake_C">();
	}
	static class UBP_PalPlayerDataCharacterMake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PalPlayerDataCharacterMake_C>();
	}
};
static_assert(alignof(UBP_PalPlayerDataCharacterMake_C) == 0x000008, "Wrong alignment on UBP_PalPlayerDataCharacterMake_C");
static_assert(sizeof(UBP_PalPlayerDataCharacterMake_C) == 0x0000C0, "Wrong size on UBP_PalPlayerDataCharacterMake_C");

}

