#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_ItemInfo_TecnologyList

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEquipment_ItemInfo_TecnologyList.WBP_InventoryEquipment_ItemInfo_TecnologyList_C.ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B6[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Name;                           // 0x0018(0x0018)()
	int32                                         K2Node_CustomEvent_Num;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B7[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_CustomEvent_Icon;                           // 0x0038(0x0030)(HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Stock;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B8[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0014)()
	uint8                                         Pad_47B9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00B8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList) == 0x0000D8, "Wrong size on WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, EntryPoint) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_byte_Variable) == 0x000004, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_bool_Variable) == 0x000005, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_object_Variable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_object_Variable_1) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_CustomEvent_Name) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_CustomEvent_Num) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_CustomEvent_Num' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_CustomEvent_Icon) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_CustomEvent_Stock) == 0x000068, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_CustomEvent_Stock' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, CallFunc_Greater_IntInt_ReturnValue) == 0x00006D, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, CallFunc_SelectColor_ReturnValue) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_Select_Default) == 0x000098, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_byte_Variable_1) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, Temp_bool_Variable_1) == 0x0000D1, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList, K2Node_Select_Default_1) == 0x0000D2, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo_TecnologyList::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo_TecnologyList.WBP_InventoryEquipment_ItemInfo_TecnologyList_C.SetInfo
// 0x0058 (0x0058 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Num;                                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Param_Icon;                                        // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Stock;                                             // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo) == 0x000058, "Wrong size on WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo, Param_Name) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo::Param_Name' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo, Num) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo::Num' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo, Param_Icon) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo::Param_Icon' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo, Stock) == 0x000050, "Member 'WBP_InventoryEquipment_ItemInfo_TecnologyList_C_SetInfo::Stock' has a wrong offset!");

}

