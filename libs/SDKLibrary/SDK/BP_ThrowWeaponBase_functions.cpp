#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThrowWeaponBase

#include "Basic.hpp"

#include "BP_ThrowWeaponBase_classes.hpp"
#include "BP_ThrowWeaponBase_parameters.hpp"


namespace SDK
{

// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.ChangeRideThrowMontage
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_ThrowWeaponBase_C::ChangeRideThrowMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "ChangeRideThrowMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.ExecuteUbergraph_BP_ThrowWeaponBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::ExecuteUbergraph_BP_ThrowWeaponBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "ExecuteUbergraph_BP_ThrowWeaponBase");

	Params::BP_ThrowWeaponBase_C_ExecuteUbergraph_BP_ThrowWeaponBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.GetBulletShootRotation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         BulletRotate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ThrowWeaponBase_C::GetBulletShootRotation(struct FRotator* BulletRotate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "GetBulletShootRotation");

	Params::BP_ThrowWeaponBase_C_GetBulletShootRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BulletRotate != nullptr)
		*BulletRotate = std::move(Parms.BulletRotate);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.GetRideMontageByDirection
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Suceess                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     NextAnim                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::GetRideMontageByDirection(bool* Suceess, class UAnimMontage** NextAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "GetRideMontageByDirection");

	Params::BP_ThrowWeaponBase_C_GetRideMontageByDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Suceess != nullptr)
		*Suceess = Parms.Suceess;

	if (NextAnim != nullptr)
		*NextAnim = Parms.NextAnim;
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.GetTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::GetTargetLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "GetTargetLocation");

	Params::BP_ThrowWeaponBase_C_GetTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.GetThrowObjectClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           ThrowObject                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::GetThrowObjectClass(class UClass** ThrowObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "GetThrowObjectClass");

	Params::BP_ThrowWeaponBase_C_GetThrowObjectClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThrowObject != nullptr)
		*ThrowObject = Parms.ThrowObject;
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.On Throw
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ThrowWeaponBase_C::On_Throw()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "On Throw");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.OnPullTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_ThrowWeaponBase_C::OnPullTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "OnPullTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.OnWeaponNotify
// (Event, Public, BlueprintEvent)
// Parameters:
// EWeaponNotifyType                       Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::OnWeaponNotify(EWeaponNotifyType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "OnWeaponNotify");

	Params::BP_ThrowWeaponBase_C_OnWeaponNotify Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ThrowWeaponBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.ThrowEventDispatcher__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Bullet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_ThrowWeaponBase_C::ThrowEventDispatcher__DelegateSignature(class AActor* Bullet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "ThrowEventDispatcher__DelegateSignature");

	Params::BP_ThrowWeaponBase_C_ThrowEventDispatcher__DelegateSignature Parms{};

	Parms.Bullet = Bullet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ThrowWeaponBase.BP_ThrowWeaponBase_C.IsEnableAutoAim
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_ThrowWeaponBase_C::IsEnableAutoAim() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThrowWeaponBase_C", "IsEnableAutoAim");

	Params::BP_ThrowWeaponBase_C_IsEnableAutoAim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

