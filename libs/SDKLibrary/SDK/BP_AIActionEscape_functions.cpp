#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIActionEscape

#include "Basic.hpp"

#include "BP_AIActionEscape_classes.hpp"
#include "BP_AIActionEscape_parameters.hpp"


namespace SDK
{

// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionAbort
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionAbort(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionAbort");

	Params::BP_AIActionEscape_C_ActionAbort Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPawnActionResult                       WithResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionFinished");

	Params::BP_AIActionEscape_C_ActionFinished Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.WithResult = WithResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionTick(class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionTick");

	Params::BP_AIActionEscape_C_ActionTick Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ChangeReturnMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ChangeSuccess                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ChangeReturnMode(bool* ChangeSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ChangeReturnMode");

	Params::BP_AIActionEscape_C_ChangeReturnMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeSuccess != nullptr)
		*ChangeSuccess = Parms.ChangeSuccess;
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ExecuteUbergraph_BP_AIActionEscape
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ExecuteUbergraph_BP_AIActionEscape(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ExecuteUbergraph_BP_AIActionEscape");

	Params::BP_AIActionEscape_C_ExecuteUbergraph_BP_AIActionEscape Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.Is Far Spawn Point
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsFar                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::Is_Far_Spawn_Point(bool* IsFar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "Is Far Spawn Point");

	Params::BP_AIActionEscape_C_Is_Far_Spawn_Point Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFar != nullptr)
		*IsFar = Parms.IsFar;
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.NavMeshMove
// (BlueprintCallable, BlueprintEvent)

void UBP_AIActionEscape_C::NavMeshMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "NavMeshMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.OnFail_023A017548911A48339C18BEF9D1B042
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::OnFail_023A017548911A48339C18BEF9D1B042(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "OnFail_023A017548911A48339C18BEF9D1B042");

	Params::BP_AIActionEscape_C_OnFail_023A017548911A48339C18BEF9D1B042 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.OnSuccess_023A017548911A48339C18BEF9D1B042
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPathFollowingResult                    MovementResult                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::OnSuccess_023A017548911A48339C18BEF9D1B042(EPathFollowingResult MovementResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "OnSuccess_023A017548911A48339C18BEF9D1B042");

	Params::BP_AIActionEscape_C_OnSuccess_023A017548911A48339C18BEF9D1B042 Parms{};

	Parms.MovementResult = MovementResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.SetGoalLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::SetGoalLocation(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "SetGoalLocation");

	Params::BP_AIActionEscape_C_SetGoalLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionPause
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionPause(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionPause");

	Params::BP_AIActionEscape_C_ActionPause Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionResume
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionResume(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionResume");

	Params::BP_AIActionEscape_C_ActionResume Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.ActionStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::ActionStart(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "ActionStart");

	Params::BP_AIActionEscape_C_ActionStart Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.OnSquadMemberDeadEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     DeadInbfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_AIActionEscape_C::OnSquadMemberDeadEvent(const struct FPalDeadInfo& DeadInbfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "OnSquadMemberDeadEvent");

	Params::BP_AIActionEscape_C_OnSquadMemberDeadEvent Parms{};

	Parms.DeadInbfo = std::move(DeadInbfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIActionEscape.BP_AIActionEscape_C.SoundEvent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          EmitLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIActionEscape_C::SoundEvent(const struct FVector& EmitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIActionEscape_C", "SoundEvent");

	Params::BP_AIActionEscape_C_SoundEvent Parms{};

	Parms.EmitLocation = std::move(EmitLocation);

	UObject::ProcessEvent(Func, &Parms);
}

}

