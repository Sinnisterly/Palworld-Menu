#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DyingFriendLoupe

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.CalcScreenPosition
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_DyingFriendLoupe_C_CalcScreenPosition final
{
public:
	struct FVector                                CallFunc_GetTargetWorldLocation_outVector;         // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A8[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_CalcScreenPosition) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_CalcScreenPosition");
static_assert(sizeof(WBP_DyingFriendLoupe_C_CalcScreenPosition) == 0x0000C8, "Wrong size on WBP_DyingFriendLoupe_C_CalcScreenPosition");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_GetTargetWorldLocation_outVector) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_GetTargetWorldLocation_outVector' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000018, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x000028, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000070, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000090, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_CalcScreenPosition, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C0, "Member 'WBP_DyingFriendLoupe_C_CalcScreenPosition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.GetLoupeWidgetSize
// 0x0020 (0x0020 - 0x0000)
struct WBP_DyingFriendLoupe_C_GetLoupeWidgetSize final
{
public:
	struct FVector2D                              Param_WidgetSize;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_GetLoupeWidgetSize) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_GetLoupeWidgetSize");
static_assert(sizeof(WBP_DyingFriendLoupe_C_GetLoupeWidgetSize) == 0x000020, "Wrong size on WBP_DyingFriendLoupe_C_GetLoupeWidgetSize");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetLoupeWidgetSize, Param_WidgetSize) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_GetLoupeWidgetSize::Param_WidgetSize' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetLoupeWidgetSize, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WBP_DyingFriendLoupe_C_GetLoupeWidgetSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.GetTargetWidgetSize
// 0x0020 (0x0020 - 0x0000)
struct WBP_DyingFriendLoupe_C_GetTargetWidgetSize final
{
public:
	struct FVector2D                              OutVector;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_GetTargetWidgetSize) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_GetTargetWidgetSize");
static_assert(sizeof(WBP_DyingFriendLoupe_C_GetTargetWidgetSize) == 0x000020, "Wrong size on WBP_DyingFriendLoupe_C_GetTargetWidgetSize");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWidgetSize, OutVector) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_GetTargetWidgetSize::OutVector' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWidgetSize, CallFunc_GetDesiredSize_ReturnValue) == 0x000010, "Member 'WBP_DyingFriendLoupe_C_GetTargetWidgetSize::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.GetTargetWorldLocation
// 0x0040 (0x0040 - 0x0000)
struct WBP_DyingFriendLoupe_C_GetTargetWorldLocation final
{
public:
	struct FVector                                OutVector;                                         // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A9[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_GetTargetWorldLocation");
static_assert(sizeof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation) == 0x000040, "Wrong size on WBP_DyingFriendLoupe_C_GetTargetWorldLocation");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation, OutVector) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_GetTargetWorldLocation::OutVector' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000018, "Member 'WBP_DyingFriendLoupe_C_GetTargetWorldLocation::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_DyingFriendLoupe_C_GetTargetWorldLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WBP_DyingFriendLoupe_C_GetTargetWorldLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTargetWorldLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'WBP_DyingFriendLoupe_C_GetTargetWorldLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.GetTranslationTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_DyingFriendLoupe_C_GetTranslationTarget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_GetTranslationTarget) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_GetTranslationTarget");
static_assert(sizeof(WBP_DyingFriendLoupe_C_GetTranslationTarget) == 0x000008, "Wrong size on WBP_DyingFriendLoupe_C_GetTranslationTarget");
static_assert(offsetof(WBP_DyingFriendLoupe_C_GetTranslationTarget, Widget) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_GetTranslationTarget::Widget' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.IsEnableLoupe
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_DyingFriendLoupe_C_IsEnableLoupe final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    CallFunc_GetPalmi_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AB[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStatusBase*                         CallFunc_GetExecutionStatus_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Status_Dying_C*                     K2Node_DynamicCast_AsBP_Status_Dying;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_IsEnableLoupe) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_IsEnableLoupe");
static_assert(sizeof(WBP_DyingFriendLoupe_C_IsEnableLoupe) == 0x0000B0, "Wrong size on WBP_DyingFriendLoupe_C_IsEnableLoupe");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, ReturnValue) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_GetGameSetting_ReturnValue) == 0x000008, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000010, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_GetPalmi_ReturnValue) == 0x000018, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_GetPalmi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_VSize_ReturnValue) == 0x000068, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000071, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_TryGetIndividualActor_ReturnValue_1) == 0x000078, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_TryGetIndividualActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_IsVisible_ReturnValue) == 0x000081, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_GetExecutionStatus_ReturnValue) == 0x000088, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_GetExecutionStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_IsValid_ReturnValue_3) == 0x000090, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, K2Node_DynamicCast_AsBP_Status_Dying) == 0x000098, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::K2Node_DynamicCast_AsBP_Status_Dying' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_IsEnableLoupe, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'WBP_DyingFriendLoupe_C_IsEnableLoupe::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.OnSyncIndividualParameter
// 0x0068 (0x0068 - 0x0000)
struct WBP_DyingFriendLoupe_C_OnSyncIndividualParameter final
{
public:
	struct FPalInstanceID                         InstanceId;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidInstanceID_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B0[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStatusBase*                         CallFunc_GetExecutionStatus_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Status_Dying_C*                     K2Node_DynamicCast_AsBP_Status_Dying;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_OnSyncIndividualParameter");
static_assert(sizeof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter) == 0x000068, "Wrong size on WBP_DyingFriendLoupe_C_OnSyncIndividualParameter");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, InstanceId) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::InstanceId' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, CallFunc_IsValidInstanceID_ReturnValue) == 0x000030, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::CallFunc_IsValidInstanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000038, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue) == 0x000040, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, CallFunc_GetExecutionStatus_ReturnValue) == 0x000048, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::CallFunc_GetExecutionStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, K2Node_DynamicCast_AsBP_Status_Dying) == 0x000058, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::K2Node_DynamicCast_AsBP_Status_Dying' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_OnSyncIndividualParameter, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_DyingFriendLoupe_C_OnSyncIndividualParameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.SetFinalWidgetOpacity
// 0x0010 (0x0010 - 0x0000)
struct WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity final
{
public:
	double                                        CalcedOpacity;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity");
static_assert(sizeof(WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity) == 0x000010, "Wrong size on WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity");
static_assert(offsetof(WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity, CalcedOpacity) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity::CalcedOpacity' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000008, "Member 'WBP_DyingFriendLoupe_C_SetFinalWidgetOpacity::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.Setup
// 0x0098 (0x0098 - 0x0000)
struct WBP_DyingFriendLoupe_C_Setup final
{
public:
	class UBP_Status_Dying_C*                     DyingStatus;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalInstanceID                         CallFunc_GetIndividualID_ReturnValue;              // 0x0008(0x0030)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidInstanceID_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualParameter_ReturnValue;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B3[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName;                      // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalInstanceID& InstanceId)> K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double DyingHP, double MaxDyingHP)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_Setup) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_Setup");
static_assert(sizeof(WBP_DyingFriendLoupe_C_Setup) == 0x000098, "Wrong size on WBP_DyingFriendLoupe_C_Setup");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, DyingStatus) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_Setup::DyingStatus' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetIndividualID_ReturnValue) == 0x000008, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetIndividualID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_IsValidInstanceID_ReturnValue) == 0x000040, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_IsValidInstanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetIndividualParameter_ReturnValue) == 0x000050, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetNickName_outName) == 0x000060, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetNickName_outName' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'WBP_DyingFriendLoupe_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, CallFunc_GetCharacterManager_ReturnValue) == 0x000080, "Member 'WBP_DyingFriendLoupe_C_Setup::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WBP_DyingFriendLoupe_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WBP_DyingFriendLoupe.WBP_DyingFriendLoupe_C.UpdateArrowImageAngle
// 0x0010 (0x0010 - 0x0000)
struct WBP_DyingFriendLoupe_C_UpdateArrowImageAngle final
{
public:
	double                                        NewAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_DyingFriendLoupe_C_UpdateArrowImageAngle) == 0x000008, "Wrong alignment on WBP_DyingFriendLoupe_C_UpdateArrowImageAngle");
static_assert(sizeof(WBP_DyingFriendLoupe_C_UpdateArrowImageAngle) == 0x000010, "Wrong size on WBP_DyingFriendLoupe_C_UpdateArrowImageAngle");
static_assert(offsetof(WBP_DyingFriendLoupe_C_UpdateArrowImageAngle, NewAngle) == 0x000000, "Member 'WBP_DyingFriendLoupe_C_UpdateArrowImageAngle::NewAngle' has a wrong offset!");
static_assert(offsetof(WBP_DyingFriendLoupe_C_UpdateArrowImageAngle, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000008, "Member 'WBP_DyingFriendLoupe_C_UpdateArrowImageAngle::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

}

