#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_DodgeStep

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.ActionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_DodgeStep_C_ActionStart final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_ActionStart) == 0x000008, "Wrong alignment on BP_AIAction_DodgeStep_C_ActionStart");
static_assert(sizeof(BP_AIAction_DodgeStep_C_ActionStart) == 0x000008, "Wrong size on BP_AIAction_DodgeStep_C_ActionStart");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ActionStart, ControlledPawn) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_ActionStart::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.CanStep
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_DodgeStep_C_CanStep final
{
public:
	class UPalActionComponent*                    ActionComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_CanStep;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionBase*                         CallFunc_GetCurrentAction_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalActionStepBase_C*                K2Node_DynamicCast_AsBP_Pal_Action_Step_Base;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_CanStep) == 0x000008, "Wrong alignment on BP_AIAction_DodgeStep_C_CanStep");
static_assert(sizeof(BP_AIAction_DodgeStep_C_CanStep) == 0x000028, "Wrong size on BP_AIAction_DodgeStep_C_CanStep");
static_assert(offsetof(BP_AIAction_DodgeStep_C_CanStep, ActionComponent) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_CanStep::ActionComponent' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_CanStep, Param_CanStep) == 0x000008, "Member 'BP_AIAction_DodgeStep_C_CanStep::Param_CanStep' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_CanStep, CallFunc_GetCurrentAction_ReturnValue) == 0x000010, "Member 'BP_AIAction_DodgeStep_C_CanStep::CallFunc_GetCurrentAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_CanStep, K2Node_DynamicCast_AsBP_Pal_Action_Step_Base) == 0x000018, "Member 'BP_AIAction_DodgeStep_C_CanStep::K2Node_DynamicCast_AsBP_Pal_Action_Step_Base' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_CanStep, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIAction_DodgeStep_C_CanStep::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.ExecuteUbergraph_BP_AIAction_DodgeStep
// 0x0120 (0x0120 - 0x0000)
struct BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3526[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStep_CanStep;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3527[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActionDynamicParameter                K2Node_MakeStruct_ActionDynamicParameter;          // 0x0020(0x00E0)()
	EPalActionType                                CallFunc_GetStepType_NewParam;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3528[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionBase*                         CallFunc_PlayActionByTypeParameter_ReturnValue;    // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetStepTime_StepTime;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep) == 0x000010, "Wrong alignment on BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep");
static_assert(sizeof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep) == 0x000120, "Wrong size on BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, EntryPoint) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, K2Node_Event_ControlledPawn) == 0x000008, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_CanStep_CanStep) == 0x000018, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_CanStep_CanStep' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, K2Node_MakeStruct_ActionDynamicParameter) == 0x000020, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::K2Node_MakeStruct_ActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_GetStepType_NewParam) == 0x000100, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_GetStepType_NewParam' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_PlayActionByTypeParameter_ReturnValue) == 0x000108, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_PlayActionByTypeParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_GetStepTime_StepTime) == 0x000110, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_GetStepTime_StepTime' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep, CallFunc_Delay_Duration_ImplicitCast) == 0x000118, "Member 'BP_AIAction_DodgeStep_C_ExecuteUbergraph_BP_AIAction_DodgeStep::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.GetStepTime
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_DodgeStep_C_GetStepTime final
{
public:
	class UPalActionBase*                         ActionComp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        StepTime;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultStepTime;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PalActionStepBase_C*                K2Node_DynamicCast_AsBP_Pal_Action_Step_Base;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_GetStepTime) == 0x000008, "Wrong alignment on BP_AIAction_DodgeStep_C_GetStepTime");
static_assert(sizeof(BP_AIAction_DodgeStep_C_GetStepTime) == 0x000028, "Wrong size on BP_AIAction_DodgeStep_C_GetStepTime");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepTime, ActionComp) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_GetStepTime::ActionComp' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepTime, StepTime) == 0x000008, "Member 'BP_AIAction_DodgeStep_C_GetStepTime::StepTime' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepTime, DefaultStepTime) == 0x000010, "Member 'BP_AIAction_DodgeStep_C_GetStepTime::DefaultStepTime' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepTime, K2Node_DynamicCast_AsBP_Pal_Action_Step_Base) == 0x000018, "Member 'BP_AIAction_DodgeStep_C_GetStepTime::K2Node_DynamicCast_AsBP_Pal_Action_Step_Base' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepTime, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIAction_DodgeStep_C_GetStepTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.GetStepType
// 0x0002 (0x0002 - 0x0000)
struct BP_AIAction_DodgeStep_C_GetStepType final
{
public:
	EPalActionType                                NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_GetStepType) == 0x000001, "Wrong alignment on BP_AIAction_DodgeStep_C_GetStepType");
static_assert(sizeof(BP_AIAction_DodgeStep_C_GetStepType) == 0x000002, "Wrong size on BP_AIAction_DodgeStep_C_GetStepType");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepType, NewParam) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_GetStepType::NewParam' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_GetStepType, CallFunc_RandomBool_ReturnValue) == 0x000001, "Member 'BP_AIAction_DodgeStep_C_GetStepType::CallFunc_RandomBool_ReturnValue' has a wrong offset!");

// Function BP_AIAction_DodgeStep.BP_AIAction_DodgeStep_C.RotateToAttacker
// 0x0060 (0x0060 - 0x0000)
struct BP_AIAction_DodgeStep_C_RotateToAttacker final
{
public:
	class AActor*                                 Defender;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Attacker;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_DodgeStep_C_RotateToAttacker) == 0x000008, "Wrong alignment on BP_AIAction_DodgeStep_C_RotateToAttacker");
static_assert(sizeof(BP_AIAction_DodgeStep_C_RotateToAttacker) == 0x000060, "Wrong size on BP_AIAction_DodgeStep_C_RotateToAttacker");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, Defender) == 0x000000, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::Defender' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, Attacker) == 0x000008, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::Attacker' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000028, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, CallFunc_FindLookAtRotation_ReturnValue) == 0x000040, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_DodgeStep_C_RotateToAttacker, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000058, "Member 'BP_AIAction_DodgeStep_C_RotateToAttacker::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

