#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoupeBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_LoupeBase.WBP_LoupeBase_C.AdjustAlpha
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_LoupeBase_C_AdjustAlpha final
{
public:
	struct FVector2D                              FinalScreenPos;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Alpha;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_AdjustAlpha) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_AdjustAlpha");
static_assert(sizeof(WBP_LoupeBase_C_AdjustAlpha) == 0x0000D0, "Wrong size on WBP_LoupeBase_C_AdjustAlpha");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, FinalScreenPos) == 0x000000, "Member 'WBP_LoupeBase_C_AdjustAlpha::FinalScreenPos' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, Alpha) == 0x000010, "Member 'WBP_LoupeBase_C_AdjustAlpha::Alpha' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_FMin_ReturnValue_1) == 0x000058, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_Abs_ReturnValue_1) == 0x000060, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_MakeVector2D_ReturnValue_1) == 0x000078, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000088, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_X_2) == 0x0000A8, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_BreakVector2D_Y_2) == 0x0000B0, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_FMax_ReturnValue) == 0x0000B8, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_AdjustAlpha, CallFunc_FMin_ReturnValue_2) == 0x0000C8, "Member 'WBP_LoupeBase_C_AdjustAlpha::CallFunc_FMin_ReturnValue_2' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.GetLoupeWidgetSize
// 0x0010 (0x0010 - 0x0000)
struct WBP_LoupeBase_C_GetLoupeWidgetSize final
{
public:
	struct FVector2D                              Param_WidgetSize;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_GetLoupeWidgetSize) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_GetLoupeWidgetSize");
static_assert(sizeof(WBP_LoupeBase_C_GetLoupeWidgetSize) == 0x000010, "Wrong size on WBP_LoupeBase_C_GetLoupeWidgetSize");
static_assert(offsetof(WBP_LoupeBase_C_GetLoupeWidgetSize, Param_WidgetSize) == 0x000000, "Member 'WBP_LoupeBase_C_GetLoupeWidgetSize::Param_WidgetSize' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.GetTranslationTarget
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoupeBase_C_GetTranslationTarget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_GetTranslationTarget) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_GetTranslationTarget");
static_assert(sizeof(WBP_LoupeBase_C_GetTranslationTarget) == 0x000008, "Wrong size on WBP_LoupeBase_C_GetTranslationTarget");
static_assert(offsetof(WBP_LoupeBase_C_GetTranslationTarget, Widget) == 0x000000, "Member 'WBP_LoupeBase_C_GetTranslationTarget::Widget' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.RoundScreenPosition
// 0x0020 (0x0020 - 0x0000)
struct WBP_LoupeBase_C_RoundScreenPosition final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CalcedPosition;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_RoundScreenPosition) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_RoundScreenPosition");
static_assert(sizeof(WBP_LoupeBase_C_RoundScreenPosition) == 0x000020, "Wrong size on WBP_LoupeBase_C_RoundScreenPosition");
static_assert(offsetof(WBP_LoupeBase_C_RoundScreenPosition, ScreenPosition) == 0x000000, "Member 'WBP_LoupeBase_C_RoundScreenPosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_RoundScreenPosition, CalcedPosition) == 0x000010, "Member 'WBP_LoupeBase_C_RoundScreenPosition::CalcedPosition' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.SetFinalWidgetOpacity
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoupeBase_C_SetFinalWidgetOpacity final
{
public:
	double                                        CalcedOpacity;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_SetFinalWidgetOpacity) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_SetFinalWidgetOpacity");
static_assert(sizeof(WBP_LoupeBase_C_SetFinalWidgetOpacity) == 0x000008, "Wrong size on WBP_LoupeBase_C_SetFinalWidgetOpacity");
static_assert(offsetof(WBP_LoupeBase_C_SetFinalWidgetOpacity, CalcedOpacity) == 0x000000, "Member 'WBP_LoupeBase_C_SetFinalWidgetOpacity::CalcedOpacity' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdateArrowImageAngle
// 0x0008 (0x0008 - 0x0000)
struct WBP_LoupeBase_C_UpdateArrowImageAngle final
{
public:
	double                                        NewAngle;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_UpdateArrowImageAngle) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_UpdateArrowImageAngle");
static_assert(sizeof(WBP_LoupeBase_C_UpdateArrowImageAngle) == 0x000008, "Wrong size on WBP_LoupeBase_C_UpdateArrowImageAngle");
static_assert(offsetof(WBP_LoupeBase_C_UpdateArrowImageAngle, NewAngle) == 0x000000, "Member 'WBP_LoupeBase_C_UpdateArrowImageAngle::NewAngle' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdateLoupeTranslation
// 0x0058 (0x0058 - 0x0000)
struct WBP_LoupeBase_C_UpdateLoupeTranslation final
{
public:
	double                                        CallFunc_AdjustAlpha_alpha;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_RoundScreenPosition_calcedPosition;       // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTranslationTarget_widget;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTranslationTarget_widget_1;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_UpdateLoupeTranslation) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_UpdateLoupeTranslation");
static_assert(sizeof(WBP_LoupeBase_C_UpdateLoupeTranslation) == 0x000058, "Wrong size on WBP_LoupeBase_C_UpdateLoupeTranslation");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_AdjustAlpha_alpha) == 0x000000, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_AdjustAlpha_alpha' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_RoundScreenPosition_calcedPosition) == 0x000008, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_RoundScreenPosition_calcedPosition' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_GetTranslationTarget_widget) == 0x000018, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_GetTranslationTarget_widget' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_GetTranslationTarget_widget_1) == 0x000020, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_GetTranslationTarget_widget_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000038, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdateLoupeTranslation, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000048, "Member 'WBP_LoupeBase_C_UpdateLoupeTranslation::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdatePositionAndVisibility
// 0x0278 (0x0278 - 0x0000)
struct WBP_LoupeBase_C_UpdatePositionAndVisibility final
{
public:
	double                                        Dot;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RootLocation;                                      // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NewLocation;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TmpY;                                              // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TmpX;                                              // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3977[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLoupeWidgetSize_widgetSize;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3978[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3979[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397A[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397B[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397C[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397D[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397E[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldToScreenBehindCamera_ScreenPosition; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreenBehindCamera_bTargetBehindCamera; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldToScreenBehindCamera_ReturnValue; // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397F[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3980[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3981[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3982[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_tmpY_ImplicitCast;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_LoupeBase_C_UpdatePositionAndVisibility) == 0x000008, "Wrong alignment on WBP_LoupeBase_C_UpdatePositionAndVisibility");
static_assert(sizeof(WBP_LoupeBase_C_UpdatePositionAndVisibility) == 0x000278, "Wrong size on WBP_LoupeBase_C_UpdatePositionAndVisibility");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, Dot) == 0x000000, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::Dot' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, RootLocation) == 0x000008, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::RootLocation' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, TargetLocation) == 0x000020, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::TargetLocation' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, NewLocation) == 0x000038, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::NewLocation' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, TmpY) == 0x000048, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::TmpY' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, TmpX) == 0x000050, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::TmpX' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_GetLoupeWidgetSize_widgetSize) == 0x000060, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_GetLoupeWidgetSize_widgetSize' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000070, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X) == 0x000080, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y) == 0x000088, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X_1) == 0x000090, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y_1) == 0x000098, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_GetViewportScale_ReturnValue) == 0x0000A0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_ReturnValue) == 0x0000B8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000C8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_IntInt_ReturnValue) == 0x0000D8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x0000DC, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000E0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E4, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000E8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000F8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_ReturnValue_2) == 0x000100, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000110, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_ReturnValue_3) == 0x000118, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000128, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X_2) == 0x000130, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y_2) == 0x000138, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_ReturnValue_4) == 0x000140, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000150, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X_3) == 0x000158, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y_3) == 0x000160, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_SelectFloat_ReturnValue) == 0x000180, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Abs_ReturnValue) == 0x000188, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Abs_ReturnValue_1) == 0x000198, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X_4) == 0x0001A0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y_4) == 0x0001A8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_FMax_ReturnValue) == 0x0001B0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_DegAtan2_ReturnValue) == 0x0001B8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0001C0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0001C8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_GetLocalPlayerController_ReturnValue) == 0x0001D8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_ProjectWorldToScreenBehindCamera_ScreenPosition) == 0x0001E0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_ProjectWorldToScreenBehindCamera_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_ProjectWorldToScreenBehindCamera_bTargetBehindCamera) == 0x0001F0, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_ProjectWorldToScreenBehindCamera_bTargetBehindCamera' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_ProjectWorldToScreenBehindCamera_ReturnValue) == 0x0001F1, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_ProjectWorldToScreenBehindCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0001F2, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BooleanOR_ReturnValue) == 0x0001F3, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0001F8, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000208, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000210, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000220, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_X_5) == 0x000228, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BreakVector2D_Y_5) == 0x000230, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000238, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000239, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x00023A, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BooleanAND_ReturnValue_2) == 0x00023B, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_BooleanAND_ReturnValue_3) == 0x00023C, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000240, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000248, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, K2Node_VariableSet_tmpY_ImplicitCast) == 0x000250, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::K2Node_VariableSet_tmpY_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000258, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000260, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000268, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_LoupeBase_C_UpdatePositionAndVisibility, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000270, "Member 'WBP_LoupeBase_C_UpdatePositionAndVisibility::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");

}

