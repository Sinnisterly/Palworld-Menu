#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_CanCombatBase

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ActionAbort
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ActionAbort final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ActionAbort) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ActionAbort");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ActionAbort) == 0x000008, "Wrong size on BP_AIAction_CanCombatBase_C_ActionAbort");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionAbort, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ActionAbort::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ActionFinished
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ActionFinished final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             WithResult;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ActionFinished) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ActionFinished");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ActionFinished) == 0x000010, "Wrong size on BP_AIAction_CanCombatBase_C_ActionFinished");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionFinished, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ActionFinished::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionFinished, WithResult) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_ActionFinished::WithResult' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ActionPause
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ActionPause final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ActionPause) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ActionPause");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ActionPause) == 0x000008, "Wrong size on BP_AIAction_CanCombatBase_C_ActionPause");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionPause, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ActionPause::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ActionResume
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ActionResume final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ActionResume) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ActionResume");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ActionResume) == 0x000008, "Wrong size on BP_AIAction_CanCombatBase_C_ActionResume");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionResume, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ActionResume::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ActionStart
// 0x0008 (0x0008 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ActionStart final
{
public:
	class APawn*                                  ControlledPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ActionStart) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ActionStart");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ActionStart) == 0x000008, "Wrong size on BP_AIAction_CanCombatBase_C_ActionStart");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ActionStart, ControlledPawn) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ActionStart::ControlledPawn' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.DamageEventToCombatMode
// 0x0078 (0x0078 - 0x0000)
struct BP_AIAction_CanCombatBase_C_DamageEventToCombatMode final
{
public:
	struct FPalDamageResult                       DamageResult;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D5[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_DamageEventToCombatMode");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode) == 0x000078, "Wrong size on BP_AIAction_CanCombatBase_C_DamageEventToCombatMode");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, DamageResult) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::DamageResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_GetBattleManager_ReturnValue) == 0x000050, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue) == 0x000068, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_DamageEventToCombatMode, CallFunc_GetBattleManager_ReturnValue_1) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_DamageEventToCombatMode::CallFunc_GetBattleManager_ReturnValue_1' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.ExecuteUbergraph_BP_AIAction_CanCombatBase
// 0x0118 (0x0118 - 0x0000)
struct BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPawnActionResult                             K2Node_Event_WithResult;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FVector& EmitLocation)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_4;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_2;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSquadBehaviour_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D8[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalSquad*                              CallFunc_GetSquad_ReturnValue;                     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController_1;           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D9[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_5;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSquadBehaviour_ReturnValue_1;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalSquad*                              CallFunc_GetSquad_ReturnValue_1;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue_3;        // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DB[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_6;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase) == 0x000118, "Wrong size on BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, EntryPoint) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_ControlledPawn) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_ControlledPawn_3) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_ControlledPawn_2) == 0x000028, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_ControlledPawn_1) == 0x000030, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_WithResult) == 0x000038, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_WithResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_1) == 0x000048, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_Event_ControlledPawn_4) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_Event_ControlledPawn_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_2) == 0x000078, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_K2_GetPawn_ReturnValue) == 0x000080, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_3) == 0x000088, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetComponentByClass_ReturnValue_2) == 0x000090, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_DynamicCast_AsPal_AIController) == 0x000098, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetIsSquadBehaviour_ReturnValue) == 0x0000A1, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetIsSquadBehaviour_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetSquad_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_4) == 0x0000C0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_DynamicCast_AsPal_AIController_1) == 0x0000C8, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_DynamicCast_AsPal_AIController_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_5) == 0x0000D8, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetIsSquadBehaviour_ReturnValue_1) == 0x0000E0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetIsSquadBehaviour_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000E8, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetSquad_ReturnValue_1) == 0x0000F0, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetSquad_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0000F8, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_IsValid_ReturnValue_1) == 0x000102, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetController_ReturnValue_6) == 0x000108, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000110, "Member 'BP_AIAction_CanCombatBase_C_ExecuteUbergraph_BP_AIAction_CanCombatBase::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.Fun_Damage_AIResponse
// 0x00D8 (0x00D8 - 0x0000)
struct BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse final
{
public:
	struct FPalDamageResult                       DamageResult;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class APalCharacter*                          TempTargetActor;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class APalCharacter*>                  AttackerList;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DC[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DD[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DE[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15DF[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E0[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse) == 0x0000D8, "Wrong size on BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, DamageResult) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::DamageResult' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, TempTargetActor) == 0x000050, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::TempTargetActor' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, AttackerList) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::AttackerList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, K2Node_DynamicCast_AsPal_Character) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_K2_GetPawn_ReturnValue) == 0x000098, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_GetBattleManager_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_GetController_ReturnValue_1) == 0x0000B8, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000C0, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x0000C8, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, CallFunc_SelectResponseBySenses_ReturnValue) == 0x0000D0, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse, K2Node_SwitchEnum_CmpSuccess) == 0x0000D1, "Member 'BP_AIAction_CanCombatBase_C_Fun_Damage_AIResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.GetLeader
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_CanCombatBase_C_GetLeader final
{
public:
	class APalCharacter*                          Leader;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetSquadLeader_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_GetLeader) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_GetLeader");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_GetLeader) == 0x000020, "Wrong size on BP_AIAction_CanCombatBase_C_GetLeader");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeader, Leader) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_GetLeader::Leader' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeader, CallFunc_GetPalAIController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_GetLeader::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeader, CallFunc_GetSquadLeader_ReturnValue) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_GetLeader::CallFunc_GetSquadLeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeader, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_GetLeader::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeader, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_AIAction_CanCombatBase_C_GetLeader::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.GetLeaderPalBrackBoard
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard final
{
public:
	class UBP_PalAIBlackboard_Common_C*           BB;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAIBlackboardBase*                   CallFunc_GetLeaderPalBlackboard_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalAIBlackboard_Common_C*           K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard) == 0x000028, "Wrong size on BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard, BB) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard::BB' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard, CallFunc_GetPalAIController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard, CallFunc_GetLeaderPalBlackboard_ReturnValue) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard::CallFunc_GetLeaderPalBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard, K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard::K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_AIAction_CanCombatBase_C_GetLeaderPalBrackBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.GetSelfPalBlackBoard
// 0x0030 (0x0030 - 0x0000)
struct BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard final
{
public:
	class UBP_PalAIBlackboard_Common_C*           PalBlackBoard;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAIBlackboardBase*                   CallFunc_GetMyPalBlackboard_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E1[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard) == 0x000030, "Wrong size on BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, PalBlackBoard) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::PalBlackBoard' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, CallFunc_GetPalAIController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, CallFunc_GetMyPalBlackboard_ReturnValue) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::CallFunc_GetMyPalBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common) == 0x000020, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AIAction_CanCombatBase_C_GetSelfPalBlackBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.IsLeader
// 0x0020 (0x0020 - 0x0000)
struct BP_AIAction_CanCombatBase_C_IsLeader final
{
public:
	bool                                          Leader;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLeader_ReturnValue;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_IsLeader) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_IsLeader");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_IsLeader) == 0x000020, "Wrong size on BP_AIAction_CanCombatBase_C_IsLeader");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_IsLeader, Leader) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_IsLeader::Leader' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_IsLeader, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_IsLeader::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_IsLeader, K2Node_DynamicCast_AsPal_AIController) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_IsLeader::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_IsLeader, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_IsLeader::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_IsLeader, CallFunc_IsLeader_ReturnValue) == 0x000019, "Member 'BP_AIAction_CanCombatBase_C_IsLeader::CallFunc_IsLeader_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.OnSquadMemberDeadEvent
// 0x0168 (0x0168 - 0x0000)
struct BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent final
{
public:
	struct FPalDeadInfo                           DeadInbfo;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TArray<class APalCharacter*>                  KillerList;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 TempKiller;                                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0068(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E3[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E4[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E5[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E6[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIBlackboardBase*                   CallFunc_GetMyPalBlackboard_ReturnValue;           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E7[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PalAIBlackboard_Common_C*           K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common;   // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E8[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInSightKillerAndDeadBody_ReturnValue;   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent) == 0x000168, "Wrong size on BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, DeadInbfo) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::DeadInbfo' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, KillerList) == 0x000050, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::KillerList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, TempKiller) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::TempKiller' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000068, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x0000B8, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetController_ReturnValue) == 0x0000C0, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D0, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetController_ReturnValue_1) == 0x0000D8, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_DynamicCast_AsPal_Character) == 0x0000E0, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000F0, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetBattleManager_ReturnValue) == 0x000100, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetController_ReturnValue_2) == 0x000108, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000110, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetPalAIController_ReturnValue) == 0x000118, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x000120, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_SelectResponseBySenses_ReturnValue) == 0x000128, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetMyPalBlackboard_ReturnValue) == 0x000130, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetMyPalBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000138, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common) == 0x000140, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_DynamicCast_AsBP_Pal_AIBlackboard_Common' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetController_ReturnValue_3) == 0x000150, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000158, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent, CallFunc_IsInSightKillerAndDeadBody_ReturnValue) == 0x000160, "Member 'BP_AIAction_CanCombatBase_C_OnSquadMemberDeadEvent::CallFunc_IsInSightKillerAndDeadBody_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SearchDeadEdibleBody
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody final
{
public:
	bool                                          ChangeNextAction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15E9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TempTarget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0010(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAISensorComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllEdibleDeadNPC_InSightCharacters; // 0x0090(0x0010)(ReferenceParm)
	class APalCharacter*                          CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody) == 0x0000B0, "Wrong size on BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, ChangeNextAction) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::ChangeNextAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, TempTarget) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::TempTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_GetController_ReturnValue_1) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_K2_GetPawn_ReturnValue) == 0x000078, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000088, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_SightCheckAllEdibleDeadNPC_InSightCharacters) == 0x000090, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_SightCheckAllEdibleDeadNPC_InSightCharacters' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody, CallFunc_Greater_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_AIAction_CanCombatBase_C_SearchDeadEdibleBody::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SelfMoveToLocation
// 0x0028 (0x0028 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SelfMoveToLocation final
{
public:
	struct FVector                                Goal;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       CallFunc_GetPalAIController_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SelfMoveToLocation) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SelfMoveToLocation");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SelfMoveToLocation) == 0x000028, "Wrong size on BP_AIAction_CanCombatBase_C_SelfMoveToLocation");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SelfMoveToLocation, Goal) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SelfMoveToLocation::Goal' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SelfMoveToLocation, CallFunc_GetPalAIController_ReturnValue) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_SelfMoveToLocation::CallFunc_GetPalAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SelfMoveToLocation, CallFunc_MoveToLocation_ReturnValue) == 0x000020, "Member 'BP_AIAction_CanCombatBase_C_SelfMoveToLocation::CallFunc_MoveToLocation_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SightCheck
// 0x0068 (0x0068 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SightCheck final
{
public:
	EPalAIResponseType                            CurrentState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideIsDamage;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EA[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            ResponseType;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APalCharacter*>                  TempTargetList;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllPlayer_InSightPlayers;       // 0x0028(0x0010)(ReferenceParm)
	TArray<class APalCharacter*>                  CallFunc_SightCheckAllAliveNPC_InSightCharacters;  // 0x0038(0x0010)(ReferenceParm)
	class APalCharacter*                          CallFunc_SelectResponseBySenses_OutTargetCharacter; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SelectResponseBySenses_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCheatManager*                       CallFunc_GetPalCheatManager_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisableEnemyEyeSight_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SightCheck) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SightCheck");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SightCheck) == 0x000068, "Wrong size on BP_AIAction_CanCombatBase_C_SightCheck");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CurrentState) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CurrentState' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, OverrideIsDamage) == 0x000001, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::OverrideIsDamage' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, Target) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, ResponseType) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::ResponseType' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, TempTargetList) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::TempTargetList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_SightCheckAllPlayer_InSightPlayers) == 0x000028, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_SightCheckAllPlayer_InSightPlayers' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_SightCheckAllAliveNPC_InSightCharacters) == 0x000038, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_SightCheckAllAliveNPC_InSightCharacters' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_SelectResponseBySenses_OutTargetCharacter) == 0x000048, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_SelectResponseBySenses_OutTargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_SelectResponseBySenses_ReturnValue) == 0x000050, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_SelectResponseBySenses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_GetPalCheatManager_ReturnValue) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_GetPalCheatManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_IsDisableEnemyEyeSight_ReturnValue) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_IsDisableEnemyEyeSight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheck, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_AIAction_CanCombatBase_C_SightCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SightCheckAndResponse
// 0x0030 (0x0030 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SightCheckAndResponse final
{
public:
	EPalAIResponseType                            Current;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideIsDamage;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeNextAction;                                  // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15ED[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APalCharacter*>                  TempTargetList;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 TempTarget;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_SightCheck_Target;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            CallFunc_SightCheck_ResponseType;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SightResponse_ChangeNextAction;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SightCheckAndResponse");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse) == 0x000030, "Wrong size on BP_AIAction_CanCombatBase_C_SightCheckAndResponse");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, Current) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::Current' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, OverrideIsDamage) == 0x000001, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::OverrideIsDamage' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, ChangeNextAction) == 0x000002, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::ChangeNextAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, TempTargetList) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::TempTargetList' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, TempTarget) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::TempTarget' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, CallFunc_SightCheck_Target) == 0x000020, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::CallFunc_SightCheck_Target' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, CallFunc_SightCheck_ResponseType) == 0x000028, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::CallFunc_SightCheck_ResponseType' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightCheckAndResponse, CallFunc_SightResponse_ChangeNextAction) == 0x000029, "Member 'BP_AIAction_CanCombatBase_C_SightCheckAndResponse::CallFunc_SightResponse_ChangeNextAction' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SightResponse
// 0x0010 (0x0010 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SightResponse final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalAIResponseType                            ResponseType;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeNextAction;                                  // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SightResponse) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SightResponse");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SightResponse) == 0x000010, "Wrong size on BP_AIAction_CanCombatBase_C_SightResponse");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightResponse, Target) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SightResponse::Target' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightResponse, ResponseType) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_SightResponse::ResponseType' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightResponse, ChangeNextAction) == 0x000009, "Member 'BP_AIAction_CanCombatBase_C_SightResponse::ChangeNextAction' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SightResponse, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_AIAction_CanCombatBase_C_SightResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.SoundEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_AIAction_CanCombatBase_C_SoundEvent final
{
public:
	struct FVector                                EmitLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_SoundEvent) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_SoundEvent");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_SoundEvent) == 0x000018, "Wrong size on BP_AIAction_CanCombatBase_C_SoundEvent");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_SoundEvent, EmitLocation) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_SoundEvent::EmitLocation' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.StartCombatMode
// 0x00C8 (0x00C8 - 0x0000)
struct BP_AIAction_CanCombatBase_C_StartCombatMode final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0008(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EE[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalBattleManager*                      CallFunc_GetBattleManager_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EF[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController_1;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15F0[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_StartCombatMode) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_StartCombatMode");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_StartCombatMode) == 0x0000C8, "Wrong size on BP_AIAction_CanCombatBase_C_StartCombatMode");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, TargetActor) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_AsPal_Character) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetController_ReturnValue) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetBattleManager_ReturnValue) == 0x000078, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetBattleManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_AsPal_AIController) == 0x000080, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue) == 0x000089, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_TargetIsPlayerOrPlayersOtomoPal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetController_ReturnValue_1) == 0x000090, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetController_ReturnValue_2) == 0x000098, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_AsPal_AIController_1) == 0x0000A0, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_AsPal_AIController_1' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetController_ReturnValue_3) == 0x0000B0, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_K2_GetPawn_ReturnValue) == 0x0000B8, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartCombatMode, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'BP_AIAction_CanCombatBase_C_StartCombatMode::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.StartEscapeMode
// 0x0068 (0x0068 - 0x0000)
struct BP_AIAction_CanCombatBase_C_StartEscapeMode final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0010(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_StartEscapeMode) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_StartEscapeMode");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_StartEscapeMode) == 0x000068, "Wrong size on BP_AIAction_CanCombatBase_C_StartEscapeMode");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartEscapeMode, TargetActor) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_StartEscapeMode::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartEscapeMode, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_StartEscapeMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartEscapeMode, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000010, "Member 'BP_AIAction_CanCombatBase_C_StartEscapeMode::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartEscapeMode, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000060, "Member 'BP_AIAction_CanCombatBase_C_StartEscapeMode::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.StartFriendlyLookatMode
// 0x0060 (0x0060 - 0x0000)
struct BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0008(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode) == 0x000060, "Wrong size on BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode, TargetActor) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000008, "Member 'BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000058, "Member 'BP_AIAction_CanCombatBase_C_StartFriendlyLookatMode::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");

// Function BP_AIAction_CanCombatBase.BP_AIAction_CanCombatBase_C.StartWarningMode
// 0x0078 (0x0078 - 0x0000)
struct BP_AIAction_CanCombatBase_C_StartWarningMode final
{
public:
	struct FVector                                AttentionLocation;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalAIActionDynamicParameter           K2Node_MakeStruct_PalAIActionDynamicParameter;     // 0x0020(0x0050)(NoDestructor)
	class UPalAIActionBase*                       CallFunc_SetAIActionClassParameter_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AIAction_CanCombatBase_C_StartWarningMode) == 0x000008, "Wrong alignment on BP_AIAction_CanCombatBase_C_StartWarningMode");
static_assert(sizeof(BP_AIAction_CanCombatBase_C_StartWarningMode) == 0x000078, "Wrong size on BP_AIAction_CanCombatBase_C_StartWarningMode");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartWarningMode, AttentionLocation) == 0x000000, "Member 'BP_AIAction_CanCombatBase_C_StartWarningMode::AttentionLocation' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartWarningMode, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_AIAction_CanCombatBase_C_StartWarningMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartWarningMode, K2Node_MakeStruct_PalAIActionDynamicParameter) == 0x000020, "Member 'BP_AIAction_CanCombatBase_C_StartWarningMode::K2Node_MakeStruct_PalAIActionDynamicParameter' has a wrong offset!");
static_assert(offsetof(BP_AIAction_CanCombatBase_C_StartWarningMode, CallFunc_SetAIActionClassParameter_ReturnValue) == 0x000070, "Member 'BP_AIAction_CanCombatBase_C_StartWarningMode::CallFunc_SetAIActionClassParameter_ReturnValue' has a wrong offset!");

}

