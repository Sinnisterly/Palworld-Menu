#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OtomoPalHolderComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateAllPalInArena
// 0x00F0 (0x00F0 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateAllPalInArena final
{
public:
	TArray<struct FTransform>                     SpawnTransform;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4291[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4292[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4293[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4294[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateOtomo_isSuccess;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateAllPalInArena");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena) == 0x0000F0, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateAllPalInArena");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, SpawnTransform) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, Temp_int_Variable) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00002C, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_BreakTransform_Location) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateAllPalInArena, CallFunc_ActivateOtomo_isSuccess) == 0x0000E0, "Member 'BP_OtomoPalHolderComponent_C_ActivateAllPalInArena::CallFunc_ActivateOtomo_isSuccess' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomo
// 0x0070 (0x0070 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_isSuccess;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRidingByOtomoSlotID_isRiding;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateOtomo_isSuccess;                  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo) == 0x000070, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, SpawnTransform) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, ReturnValue) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, CallFunc_Inactivate_Otomo_isSuccess) == 0x000061, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::CallFunc_Inactivate_Otomo_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, CallFunc_IsRidingByOtomoSlotID_isRiding) == 0x000062, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::CallFunc_IsRidingByOtomoSlotID_isRiding' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, CallFunc_ActivateOtomo_isSuccess) == 0x000063, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::CallFunc_ActivateOtomo_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoFromBall
// 0x0070 (0x0070 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall final
{
public:
	struct FTransform                             BallTransform;                                     // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BallHitActor;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall) == 0x000070, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall, BallTransform) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall::BallTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall, BallHitActor) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall::BallHitActor' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoFromBall_ToServer
// 0x0070 (0x0070 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer final
{
public:
	struct FTransform                             BallTransform;                                     // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer) == 0x000070, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer, BallTransform) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer::BallTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer, HitActor) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer::HitActor' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoNearThePlayer
// 0x0080 (0x0080 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4295[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_SpawnPalNearTrainer_ReturnValue; // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateCurrentOtomo_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer) == 0x000080, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer, CallFunc_GetTransform_SpawnPalNearTrainer_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer::CallFunc_GetTransform_SpawnPalNearTrainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer, CallFunc_ActivateCurrentOtomo_ReturnValue) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer::CallFunc_ActivateCurrentOtomo_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateOtomo
// 0x01E0 (0x01E0 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActivateOtomo final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4296[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StartTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4297[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TempPal;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4298[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TempAngle;                                         // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          Trainer;                                           // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UPalAbilitySkillParameterComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4299[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAIActionComponent*                  CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429A[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalVisualEffectBase*                   CallFunc_AddVisualEffectForActor_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MonsterAIController_NPCOtomo_C*     K2Node_DynamicCast_AsBP_Monster_AIController_NPCOtomo; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429B[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIControllerBase_C*          K2Node_DynamicCast_AsBP_Monster_AIController_Base; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429C[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPartnerSkillParameterComponent*     CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLive_ReturnValue;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429D[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_4;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429E[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429F[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerState*                        CallFunc_GetPalPlayerState_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A0[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerRecordData*                   CallFunc_GetRecordData_ReturnValue;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A1[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A2[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A3[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterID_ReturnValue;               // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A4[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue_1;   // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue_2;   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A5[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue_1;      // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A6[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A7[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActivateOtomo) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActivateOtomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActivateOtomo) == 0x0001E0, "Wrong size on BP_OtomoPalHolderComponent_C_ActivateOtomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, SlotID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, StartTransform) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::StartTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, IsSuccess) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, TempPal) == 0x000078, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::TempPal' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, IsDead) == 0x000080, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::IsDead' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, TempAngle) == 0x000088, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::TempAngle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, Trainer) == 0x000090, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::Trainer' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetComponentByClass_ReturnValue) == 0x000098, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000A1, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000A8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetController_ReturnValue) == 0x0000B0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000B8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetController_ReturnValue_1) == 0x0000C0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsPal_AIController) == 0x0000C8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_AddVisualEffectForActor_ReturnValue) == 0x0000D8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_AddVisualEffectForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsBP_Monster_AIController_NPCOtomo) == 0x0000E0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsBP_Monster_AIController_NPCOtomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsBP_Monster_AIController_Base) == 0x0000F0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsBP_Monster_AIController_Base' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess_2) == 0x0000F8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000100, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsLive_ReturnValue) == 0x000108, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsLive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_1) == 0x000109, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetComponentByClass_ReturnValue_4) == 0x000110, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetOwner_ReturnValue) == 0x000118, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000128, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetPalPlayerState_ReturnValue) == 0x000138, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetPalPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsDead_ReturnValue) == 0x000140, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetRecordData_ReturnValue) == 0x000148, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetRecordData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_3) == 0x000150, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000158, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000160, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsControlledByPlayer_ReturnValue) == 0x000168, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsControlledByPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000170, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_4) == 0x000178, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetCharacterID_ReturnValue) == 0x00017C, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetOtomoIndividualHandle_ReturnValue_1) == 0x000188, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetOtomoIndividualHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetOtomoIndividualHandle_ReturnValue_2) == 0x000190, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetOtomoIndividualHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_5) == 0x000198, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_TryGetIndividualActor_ReturnValue_1) == 0x0001A0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_TryGetIndividualActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_IsValid_ReturnValue_6) == 0x0001A8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_GetOwner_ReturnValue_1) == 0x0001B0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsController) == 0x0001B8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess_4) == 0x0001C0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, CallFunc_K2_GetPawn_ReturnValue) == 0x0001C8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_AsPal_Character) == 0x0001D0, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActivateOtomo, K2Node_DynamicCast_bSuccess_5) == 0x0001D8, "Member 'BP_OtomoPalHolderComponent_C_ActivateOtomo::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActiveAndAttackCurrentPal
// 0x0030 (0x0030 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal) == 0x000030, "Wrong size on BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, Target) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::Target' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Add Otomo Down Log
// 0x0080 (0x0080 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log final
{
public:
	struct FPalDeadInfo                           Actor;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42A9[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AA[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log) == 0x000080, "Wrong size on BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, Actor) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::Actor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_IsControlledByPlayer_ReturnValue) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_IsControlledByPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, K2Node_DynamicCast_AsPal_Character) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_HasAuthority_ReturnValue) == 0x000069, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log, CallFunc_IsValid_ReturnValue_1) == 0x00007A, "Member 'BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CallCancelCommand
// 0x0060 (0x0060 - 0x0000)
struct BP_OtomoPalHolderComponent_C_CallCancelCommand final
{
public:
	int32                                         CallFunc_GetSelectedOtomoID_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AC[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AE[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionComponent*                  CallFunc_GetAIActionComponent_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalAIActionCategory                          CallFunc_GetCurrentAIActionCategory_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_CallCancelCommand) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_CallCancelCommand");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_CallCancelCommand) == 0x000060, "Wrong size on BP_OtomoPalHolderComponent_C_CallCancelCommand");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetSelectedOtomoID_ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetSelectedOtomoID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetAIActionComponent_ReturnValue) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetAIActionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_GetCurrentAIActionCategory_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_GetCurrentAIActionCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CallCancelCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'BP_OtomoPalHolderComponent_C_CallCancelCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CoopCallCommand
// 0x0048 (0x0048 - 0x0000)
struct BP_OtomoPalHolderComponent_C_CoopCallCommand final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42AF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B1[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionComponent*                  CallFunc_GetAIActionComponent_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalAIActionCategory                          CallFunc_GetCurrentAIActionCategory_ReturnValue;   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_CoopCallCommand) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_CoopCallCommand");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_CoopCallCommand) == 0x000048, "Wrong size on BP_OtomoPalHolderComponent_C_CoopCallCommand");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, SlotID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000031, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_GetAIActionComponent_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_GetAIActionComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_GetCurrentAIActionCategory_ReturnValue) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_GetCurrentAIActionCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_CoopCallCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'BP_OtomoPalHolderComponent_C_CoopCallCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.DecrementSelectOtomoID_Internal
// 0x0030 (0x0030 - 0x0000)
struct BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsALLEmpty_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B2[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedOtomoID_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal) == 0x000030, "Wrong size on BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, Temp_int_Variable) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, Temp_int_Variable_1) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x00000C, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_IsALLEmpty_ReturnValue) == 0x00001A, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_IsALLEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_GetSelectedOtomoID_ReturnValue) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_GetSelectedOtomoID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_GetMaxOtomoNum_ReturnValue_1) == 0x000024, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_GetMaxOtomoNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_OtomoPalHolderComponent_C_DecrementSelectOtomoID_Internal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.DelayAddOtomoForReserverList
// 0x0008 (0x0008 - 0x0000)
struct BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList final
{
public:
	class APalCharacter*                          Otomo;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList) == 0x000008, "Wrong size on BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList, Otomo) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList::Otomo' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Dummy Despawn Callback
// 0x0030 (0x0030 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback) == 0x000030, "Wrong size on BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback, ID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback::ID' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ExecuteUbergraph_BP_OtomoPalHolderComponent
// 0x0340 (0x0340 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalTutorialManager*                    CallFunc_GetTutorialManager_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_BallTransform;                  // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateCurrentOtomo_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B4[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindNearstEnemy_Actor;                    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B5[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ID;                             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetCurrentSelectPalActor_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B6[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Otomo_1;                        // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B7[0x8];                                     // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_TF;                             // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B8[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0178(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42B9[0x2];                                     // 0x0262(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_slotIndex_1;                    // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          K2Node_CustomEvent_LastHandle_1;                   // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalDeadInfo                           K2Node_CustomEvent_DeadInfo;                       // 0x0270(0x0050)(NoDestructor)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BA[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character_1;              // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveActorFlag_ReturnValue;           // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BB[0x6];                                     // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_isSuccess;               // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BC[0x2];                                     // 0x02EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x02EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_isSuccess_1;             // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BD[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_slotIndex;                      // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BE[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          K2Node_CustomEvent_LastHandle;                     // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_slotIndex;                            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_CustomEvent_Otomo;                          // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0324(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42BF[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_Reserve_Pal_Location_DeltaTime_ImplicitCast; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent) == 0x000340, "Wrong size on BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, EntryPoint) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_GetTutorialManager_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_GetTutorialManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_BallTransform) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_BallTransform' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_HitActor) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_BreakTransform_Location) == 0x000078, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_ActivateCurrentOtomo_ReturnValue) == 0x0000C0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_ActivateCurrentOtomo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_FindNearstEnemy_Actor) == 0x0000C8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_FindNearstEnemy_Actor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_ID) == 0x0000D4, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_ID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_TryGetCurrentSelectPalActor_ReturnValue) == 0x0000D8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_TryGetCurrentSelectPalActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_GetController_ReturnValue) == 0x0000E0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_GetGameSetting_ReturnValue) == 0x0000E8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_AsPal_AIController) == 0x0000F0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_Otomo_1) == 0x000100, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_Otomo_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_TF) == 0x000110, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_TF' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_Event_EndPlayReason) == 0x000170, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000178, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000260, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_IsValid_ReturnValue_1) == 0x000261, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_slotIndex_1) == 0x000264, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_slotIndex_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_LastHandle_1) == 0x000268, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_LastHandle_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_DeadInfo) == 0x000270, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_DeadInfo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_AsPal_Character) == 0x0002C0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_bSuccess_1) == 0x0002C8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_AsPal_Character_1) == 0x0002D0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_AsPal_Character_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_DynamicCast_bSuccess_2) == 0x0002D8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_GetActiveActorFlag_ReturnValue) == 0x0002D9, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_GetActiveActorFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x0002E0, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_Inactivate_Otomo_isSuccess) == 0x0002E8, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_Inactivate_Otomo_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_IsValid_ReturnValue_2) == 0x0002E9, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CreateDelegate_OutputDelegate) == 0x0002EC, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_Inactivate_Otomo_isSuccess_1) == 0x0002FC, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_Inactivate_Otomo_isSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_slotIndex) == 0x000300, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_slotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_LastHandle) == 0x000308, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_LastHandle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_Event_slotIndex) == 0x000310, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_Event_slotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_Event_DeltaSeconds) == 0x000314, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CustomEvent_Otomo) == 0x000318, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CustomEvent_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_Array_AddUnique_ReturnValue) == 0x000320, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000324, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent, CallFunc_Update_Reserve_Pal_Location_DeltaTime_ImplicitCast) == 0x000338, "Member 'BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent::CallFunc_Update_Reserve_Pal_Location_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.FindNearstEnemy
// 0x0028 (0x0028 - 0x0000)
struct BP_OtomoPalHolderComponent_C_FindNearstEnemy final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetEnemyWhenOtomoThrow_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_FindNearstEnemy) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_FindNearstEnemy");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_FindNearstEnemy) == 0x000028, "Wrong size on BP_OtomoPalHolderComponent_C_FindNearstEnemy");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindNearstEnemy, Location) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_FindNearstEnemy::Location' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindNearstEnemy, Actor) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_FindNearstEnemy::Actor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindNearstEnemy, CallFunc_GetEnemyWhenOtomoThrow_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_FindNearstEnemy::CallFunc_GetEnemyWhenOtomoThrow_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.FindSlotByIndividualID
// 0x00A8 (0x00A8 - 0x0000)
struct BP_OtomoPalHolderComponent_C_FindSlotByIndividualID final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         SlotID;                                            // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempSlotID;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPalIndividualCharacterSlot*>    CallFunc_GetSlots_Slots;                           // 0x0040(0x0010)(ReferenceParm)
	class UPalIndividualCharacterSlot*            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C0[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetHandle_ReturnValue;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C1[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         CallFunc_GetIndividualID_ReturnValue;              // 0x0070(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_FindSlotByIndividualID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID) == 0x0000A8, "Wrong size on BP_OtomoPalHolderComponent_C_FindSlotByIndividualID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, ID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::ID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, SlotID) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, TempSlotID) == 0x000034, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::TempSlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_GetSlots_Slots) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_GetSlots_Slots' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_GetHandle_ReturnValue) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_GetHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_GetIndividualID_ReturnValue) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_GetIndividualID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_FindSlotByIndividualID, CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue) == 0x0000A4, "Member 'BP_OtomoPalHolderComponent_C_FindSlotByIndividualID::CallFunc_EqualEqual_PalInstanceIDPalInstanceID_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetNextOtomoSlotID
// 0x0048 (0x0048 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempWorkIndex;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TempStartIndex;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CalcSlotID;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoop;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C2[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C3[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID) == 0x000048, "Wrong size on BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, TempWorkIndex) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::TempWorkIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, TempStartIndex) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::TempStartIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CalcSlotID) == 0x00000C, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CalcSlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, IsLoop) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::IsLoop' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, Temp_int_Variable) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, Temp_int_Variable_1) == 0x000024, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_GetMaxOtomoNum_ReturnValue_1) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_GetMaxOtomoNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_Percent_IntInt_ReturnValue) == 0x00002C, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetOwnerCharacter
// 0x0038 (0x0038 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetOwnerCharacter final
{
public:
	class APalCharacter*                          Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetOwnerCharacter");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter) == 0x000038, "Wrong size on BP_OtomoPalHolderComponent_C_GetOwnerCharacter");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, Character) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, K2Node_DynamicCast_AsPal_Character) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetOwnerCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_GetOwnerCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetPreviousOtomoSlotID
// 0x0040 (0x0040 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WorkIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C5[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C6[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C7[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsALLEmpty_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C8[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID) == 0x000040, "Wrong size on BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, WorkIndex) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::WorkIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, StartIndex) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::StartIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, Temp_int_Variable) == 0x00000C, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, Temp_int_Variable_1) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_IsALLEmpty_ReturnValue) == 0x000034, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_IsALLEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Inactivate Otomo
// 0x0018 (0x0018 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Inactivate_Otomo final
{
public:
	bool                                          IsSuccess;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_By_Handle_isSuccess;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Inactivate_Otomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo) == 0x000018, "Wrong size on BP_OtomoPalHolderComponent_C_Inactivate_Otomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo, IsSuccess) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo, CallFunc_Inactivate_Otomo_By_Handle_isSuccess) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo::CallFunc_Inactivate_Otomo_By_Handle_isSuccess' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Inactivate Otomo By Handle
// 0x00F0 (0x00F0 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle final
{
public:
	class UPalIndividualCharacterHandle*          IndividualHandle;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TempOtomoActor;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UPalAbilitySkillParameterComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CB[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCooping_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPartnerSkillParameterComponent*     CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveActorFlag_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CD[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InactiveActor_isSuccess;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CE[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_ReturnPalEffect_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetOwnerControlledCharacter_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle) == 0x0000F0, "Wrong size on BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, IndividualHandle) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::IndividualHandle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, IsSuccess) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, TempOtomoActor) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::TempOtomoActor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_IsCooping_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_IsCooping_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_GetActiveActorFlag_ReturnValue) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_GetActiveActorFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_InactiveActor_isSuccess) == 0x0000C0, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_InactiveActor_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C8, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000D0, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_TryGetOwnerControlledCharacter_ReturnValue) == 0x0000D8, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_TryGetOwnerControlledCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle, CallFunc_IsValid_ReturnValue_3) == 0x0000E0, "Member 'BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InactivateAllPalInArena
// 0x0028 (0x0028 - 0x0000)
struct BP_OtomoPalHolderComponent_C_InactivateAllPalInArena final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42CF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_By_Handle_isSuccess;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D0[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_InactivateAllPalInArena");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena) == 0x000028, "Wrong size on BP_OtomoPalHolderComponent_C_InactivateAllPalInArena");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, Temp_int_Variable) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_Inactivate_Otomo_By_Handle_isSuccess) == 0x000011, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_Inactivate_Otomo_By_Handle_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactivateAllPalInArena, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_InactivateAllPalInArena::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InactiveActor
// 0x0038 (0x0038 - 0x0000)
struct BP_OtomoPalHolderComponent_C_InactiveActor final
{
public:
	class APalCharacter*                          Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          StayVisible;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSuccess;                                         // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D1[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D2[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_InactiveActor) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_InactiveActor");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_InactiveActor) == 0x000038, "Wrong size on BP_OtomoPalHolderComponent_C_InactiveActor");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, Actor) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, StayVisible) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::StayVisible' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, IsSuccess) == 0x000009, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::IsSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, K2Node_DynamicCast_AsPal_AIController) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_InactiveActor, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_InactiveActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IncrementActiveOtomoCount
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount final
{
public:
	class UPalPlayerRecordData*                   PlayerRecordData;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CharacterID;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount, PlayerRecordData) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount::PlayerRecordData' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount, CharacterID) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount::CharacterID' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IncrementSelectOtomoID_Internal
// 0x0038 (0x0038 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal final
{
public:
	int32                                         TempStartIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D4[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D5[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxOtomoNum_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal) == 0x000038, "Wrong size on BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, TempStartIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::TempStartIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, Temp_int_Variable) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, Temp_int_Variable_1) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_GetMaxOtomoNum_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_GetMaxOtomoNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_GetMaxOtomoNum_ReturnValue_1) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_GetMaxOtomoNum_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal, CallFunc_Percent_IntInt_ReturnValue) == 0x000034, "Member 'BP_OtomoPalHolderComponent_C_IncrementSelectOtomoID_Internal::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsActivatedSelectOtomo
// 0x0002 (0x0002 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo) == 0x000001, "Wrong alignment on BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo) == 0x000002, "Wrong size on BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingBySelectSlotID
// 0x000C (0x000C - 0x0000)
struct BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedOtomoID_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRidingByOtomoSlotID_isRiding;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID) == 0x00000C, "Wrong size on BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID, CallFunc_GetSelectedOtomoID_ReturnValue) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID::CallFunc_GetSelectedOtomoID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID, CallFunc_IsRidingByOtomoSlotID_isRiding) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID::CallFunc_IsRidingByOtomoSlotID_isRiding' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingBySpawnSlotID
// 0x0002 (0x0002 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRidingByOtomoSlotID_isRiding;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID) == 0x000001, "Wrong alignment on BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID) == 0x000002, "Wrong size on BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID, CallFunc_IsRidingByOtomoSlotID_isRiding) == 0x000001, "Member 'BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID::CallFunc_IsRidingByOtomoSlotID_isRiding' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsValidCurrentSelectPalActor
// 0x0018 (0x0018 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetCurrentSelectPalActor_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor) == 0x000018, "Wrong size on BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor, CallFunc_TryGetCurrentSelectPalActor_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor::CallFunc_TryGetCurrentSelectPalActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Otomo_DeathEvent
// 0x0050 (0x0050 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Otomo_DeathEvent final
{
public:
	struct FPalDeadInfo                           DeadInfo;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Otomo_DeathEvent) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Otomo_DeathEvent");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Otomo_DeathEvent) == 0x000050, "Wrong size on BP_OtomoPalHolderComponent_C_Otomo_DeathEvent");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Otomo_DeathEvent, DeadInfo) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Otomo_DeathEvent::DeadInfo' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_OtomoPalHolderComponent_C_ReceiveEndPlay");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_OtomoPalHolderComponent_C_ReceiveEndPlay");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_ReceiveTick");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_ReceiveTick");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.RemovePalFromParty
// 0x0060 (0x0060 - 0x0000)
struct BP_OtomoPalHolderComponent_C_RemovePalFromParty final
{
public:
	class UPalIndividualCharacterHandle*          RemoveHandle;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPalIndividualCharacterSlot*>    CallFunc_GetSlots_Slots;                           // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D9[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterSlot*            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DA[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalCharacterSlotId                    CallFunc_GetSlotId_ReturnValue;                    // 0x003C(0x0014)(NoDestructor)
	class UPalIndividualCharacterHandle*          CallFunc_GetHandle_ReturnValue;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_RemovePalFromParty) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_RemovePalFromParty");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_RemovePalFromParty) == 0x000060, "Wrong size on BP_OtomoPalHolderComponent_C_RemovePalFromParty");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, RemoveHandle) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::RemoveHandle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_GetSlots_Slots) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_GetSlots_Slots' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_GetSlotId_ReturnValue) == 0x00003C, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_GetSlotId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_GetHandle_ReturnValue) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_GetHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_RemovePalFromParty, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_RemovePalFromParty::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetActivateOtomoID_ToALL
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL final
{
public:
	int32                                         ID;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL, ID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL::ID' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetLocationOtomoForActive_ToAll
// 0x0070 (0x0070 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll final
{
public:
	class AActor*                                 Otomo;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DB[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TF;                                                // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll) == 0x000010, "Wrong alignment on BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll) == 0x000070, "Wrong size on BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll, Otomo) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll::Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll, TF) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll::TF' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetOtomoInvokerDisable
// 0x0020 (0x0020 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable final
{
public:
	class AActor*                                 Otomo;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisable;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNavigationInvokerComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable) == 0x000020, "Wrong size on BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable, Otomo) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable::Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable, IsDisable) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable::IsDisable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetSelectOtomoID_Internal
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal, Param_Index) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal::Param_Index' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetTrainer
// 0x0038 (0x0038 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SetTrainer final
{
public:
	class APalCharacter*                          Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DD[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetDefaultPlayerCharacter_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SetTrainer) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_SetTrainer");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SetTrainer) == 0x000038, "Wrong size on BP_OtomoPalHolderComponent_C_SetTrainer");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, Character) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, CallFunc_GetDefaultPlayerCharacter_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::CallFunc_GetDefaultPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SetTrainer, CallFunc_IsControlledByPlayer_ReturnValue) == 0x000031, "Member 'BP_OtomoPalHolderComponent_C_SetTrainer::CallFunc_IsControlledByPlayer_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnCharacterCallback
// 0x0168 (0x0168 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SpawnCharacterCallback final
{
public:
	struct FPalInstanceID                         ID;                                                // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         SlotID;                                            // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          Trainer;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          TempSpawnedMonster;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSlotByIndividualID_SlotID;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DF[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPartnerSkillParameterComponent*     CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E0[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E1[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue_1;       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControlledByPlayer_ReturnValue_2;       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E2[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalRideMarkerComponent*                CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E3[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalIndividualCharacterHandle* IndividualHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E4[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue_1;   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E5[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNavigationInvokerComponent*         CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E6[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E7[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E8[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E9[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_AdjustActorToFloor_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController_1;                 // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EA[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EB[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo_1; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_SpawnCharacterCallback");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback) == 0x000168, "Wrong size on BP_OtomoPalHolderComponent_C_SpawnCharacterCallback");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, ID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::ID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, SlotID) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, Trainer) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::Trainer' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, TempSpawnedMonster) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::TempSpawnedMonster' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_FindSlotByIndividualID_SlotID) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_FindSlotByIndividualID_SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsControlledByPlayer_ReturnValue) == 0x000068, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsControlledByPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsController) == 0x000070, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsControlledByPlayer_ReturnValue_1) == 0x000079, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsControlledByPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsControlledByPlayer_ReturnValue_2) == 0x00007A, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsControlledByPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000080, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_CreateDelegate_OutputDelegate) == 0x00008C, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x0000A0, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetOtomoIndividualHandle_ReturnValue_1) == 0x0000A8, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetOtomoIndividualHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x0000B0, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_TryGetIndividualActor_ReturnValue) == 0x0000B8, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000C8, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsValid_ReturnValue_3) == 0x0000D0, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetController_ReturnValue) == 0x0000D8, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsPal_AIController) == 0x0000E0, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000EC, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000100, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_Array_AddUnique_ReturnValue) == 0x00010C, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000110, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_AdjustActorToFloor_ReturnValue) == 0x000118, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_AdjustActorToFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetOwner_ReturnValue_1) == 0x000120, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsController_1) == 0x000128, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsController_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_K2_GetPawn_ReturnValue) == 0x000138, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GetController_ReturnValue_1) == 0x000140, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsPal_Character) == 0x000148, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess_4) == 0x000150, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo_1) == 0x000158, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, K2Node_DynamicCast_bSuccess_5) == 0x000160, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000161, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnCharacterCallback, CallFunc_IsValid_ReturnValue_4) == 0x000162, "Member 'BP_OtomoPalHolderComponent_C_SpawnCharacterCallback::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnOtomo
// 0x00C0 (0x00C0 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SpawnOtomo final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TempAngle;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          Trainer;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APalCharacter* InCharacter)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42ED[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FPalInstanceID& ID)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EE[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNetworkActorSpawnParameters           K2Node_MakeStruct_NetworkActorSpawnParameters;     // 0x0050(0x0070)(NoDestructor)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SpawnOtomo) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_SpawnOtomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SpawnOtomo) == 0x0000C0, "Wrong size on BP_OtomoPalHolderComponent_C_SpawnOtomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, SlotID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, TempAngle) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::TempAngle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, Trainer) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::Trainer' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, CallFunc_GetCharacterManager_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomo, K2Node_MakeStruct_NetworkActorSpawnParameters) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomo::K2Node_MakeStruct_NetworkActorSpawnParameters' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnOtomoByLoad
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad, SlotIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad::SlotIndex' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Try Get Current Active Pal Actor
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor final
{
public:
	class APalCharacter*                          Otomo;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetSpawnedOtomo_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor, Otomo) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor::Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor, CallFunc_TryGetSpawnedOtomo_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor::CallFunc_TryGetSpawnedOtomo_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.TryFixAssignNearestWorkSelectedOtomo
// 0x0058 (0x0058 - 0x0000)
struct BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo final
{
public:
	const class AActor*                           HitActor;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MonsterAIController_Otomo_C*        K2Node_DynamicCast_AsBP_Monster_AIController_Otomo; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionComponent*                  K2Node_DynamicCast_AsPal_AIAction_Component;       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionCompositeBase*              CallFunc_GetCompositeRoot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalAIActionOtomoDefault*               K2Node_DynamicCast_AsPal_AIAction_Otomo_Default;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo) == 0x000058, "Wrong size on BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, HitActor) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::HitActor' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_AsBP_Monster_AIController_Otomo) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_AsBP_Monster_AIController_Otomo' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_AsPal_AIAction_Component) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_AsPal_AIAction_Component' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, CallFunc_GetCompositeRoot_ReturnValue) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::CallFunc_GetCompositeRoot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_AsPal_AIAction_Otomo_Default) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_AsPal_AIAction_Otomo_Default' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.TryGetCurrentSelectPalActor
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor final
{
public:
	class APalCharacter*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor, CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor::CallFunc_TryGetOtomoActorBySlotIndex_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Otomo Slot in Local
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          LastHandle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local, SlotIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local, LastHandle) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local::LastHandle' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Otomo Slot In Server
// 0x0040 (0x0040 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          LastHandle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_By_Handle_isSuccess;     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F4[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FPalInstanceID& ID)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server) == 0x000040, "Wrong size on BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, SlotIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, LastHandle) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::LastHandle' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_HasAuthority_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_Inactivate_Otomo_By_Handle_isSuccess) == 0x000019, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_Inactivate_Otomo_By_Handle_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001A, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_GetCharacterManager_ReturnValue) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Reserve Pal Location
// 0x0180 (0x0180 - 0x0000)
struct BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F6[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F7[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F8[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location) == 0x000180, "Wrong size on BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, DeltaTime) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_HasAuthority_ReturnValue) == 0x000014, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_BreakVector_Z) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_MakeVector_ReturnValue) == 0x000068, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000088, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000170, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location, CallFunc_Less_IntInt_ReturnValue) == 0x000178, "Member 'BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.UpdateSlot
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_UpdateSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          LastHandle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_UpdateSlot) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_UpdateSlot");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_UpdateSlot) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_UpdateSlot");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_UpdateSlot, SlotIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_UpdateSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_UpdateSlot, LastHandle) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_UpdateSlot::LastHandle' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.UpdateSlotInServer
// 0x0010 (0x0010 - 0x0000)
struct BP_OtomoPalHolderComponent_C_UpdateSlotInServer final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          LastHandle;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_UpdateSlotInServer) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_UpdateSlotInServer");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_UpdateSlotInServer) == 0x000010, "Wrong size on BP_OtomoPalHolderComponent_C_UpdateSlotInServer");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_UpdateSlotInServer, SlotIndex) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_UpdateSlotInServer::SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_UpdateSlotInServer, LastHandle) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_UpdateSlotInServer::LastHandle' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetMaxOtomoNum
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetMaxOtomoNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetMaxOtomoNum) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetMaxOtomoNum");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetMaxOtomoNum) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_GetMaxOtomoNum");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetMaxOtomoNum, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetMaxOtomoNum::ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetSelectedOtomoID
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetSelectedOtomoID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetSelectedOtomoID) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetSelectedOtomoID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetSelectedOtomoID) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_GetSelectedOtomoID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetSelectedOtomoID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetSelectedOtomoID::ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetSpawnedOtomoID
// 0x0004 (0x0004 - 0x0000)
struct BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID) == 0x000004, "Wrong alignment on BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID) == 0x000004, "Wrong size on BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID, ReturnValue) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID::ReturnValue' has a wrong offset!");

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingByOtomoSlotID
// 0x0058 (0x0058 - 0x0000)
struct BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID final
{
public:
	int32                                         SlotID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRiding;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FB[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectedSlotID;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FC[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ControlledPawn;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetOtomoIndividualHandle_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FE[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FF[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID) == 0x000008, "Wrong alignment on BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID");
static_assert(sizeof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID) == 0x000058, "Wrong size on BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, SlotID) == 0x000000, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::SlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, IsRiding) == 0x000004, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::IsRiding' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, SelectedSlotID) == 0x000008, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::SelectedSlotID' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, ControlledPawn) == 0x000010, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_GetOtomoIndividualHandle_ReturnValue) == 0x000018, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_GetOtomoIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000028, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, K2Node_DynamicCast_AsController) == 0x000040, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID, CallFunc_K2_GetPawn_ReturnValue) == 0x000050, "Member 'BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");

}

