#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Action_Grappling

#include "Basic.hpp"

#include "BP_Action_Grappling_classes.hpp"
#include "BP_Action_Grappling_parameters.hpp"


namespace SDK
{

// Function BP_Action_Grappling.BP_Action_Grappling_C.CalcCurrentVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::CalcCurrentVelocity(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "CalcCurrentVelocity");

	Params::BP_Action_Grappling_C_CalcCurrentVelocity Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.CalcMoveVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PlayerLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Param_MoveVec                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::CalcMoveVector(const struct FVector& PlayerLocation, double DeltaTime, struct FVector* Param_MoveVec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "CalcMoveVector");

	Params::BP_Action_Grappling_C_CalcMoveVector Parms{};

	Parms.PlayerLocation = std::move(PlayerLocation);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MoveVec != nullptr)
		*Param_MoveVec = std::move(Parms.Param_MoveVec);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.CanClamb
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::CanClamb(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "CanClamb");

	Params::BP_Action_Grappling_C_CanClamb Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.Disable Movement
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::Disable_Movement(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "Disable Movement");

	Params::BP_Action_Grappling_C_Disable_Movement Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.DisableShooter
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::DisableShooter(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "DisableShooter");

	Params::BP_Action_Grappling_C_DisableShooter Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.ExecuteUbergraph_BP_Action_Grappling
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::ExecuteUbergraph_BP_Action_Grappling(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "ExecuteUbergraph_BP_Action_Grappling");

	Params::BP_Action_Grappling_C_ExecuteUbergraph_BP_Action_Grappling Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.GetCurrentSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  CurrentSpeed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::GetCurrentSpeed(double* CurrentSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "GetCurrentSpeed");

	Params::BP_Action_Grappling_C_GetCurrentSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentSpeed != nullptr)
		*CurrentSpeed = Parms.CurrentSpeed;
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.GetReleaseVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_Action_Grappling_C::GetReleaseVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "GetReleaseVelocity");

	Params::BP_Action_Grappling_C_GetReleaseVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.IsMoveingEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PlayerLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InCapsuleRadius                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  InCapsuleHelfHeight                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMovingEnd                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::IsMoveingEnd(const struct FVector& PlayerLocation, double InCapsuleRadius, double InCapsuleHelfHeight, bool* IsMovingEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "IsMoveingEnd");

	Params::BP_Action_Grappling_C_IsMoveingEnd Parms{};

	Parms.PlayerLocation = std::move(PlayerLocation);
	Parms.InCapsuleRadius = InCapsuleRadius;
	Parms.InCapsuleHelfHeight = InCapsuleHelfHeight;

	UObject::ProcessEvent(Func, &Parms);

	if (IsMovingEnd != nullptr)
		*IsMovingEnd = Parms.IsMovingEnd;
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.IsPlayerFalling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsFalling                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::IsPlayerFalling(bool* IsFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "IsPlayerFalling");

	Params::BP_Action_Grappling_C_IsPlayerFalling Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFalling != nullptr)
		*IsFalling = Parms.IsFalling;
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.LookAtTargetLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::LookAtTargetLocation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "LookAtTargetLocation");

	Params::BP_Action_Grappling_C_LookAtTargetLocation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.NotifyFinishToWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Action_Grappling_C::NotifyFinishToWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "NotifyFinishToWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.NotifyStartToWeapon
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_Action_Grappling_C::NotifyStartToWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "NotifyStartToWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnBeginAction
// (Event, Public, BlueprintEvent)

void UBP_Action_Grappling_C::OnBeginAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnBeginAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnBlendOut_2F3E188F4888411060D43AB280C66179
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::OnBlendOut_2F3E188F4888411060D43AB280C66179(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnBlendOut_2F3E188F4888411060D43AB280C66179");

	Params::BP_Action_Grappling_C_OnBlendOut_2F3E188F4888411060D43AB280C66179 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnBreakAction
// (Event, Public, BlueprintEvent)

void UBP_Action_Grappling_C::OnBreakAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnBreakAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnCompleted_2F3E188F4888411060D43AB280C66179
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::OnCompleted_2F3E188F4888411060D43AB280C66179(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnCompleted_2F3E188F4888411060D43AB280C66179");

	Params::BP_Action_Grappling_C_OnCompleted_2F3E188F4888411060D43AB280C66179 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnEndAction
// (Event, Public, BlueprintEvent)

void UBP_Action_Grappling_C::OnEndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnEndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnInterrupted_2F3E188F4888411060D43AB280C66179
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::OnInterrupted_2F3E188F4888411060D43AB280C66179(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnInterrupted_2F3E188F4888411060D43AB280C66179");

	Params::BP_Action_Grappling_C_OnInterrupted_2F3E188F4888411060D43AB280C66179 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnNotifyBegin_2F3E188F4888411060D43AB280C66179
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::OnNotifyBegin_2F3E188F4888411060D43AB280C66179(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnNotifyBegin_2F3E188F4888411060D43AB280C66179");

	Params::BP_Action_Grappling_C_OnNotifyBegin_2F3E188F4888411060D43AB280C66179 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.OnNotifyEnd_2F3E188F4888411060D43AB280C66179
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::OnNotifyEnd_2F3E188F4888411060D43AB280C66179(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "OnNotifyEnd_2F3E188F4888411060D43AB280C66179");

	Params::BP_Action_Grappling_C_OnNotifyEnd_2F3E188F4888411060D43AB280C66179 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.SetGravityDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDisable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::SetGravityDisable(bool IsDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "SetGravityDisable");

	Params::BP_Action_Grappling_C_SetGravityDisable Parms{};

	Parms.IsDisable = IsDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.SetPlayerVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::SetPlayerVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "SetPlayerVelocity");

	Params::BP_Action_Grappling_C_SetPlayerVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.TickAction
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::TickAction(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "TickAction");

	Params::BP_Action_Grappling_C_TickAction Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Action_Grappling.BP_Action_Grappling_C.UpdateGraplingMove
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Action_Grappling_C::UpdateGraplingMove(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Action_Grappling_C", "UpdateGraplingMove");

	Params::BP_Action_Grappling_C_UpdateGraplingMove Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

