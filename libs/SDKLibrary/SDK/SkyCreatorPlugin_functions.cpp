#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkyCreatorPlugin

#include "Basic.hpp"

#include "SkyCreatorPlugin_classes.hpp"
#include "SkyCreatorPlugin_parameters.hpp"


namespace SDK
{

// Function SkyCreatorPlugin.SkyCreator.FindLightningPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ASkyCreator::FindLightningPosition(const struct FVector& Position, struct FVector* OutPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "FindLightningPosition");

	Params::SkyCreator_FindLightningPosition Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetCloudDensityAtPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASkyCreator::GetCloudDensityAtPosition(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetCloudDensityAtPosition");

	Params::SkyCreator_GetCloudDensityAtPosition Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetLastLightningPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ASkyCreator::GetLastLightningPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetLastLightningPosition");

	Params::SkyCreator_GetLastLightningPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetMoonPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ASkyCreator::GetMoonPosition(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetMoonPosition");

	Params::SkyCreator_GetMoonPosition Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetSunPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ASkyCreator::GetSunPosition(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetSunPosition");

	Params::SkyCreator_GetSunPosition Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.LerpBackgroundCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettingsA                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettingsB                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpBackgroundCloudSettings(const struct FSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettingsA, const struct FSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpBackgroundCloudSettings");

	Params::SkyCreator_LerpBackgroundCloudSettings Parms{};

	Parms.InBackgroundCloudSettingsA = std::move(InBackgroundCloudSettingsA);
	Parms.InBackgroundCloudSettingsB = std::move(InBackgroundCloudSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpExponentialHeightFogSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettingsA                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettingsB                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpExponentialHeightFogSettings(const struct FSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettingsA, const struct FSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpExponentialHeightFogSettings");

	Params::SkyCreator_LerpExponentialHeightFogSettings Parms{};

	Parms.InExponentialHeightFogSettingsA = std::move(InExponentialHeightFogSettingsA);
	Parms.InExponentialHeightFogSettingsB = std::move(InExponentialHeightFogSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpMoonLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorMoonLightSettings     InMoonLightSettingsA                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorMoonLightSettings     InMoonLightSettingsB                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpMoonLightSettings(const struct FSkyCreatorMoonLightSettings& InMoonLightSettingsA, const struct FSkyCreatorMoonLightSettings& InMoonLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpMoonLightSettings");

	Params::SkyCreator_LerpMoonLightSettings Parms{};

	Parms.InMoonLightSettingsA = std::move(InMoonLightSettingsA);
	Parms.InMoonLightSettingsB = std::move(InMoonLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpPostProcessSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorPostProcessSettings   InPostProcessSettingsA                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorPostProcessSettings   InPostProcessSettingsB                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpPostProcessSettings(const struct FSkyCreatorPostProcessSettings& InPostProcessSettingsA, const struct FSkyCreatorPostProcessSettings& InPostProcessSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpPostProcessSettings");

	Params::SkyCreator_LerpPostProcessSettings Parms{};

	Parms.InPostProcessSettingsA = std::move(InPostProcessSettingsA);
	Parms.InPostProcessSettingsB = std::move(InPostProcessSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpPuddlesAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   PuddlesAmountA                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PuddlesAmountB                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpPuddlesAmount(float PuddlesAmountA, float PuddlesAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpPuddlesAmount");

	Params::SkyCreator_LerpPuddlesAmount Parms{};

	Parms.PuddlesAmountA = PuddlesAmountA;
	Parms.PuddlesAmountB = PuddlesAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpSkyAtmosphereSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSkyAtmosphereSettings InSkyAtmosphereSettingsA                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorSkyAtmosphereSettings InSkyAtmosphereSettingsB                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpSkyAtmosphereSettings(const struct FSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettingsA, const struct FSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpSkyAtmosphereSettings");

	Params::SkyCreator_LerpSkyAtmosphereSettings Parms{};

	Parms.InSkyAtmosphereSettingsA = std::move(InSkyAtmosphereSettingsA);
	Parms.InSkyAtmosphereSettingsB = std::move(InSkyAtmosphereSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpSkyLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSkyLightSettings      InSkyLightSettingsA                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorSkyLightSettings      InSkyLightSettingsB                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpSkyLightSettings(const struct FSkyCreatorSkyLightSettings& InSkyLightSettingsA, const struct FSkyCreatorSkyLightSettings& InSkyLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpSkyLightSettings");

	Params::SkyCreator_LerpSkyLightSettings Parms{};

	Parms.InSkyLightSettingsA = std::move(InSkyLightSettingsA);
	Parms.InSkyLightSettingsB = std::move(InSkyLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpSnowAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   SnowAmountA                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SnowAmountB                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpSnowAmount(float SnowAmountA, float SnowAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpSnowAmount");

	Params::SkyCreator_LerpSnowAmount Parms{};

	Parms.SnowAmountA = SnowAmountA;
	Parms.SnowAmountB = SnowAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpStarMapSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorStarMapSettings       InStarMapSettingsA                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorStarMapSettings       InStarMapSettingsB                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpStarMapSettings(const struct FSkyCreatorStarMapSettings& InStarMapSettingsA, const struct FSkyCreatorStarMapSettings& InStarMapSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpStarMapSettings");

	Params::SkyCreator_LerpStarMapSettings Parms{};

	Parms.InStarMapSettingsA = std::move(InStarMapSettingsA);
	Parms.InStarMapSettingsB = std::move(InStarMapSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpSunLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSunLightSettings      InSunLightSettingsA                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorSunLightSettings      InSunLightSettingsB                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpSunLightSettings(const struct FSkyCreatorSunLightSettings& InSunLightSettingsA, const struct FSkyCreatorSunLightSettings& InSunLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpSunLightSettings");

	Params::SkyCreator_LerpSunLightSettings Parms{};

	Parms.InSunLightSettingsA = std::move(InSunLightSettingsA);
	Parms.InSunLightSettingsB = std::move(InSunLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpVolumetricCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettingsA                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettingsB                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpVolumetricCloudSettings(const struct FSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettingsA, const struct FSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpVolumetricCloudSettings");

	Params::SkyCreator_LerpVolumetricCloudSettings Parms{};

	Parms.InVolumetricCloudSettingsA = std::move(InVolumetricCloudSettingsA);
	Parms.InVolumetricCloudSettingsB = std::move(InVolumetricCloudSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWeatherFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherFXSettings     InWeatherFXSettingsA                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorWeatherFXSettings     InWeatherFXSettingsB                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWeatherFXSettings(const struct FSkyCreatorWeatherFXSettings& InWeatherFXSettingsA, const struct FSkyCreatorWeatherFXSettings& InWeatherFXSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWeatherFXSettings");

	Params::SkyCreator_LerpWeatherFXSettings Parms{};

	Parms.InWeatherFXSettingsA = std::move(InWeatherFXSettingsA);
	Parms.InWeatherFXSettingsB = std::move(InWeatherFXSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWeatherMaterialFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettingsA                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettingsB                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWeatherMaterialFXSettings(const struct FSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettingsA, const struct FSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWeatherMaterialFXSettings");

	Params::SkyCreator_LerpWeatherMaterialFXSettings Parms{};

	Parms.InWeatherMaterialFXSettingsA = std::move(InWeatherMaterialFXSettingsA);
	Parms.InWeatherMaterialFXSettingsB = std::move(InWeatherMaterialFXSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWeatherSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherSettings       InWeatherSettingsA                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorWeatherSettings       InWeatherSettingsB                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWeatherSettings(const struct FSkyCreatorWeatherSettings& InWeatherSettingsA, const struct FSkyCreatorWeatherSettings& InWeatherSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWeatherSettings");

	Params::SkyCreator_LerpWeatherSettings Parms{};

	Parms.InWeatherSettingsA = std::move(InWeatherSettingsA);
	Parms.InWeatherSettingsB = std::move(InWeatherSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWetnessAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   WetnessAmountA                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WetnessAmountB                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWetnessAmount(float WetnessAmountA, float WetnessAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWetnessAmount");

	Params::SkyCreator_LerpWetnessAmount Parms{};

	Parms.WetnessAmountA = WetnessAmountA;
	Parms.WetnessAmountB = WetnessAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWindIndependentSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWindSettings          InWindSettingsA                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorWindSettings          InWindSettingsB                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWindIndependentSettings(const struct FSkyCreatorWindSettings& InWindSettingsA, const struct FSkyCreatorWindSettings& InWindSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWindIndependentSettings");

	Params::SkyCreator_LerpWindIndependentSettings Parms{};

	Parms.InWindSettingsA = std::move(InWindSettingsA);
	Parms.InWindSettingsB = std::move(InWindSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.LerpWindSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWindSettings          InWindSettingsA                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSkyCreatorWindSettings          InWindSettingsB                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::LerpWindSettings(const struct FSkyCreatorWindSettings& InWindSettingsA, const struct FSkyCreatorWindSettings& InWindSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "LerpWindSettings");

	Params::SkyCreator_LerpWindSettings Parms{};

	Parms.InWindSettingsA = std::move(InWindSettingsA);
	Parms.InWindSettingsB = std::move(InWindSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.OnRep_UpdateTime
// (Final, Native, Private)

void ASkyCreator::OnRep_UpdateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "OnRep_UpdateTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.OnRep_UpdateWeather
// (Final, Native, Private)

void ASkyCreator::OnRep_UpdateWeather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "OnRep_UpdateWeather");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.RealtimeTimeOfDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DayCycleDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::RealtimeTimeOfDay(float DeltaSeconds, float DayCycleDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "RealtimeTimeOfDay");

	Params::SkyCreator_RealtimeTimeOfDay Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.DayCycleDuration = DayCycleDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetBackgroundCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettings                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetBackgroundCloudSettings(const struct FSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetBackgroundCloudSettings");

	Params::SkyCreator_SetBackgroundCloudSettings Parms{};

	Parms.InBackgroundCloudSettings = std::move(InBackgroundCloudSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetbDaylightSavingTime
// (Final, Native, Public)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetbDaylightSavingTime(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetbDaylightSavingTime");

	Params::SkyCreator_SetbDaylightSavingTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetCloudMapOffset
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetCloudMapOffset(const struct FVector2D& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetCloudMapOffset");

	Params::SkyCreator_SetCloudMapOffset Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetDay
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetDay(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetDay");

	Params::SkyCreator_SetDay Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetEditorTimeOfDay
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetEditorTimeOfDay(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetEditorTimeOfDay");

	Params::SkyCreator_SetEditorTimeOfDay Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetEditorWeatherPreset
// (Final, Native, Public)
// Parameters:
// class USkyCreatorWeatherPreset*         NewValue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetEditorWeatherPreset(class USkyCreatorWeatherPreset* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetEditorWeatherPreset");

	Params::SkyCreator_SetEditorWeatherPreset Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetEditorWeatherSettings
// (Final, Native, Public)
// Parameters:
// struct FSkyCreatorWeatherSettings       NewValue                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetEditorWeatherSettings(const struct FSkyCreatorWeatherSettings& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetEditorWeatherSettings");

	Params::SkyCreator_SetEditorWeatherSettings Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetExponentialHeightFogSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettings                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetExponentialHeightFogSettings(const struct FSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetExponentialHeightFogSettings");

	Params::SkyCreator_SetExponentialHeightFogSettings Parms{};

	Parms.InExponentialHeightFogSettings = std::move(InExponentialHeightFogSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetLatitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetLatitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetLatitude");

	Params::SkyCreator_SetLatitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetLayerBottomAltitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetLayerBottomAltitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetLayerBottomAltitude");

	Params::SkyCreator_SetLayerBottomAltitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetLayerHeight
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetLayerHeight(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetLayerHeight");

	Params::SkyCreator_SetLayerHeight Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetLongitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetLongitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetLongitude");

	Params::SkyCreator_SetLongitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMonth
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMonth(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMonth");

	Params::SkyCreator_SetMonth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonAtmosphereDiskColorScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FLinearColor                     NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonAtmosphereDiskColorScale(const struct FLinearColor& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonAtmosphereDiskColorScale");

	Params::SkyCreator_SetMoonAtmosphereDiskColorScale Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonAzimuth
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonAzimuth(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonAzimuth");

	Params::SkyCreator_SetMoonAzimuth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonDiskSize
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonDiskSize(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonDiskSize");

	Params::SkyCreator_SetMoonDiskSize Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonElevation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonElevation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonElevation");

	Params::SkyCreator_SetMoonElevation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonIntensity
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonIntensity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonIntensity");

	Params::SkyCreator_SetMoonIntensity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorMoonLightSettings     InMoonLightSettings                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonLightSettings(const struct FSkyCreatorMoonLightSettings& InMoonLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonLightSettings");

	Params::SkyCreator_SetMoonLightSettings Parms{};

	Parms.InMoonLightSettings = std::move(InMoonLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonPhase(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonPhase");

	Params::SkyCreator_SetMoonPhase Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonriseTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonriseTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonriseTime");

	Params::SkyCreator_SetMoonriseTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonRotation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonRotation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonRotation");

	Params::SkyCreator_SetMoonRotation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonsetTime");

	Params::SkyCreator_SetMoonsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetMoonSimplePositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMoonriseTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonsetTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonElevation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonAzimuth                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetMoonSimplePositionSettings(const float InMoonriseTime, const float InMoonsetTime, const float InMoonElevation, const float InMoonAzimuth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetMoonSimplePositionSettings");

	Params::SkyCreator_SetMoonSimplePositionSettings Parms{};

	Parms.InMoonriseTime = InMoonriseTime;
	Parms.InMoonsetTime = InMoonsetTime;
	Parms.InMoonElevation = InMoonElevation;
	Parms.InMoonAzimuth = InMoonAzimuth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetPostProcessSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorPostProcessSettings   InPostProcessSettings                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetPostProcessSettings(const struct FSkyCreatorPostProcessSettings& InPostProcessSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetPostProcessSettings");

	Params::SkyCreator_SetPostProcessSettings Parms{};

	Parms.InPostProcessSettings = std::move(InPostProcessSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetRealPositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLatitude                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLongitude                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeZone                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InYear                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMonth                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetRealPositionSettings(const float InLatitude, const float InLongitude, const float InTimeZone, const bool InbDaylightSavingTime, const int32 InYear, const int32 InMonth, const int32 InDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetRealPositionSettings");

	Params::SkyCreator_SetRealPositionSettings Parms{};

	Parms.InLatitude = InLatitude;
	Parms.InLongitude = InLongitude;
	Parms.InTimeZone = InTimeZone;
	Parms.InbDaylightSavingTime = InbDaylightSavingTime;
	Parms.InYear = InYear;
	Parms.InMonth = InMonth;
	Parms.InDay = InDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSkyAtmosphereSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSkyAtmosphereSettings InSkyAtmosphereSettings                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetSkyAtmosphereSettings(const struct FSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSkyAtmosphereSettings");

	Params::SkyCreator_SetSkyAtmosphereSettings Parms{};

	Parms.InSkyAtmosphereSettings = std::move(InSkyAtmosphereSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSkyLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSkyLightSettings      InSkyLightSettings                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetSkyLightSettings(const struct FSkyCreatorSkyLightSettings& InSkyLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSkyLightSettings");

	Params::SkyCreator_SetSkyLightSettings Parms{};

	Parms.InSkyLightSettings = std::move(InSkyLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetStarMapAdditionalRotation
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetStarMapAdditionalRotation(const struct FVector& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetStarMapAdditionalRotation");

	Params::SkyCreator_SetStarMapAdditionalRotation Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetStarMapSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorStarMapSettings       InStarMapSettings                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetStarMapSettings(const struct FSkyCreatorStarMapSettings& InStarMapSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetStarMapSettings");

	Params::SkyCreator_SetStarMapSettings Parms{};

	Parms.InStarMapSettings = std::move(InStarMapSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunAtmosphereDiskColorScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FLinearColor                     NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunAtmosphereDiskColorScale(const struct FLinearColor& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunAtmosphereDiskColorScale");

	Params::SkyCreator_SetSunAtmosphereDiskColorScale Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunAzimuth
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunAzimuth(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunAzimuth");

	Params::SkyCreator_SetSunAzimuth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunDawnOffsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunDawnOffsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunDawnOffsetTime");

	Params::SkyCreator_SetSunDawnOffsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunDiskSize
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunDiskSize(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunDiskSize");

	Params::SkyCreator_SetSunDiskSize Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunDuskOffsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunDuskOffsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunDuskOffsetTime");

	Params::SkyCreator_SetSunDuskOffsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunElevation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunElevation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunElevation");

	Params::SkyCreator_SetSunElevation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunIntensity
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunIntensity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunIntensity");

	Params::SkyCreator_SetSunIntensity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorSunLightSettings      InSunLightSettings                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunLightSettings(const struct FSkyCreatorSunLightSettings& InSunLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunLightSettings");

	Params::SkyCreator_SetSunLightSettings Parms{};

	Parms.InSunLightSettings = std::move(InSunLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunMinAngleAtDawnDusk
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunMinAngleAtDawnDusk(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunMinAngleAtDawnDusk");

	Params::SkyCreator_SetSunMinAngleAtDawnDusk Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunriseTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunriseTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunriseTime");

	Params::SkyCreator_SetSunriseTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunsetTime");

	Params::SkyCreator_SetSunsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetSunSimplePositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InSunriseTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunsetTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunElevation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunAzimuth                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetSunSimplePositionSettings(const float InSunriseTime, const float InSunsetTime, const float InSunElevation, const float InSunAzimuth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetSunSimplePositionSettings");

	Params::SkyCreator_SetSunSimplePositionSettings Parms{};

	Parms.InSunriseTime = InSunriseTime;
	Parms.InSunsetTime = InSunsetTime;
	Parms.InSunElevation = InSunElevation;
	Parms.InSunAzimuth = InSunAzimuth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetTime(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetTime");

	Params::SkyCreator_SetTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetTimeZone
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetTimeZone(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetTimeZone");

	Params::SkyCreator_SetTimeZone Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetVolumetricCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettings                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetVolumetricCloudSettings(const struct FSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetVolumetricCloudSettings");

	Params::SkyCreator_SetVolumetricCloudSettings Parms{};

	Parms.InVolumetricCloudSettings = std::move(InVolumetricCloudSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetWeatherFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherFXSettings     InWeatherFXSettings                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetWeatherFXSettings(const struct FSkyCreatorWeatherFXSettings& InWeatherFXSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetWeatherFXSettings");

	Params::SkyCreator_SetWeatherFXSettings Parms{};

	Parms.InWeatherFXSettings = std::move(InWeatherFXSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetWeatherMaterialFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettings                            (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetWeatherMaterialFXSettings(const struct FSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetWeatherMaterialFXSettings");

	Params::SkyCreator_SetWeatherMaterialFXSettings Parms{};

	Parms.InWeatherMaterialFXSettings = std::move(InWeatherMaterialFXSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetWeatherSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWeatherSettings       InWeatherSettings                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetWeatherSettings(const struct FSkyCreatorWeatherSettings& InWeatherSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetWeatherSettings");

	Params::SkyCreator_SetWeatherSettings Parms{};

	Parms.InWeatherSettings = std::move(InWeatherSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetWindIndependentSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWindSettings          InWindSettings                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetWindIndependentSettings(const struct FSkyCreatorWindSettings& InWindSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetWindIndependentSettings");

	Params::SkyCreator_SetWindIndependentSettings Parms{};

	Parms.InWindSettings = std::move(InWindSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetWindSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSkyCreatorWindSettings          InWindSettings                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ASkyCreator::SetWindSettings(const struct FSkyCreatorWindSettings& InWindSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetWindSettings");

	Params::SkyCreator_SetWindSettings Parms{};

	Parms.InWindSettings = std::move(InWindSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SetYear
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SetYear(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SetYear");

	Params::SkyCreator_SetYear Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.SpawnLightningStrike
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LightningPosition                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ASkyCreator::SpawnLightningStrike(const struct FVector& LightningPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "SpawnLightningStrike");

	Params::SkyCreator_SpawnLightningStrike Parms{};

	Parms.LightningPosition = std::move(LightningPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.UpdateSettingsSequencer
// (Final, Native, Public)

void ASkyCreator::UpdateSettingsSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "UpdateSettingsSequencer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function SkyCreatorPlugin.SkyCreator.GetBackgroundCloudSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorBackgroundCloudSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorBackgroundCloudSettings ASkyCreator::GetBackgroundCloudSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetBackgroundCloudSettings");

	Params::SkyCreator_GetBackgroundCloudSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetExponentialHeightFogSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorExponentialHeightFogSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorExponentialHeightFogSettings ASkyCreator::GetExponentialHeightFogSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetExponentialHeightFogSettings");

	Params::SkyCreator_GetExponentialHeightFogSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetMoonLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorMoonLightSettings     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorMoonLightSettings ASkyCreator::GetMoonLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetMoonLightSettings");

	Params::SkyCreator_GetMoonLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetMoonPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASkyCreator::GetMoonPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetMoonPhase");

	Params::SkyCreator_GetMoonPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetPostProcessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorPostProcessSettings   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorPostProcessSettings ASkyCreator::GetPostProcessSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetPostProcessSettings");

	Params::SkyCreator_GetPostProcessSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetSkyAtmosphereSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorSkyAtmosphereSettings ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorSkyAtmosphereSettings ASkyCreator::GetSkyAtmosphereSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetSkyAtmosphereSettings");

	Params::SkyCreator_GetSkyAtmosphereSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetSkyLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorSkyLightSettings      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorSkyLightSettings ASkyCreator::GetSkyLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetSkyLightSettings");

	Params::SkyCreator_GetSkyLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetStarMapRotation
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator ASkyCreator::GetStarMapRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetStarMapRotation");

	Params::SkyCreator_GetStarMapRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetStarMapSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorStarMapSettings       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorStarMapSettings ASkyCreator::GetStarMapSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetStarMapSettings");

	Params::SkyCreator_GetStarMapSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetSunLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorSunLightSettings      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorSunLightSettings ASkyCreator::GetSunLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetSunLightSettings");

	Params::SkyCreator_GetSunLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ASkyCreator::GetTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetTime");

	Params::SkyCreator_GetTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetVolumetricCloudSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorVolumetricCloudSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorVolumetricCloudSettings ASkyCreator::GetVolumetricCloudSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetVolumetricCloudSettings");

	Params::SkyCreator_GetVolumetricCloudSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetWeatherFXSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorWeatherFXSettings     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorWeatherFXSettings ASkyCreator::GetWeatherFXSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetWeatherFXSettings");

	Params::SkyCreator_GetWeatherFXSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetWeatherMaterialFXSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorWeatherMaterialFXSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorWeatherMaterialFXSettings ASkyCreator::GetWeatherMaterialFXSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetWeatherMaterialFXSettings");

	Params::SkyCreator_GetWeatherMaterialFXSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetWeatherSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorWeatherSettings       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorWeatherSettings ASkyCreator::GetWeatherSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetWeatherSettings");

	Params::SkyCreator_GetWeatherSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreator.GetWindSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSkyCreatorWindSettings          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorWindSettings ASkyCreator::GetWindSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreator", "GetWindSettings");

	Params::SkyCreator_GetWindSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.CentimetersToKilometers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USkyCreatorFunctionLibrary::CentimetersToKilometers(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "CentimetersToKilometers");

	Params::SkyCreatorFunctionLibrary_CentimetersToKilometers Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.CheckCloudDensityAtPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkyCreatorFunctionLibrary::CheckCloudDensityAtPosition(class UObject* WorldContextObject, const struct FVector& Position, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "CheckCloudDensityAtPosition");

	Params::SkyCreatorFunctionLibrary_CheckCloudDensityAtPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.ConvertRenderTargetToTexture2D
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkyCreatorFunctionLibrary::ConvertRenderTargetToTexture2D(class UTextureRenderTarget2D* RenderTarget, class UTexture2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "ConvertRenderTargetToTexture2D");

	Params::SkyCreatorFunctionLibrary_ConvertRenderTargetToTexture2D Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.CreateAndAssignMID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         InMID                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USkyCreatorFunctionLibrary::CreateAndAssignMID(class UObject* WorldContextObject, class UMaterialInterface* InMaterial, class UMaterialInstanceDynamic** InMID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "CreateAndAssignMID");

	Params::SkyCreatorFunctionLibrary_CreateAndAssignMID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InMID != nullptr)
		*InMID = Parms.InMID;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.ElevationRefraction
// (Final, Native, Static, Private)
// Parameters:
// double                                  F                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double USkyCreatorFunctionLibrary::ElevationRefraction(double F)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "ElevationRefraction");

	Params::SkyCreatorFunctionLibrary_ElevationRefraction Parms{};

	Parms.F = F;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.FindLightningPosition
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSampleCloudDensity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Samples                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InnerRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OuterRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DensityThreshold                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkyCreatorFunctionLibrary::FindLightningPosition(class UObject* WorldContextObject, bool bSampleCloudDensity, int32 Samples, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget, const struct FVector& Position, float InnerRadius, float OuterRadius, float MinHeight, float MaxHeight, float DensityThreshold, struct FVector* OutPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "FindLightningPosition");

	Params::SkyCreatorFunctionLibrary_FindLightningPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bSampleCloudDensity = bSampleCloudDensity;
	Parms.Samples = Samples;
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;
	Parms.Position = std::move(Position);
	Parms.InnerRadius = InnerRadius;
	Parms.OuterRadius = OuterRadius;
	Parms.MinHeight = MinHeight;
	Parms.MaxHeight = MaxHeight;
	Parms.DensityThreshold = DensityThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.GetCloudDensityAtPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USkyCreatorFunctionLibrary::GetCloudDensityAtPosition(class UObject* WorldContextObject, const struct FVector& Position, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "GetCloudDensityAtPosition");

	Params::SkyCreatorFunctionLibrary_GetCloudDensityAtPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.GetRealMoonPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Latitude                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeZone                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        DateTime                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCelestialPositionData           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCelestialPositionData USkyCreatorFunctionLibrary::GetRealMoonPosition(const float Latitude, const float Longitude, const float TimeZone, const bool bIsDaylightSavingTime, const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "GetRealMoonPosition");

	Params::SkyCreatorFunctionLibrary_GetRealMoonPosition Parms{};

	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.TimeZone = TimeZone;
	Parms.bIsDaylightSavingTime = bIsDaylightSavingTime;
	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.GetRealSunPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Latitude                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeZone                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        DateTime                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FCelestialPositionData           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FCelestialPositionData USkyCreatorFunctionLibrary::GetRealSunPosition(const float Latitude, const float Longitude, const float TimeZone, const bool bIsDaylightSavingTime, const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "GetRealSunPosition");

	Params::SkyCreatorFunctionLibrary_GetRealSunPosition Parms{};

	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.TimeZone = TimeZone;
	Parms.bIsDaylightSavingTime = bIsDaylightSavingTime;
	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.IsApplicationForegroundNow
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USkyCreatorFunctionLibrary::IsApplicationForegroundNow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "IsApplicationForegroundNow");

	Params::SkyCreatorFunctionLibrary_IsApplicationForegroundNow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.KilometersToCentimeters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USkyCreatorFunctionLibrary::KilometersToCentimeters(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SkyCreatorFunctionLibrary", "KilometersToCentimeters");

	Params::SkyCreatorFunctionLibrary_KilometersToCentimeters Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorFunctionLibrary.DynamicConvertRenderTargetToTexture2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* USkyCreatorFunctionLibrary::DynamicConvertRenderTargetToTexture2D(class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreatorFunctionLibrary", "DynamicConvertRenderTargetToTexture2D");

	Params::SkyCreatorFunctionLibrary_DynamicConvertRenderTargetToTexture2D Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SkyCreatorPlugin.SkyCreatorWeatherPreset.GetWeatherPresetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSkyCreatorWeatherSettings       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FSkyCreatorWeatherSettings USkyCreatorWeatherPreset::GetWeatherPresetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SkyCreatorWeatherPreset", "GetWeatherPresetSettings");

	Params::SkyCreatorWeatherPreset_GetWeatherPresetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

