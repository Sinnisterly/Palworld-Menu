#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalCryComponent

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "E_PalEmo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_PalCryComponent.BP_PalCryComponent_C.CheckAction
// 0x0088 (0x0088 - 0x0000)
struct BP_PalCryComponent_C_CheckAction final
{
public:
	const class UPalActionBase*                   Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentActionClass;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C65[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0028(0x0010)(ReferenceParm)
	E_PalEmo                                      CallFunc_Map_Find_Value;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C66[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_PalEmo                                      CallFunc_Map_Find_Value_1;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C67[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_CheckAction) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_CheckAction");
static_assert(sizeof(BP_PalCryComponent_C_CheckAction) == 0x000088, "Wrong size on BP_PalCryComponent_C_CheckAction");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, Action) == 0x000000, "Member 'BP_PalCryComponent_C_CheckAction::Action' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CurrentActionClass) == 0x000008, "Member 'BP_PalCryComponent_C_CheckAction::CurrentActionClass' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PalCryComponent_C_CheckAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PalCryComponent_C_CheckAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Map_Keys_Keys) == 0x000028, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Map_Find_ReturnValue) == 0x000039, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Map_Find_Value_1) == 0x000048, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Map_Find_ReturnValue_1) == 0x000049, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_ClassIsChildOf_ReturnValue) == 0x00004A, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000050, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000068, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000078, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAction, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_PalCryComponent_C_CheckAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.CheckAIAction
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PalCryComponent_C_CheckAIAction final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C68[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PalEmo                                      CallFunc_Map_Find_Value;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C69[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6B[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PalEmo                                      CallFunc_Map_Find_Value_1;                         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6C[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6D[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6E[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalAIActionComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPawnAction*                            CallFunc_GetCurrentAction_BP_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C6F[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPal_AIAction_Base;       // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_CheckAIAction) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_CheckAIAction");
static_assert(sizeof(BP_PalCryComponent_C_CheckAIAction) == 0x0000B0, "Wrong size on BP_PalCryComponent_C_CheckAIAction");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PalCryComponent_C_CheckAIAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Map_Find_Value) == 0x000024, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Map_Find_ReturnValue) == 0x000025, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_ClassIsChildOf_ReturnValue) == 0x000040, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'BP_PalCryComponent_C_CheckAIAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000050, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Map_Find_Value_1) == 0x000051, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Map_Find_ReturnValue_1) == 0x000052, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetController_ReturnValue) == 0x000058, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000060, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000074, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetCurrentAction_BP_ReturnValue) == 0x000088, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetCurrentAction_BP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_IsValid_ReturnValue_1) == 0x000090, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, CallFunc_GetObjectClass_ReturnValue) == 0x000098, "Member 'BP_PalCryComponent_C_CheckAIAction::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, K2Node_ClassDynamicCast_AsPal_AIAction_Base) == 0x0000A0, "Member 'BP_PalCryComponent_C_CheckAIAction::K2Node_ClassDynamicCast_AsPal_AIAction_Base' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckAIAction, K2Node_ClassDynamicCast_bSuccess) == 0x0000A8, "Member 'BP_PalCryComponent_C_CheckAIAction::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.CheckHungerType
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCryComponent_C_CheckHungerType final
{
public:
	EPalStatusHungerType                          Current;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalStatusHungerType                          Last;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_CheckHungerType) == 0x000001, "Wrong alignment on BP_PalCryComponent_C_CheckHungerType");
static_assert(sizeof(BP_PalCryComponent_C_CheckHungerType) == 0x000004, "Wrong size on BP_PalCryComponent_C_CheckHungerType");
static_assert(offsetof(BP_PalCryComponent_C_CheckHungerType, Current) == 0x000000, "Member 'BP_PalCryComponent_C_CheckHungerType::Current' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckHungerType, Last) == 0x000001, "Member 'BP_PalCryComponent_C_CheckHungerType::Last' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckHungerType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_PalCryComponent_C_CheckHungerType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckHungerType, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'BP_PalCryComponent_C_CheckHungerType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.CheckWorkerEvent
// 0x0050 (0x0050 - 0x0000)
struct BP_PalCryComponent_C_CheckWorkerEvent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalBaseCampWorkerEventType                   CallFunc_GetBaseCampWorkerEventType_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C70[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalBaseCampWorkerEventMasterData      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_CheckWorkerEvent) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_CheckWorkerEvent");
static_assert(sizeof(BP_PalCryComponent_C_CheckWorkerEvent) == 0x000050, "Wrong size on BP_PalCryComponent_C_CheckWorkerEvent");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_GetBaseCampWorkerEventType_ReturnValue) == 0x000001, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_GetBaseCampWorkerEventType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000048, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_CheckWorkerEvent, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'BP_PalCryComponent_C_CheckWorkerEvent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.ExecuteUbergraph_BP_PalCryComponent
// 0x0040 (0x0040 - 0x0000)
struct BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C71[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PalEmo                                      K2Node_CustomEvent_PalEmo;                         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C72[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_GetIndividualParameter_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C73[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPalStatusHungerType Current, EPalStatusHungerType Last)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent");
static_assert(sizeof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent) == 0x000040, "Wrong size on BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, EntryPoint) == 0x000000, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, K2Node_CustomEvent_PalEmo) == 0x00000C, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::K2Node_CustomEvent_PalEmo' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, Temp_bool_IsClosed_Variable) == 0x00000D, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_GetIndividualParameter_ReturnValue) == 0x000020, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_GetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00003C, "Member 'BP_PalCryComponent_C_ExecuteUbergraph_BP_PalCryComponent::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.GetPalID
// 0x0010 (0x0010 - 0x0000)
struct BP_PalCryComponent_C_GetPalID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetCharacterIDFromTribeID_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_GetPalID) == 0x000004, "Wrong alignment on BP_PalCryComponent_C_GetPalID");
static_assert(sizeof(BP_PalCryComponent_C_GetPalID) == 0x000010, "Wrong size on BP_PalCryComponent_C_GetPalID");
static_assert(offsetof(BP_PalCryComponent_C_GetPalID, ReturnValue) == 0x000000, "Member 'BP_PalCryComponent_C_GetPalID::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_GetPalID, CallFunc_GetCharacterIDFromTribeID_ReturnValue) == 0x000008, "Member 'BP_PalCryComponent_C_GetPalID::CallFunc_GetCharacterIDFromTribeID_ReturnValue' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.Initialize
// 0x0040 (0x0040 - 0x0000)
struct BP_PalCryComponent_C_Initialize final
{
public:
	class UPalActionComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsActive)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalActionBase* Action)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_Initialize");
static_assert(sizeof(BP_PalCryComponent_C_Initialize) == 0x000040, "Wrong size on BP_PalCryComponent_C_Initialize");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'BP_PalCryComponent_C_Initialize::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PalCryComponent_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'BP_PalCryComponent_C_Initialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_PalCryComponent_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, K2Node_DynamicCast_AsPal_Character) == 0x000030, "Member 'BP_PalCryComponent_C_Initialize::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PalCryComponent_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.OnPlayCryWithAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCryComponent_C_OnPlayCryWithAction final
{
public:
	E_PalEmo                                      PalEmo;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_OnPlayCryWithAction) == 0x000001, "Wrong alignment on BP_PalCryComponent_C_OnPlayCryWithAction");
static_assert(sizeof(BP_PalCryComponent_C_OnPlayCryWithAction) == 0x000001, "Wrong size on BP_PalCryComponent_C_OnPlayCryWithAction");
static_assert(offsetof(BP_PalCryComponent_C_OnPlayCryWithAction, PalEmo) == 0x000000, "Member 'BP_PalCryComponent_C_OnPlayCryWithAction::PalEmo' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.OnSpawnPal
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCryComponent_C_OnSpawnPal final
{
public:
	bool                                          Param_bIsActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_OnSpawnPal) == 0x000001, "Wrong alignment on BP_PalCryComponent_C_OnSpawnPal");
static_assert(sizeof(BP_PalCryComponent_C_OnSpawnPal) == 0x000001, "Wrong size on BP_PalCryComponent_C_OnSpawnPal");
static_assert(offsetof(BP_PalCryComponent_C_OnSpawnPal, Param_bIsActive) == 0x000000, "Member 'BP_PalCryComponent_C_OnSpawnPal::Param_bIsActive' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.PlayCry
// 0x0080 (0x0080 - 0x0000)
struct BP_PalCryComponent_C_PlayCry final
{
public:
	class FName                                   EmoState;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0008(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C74[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C75[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPalID_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C76[0x1];                                     // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_PlayCry) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_PlayCry");
static_assert(sizeof(BP_PalCryComponent_C_PlayCry) == 0x000080, "Wrong size on BP_PalCryComponent_C_PlayCry");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, EmoState) == 0x000000, "Member 'BP_PalCryComponent_C_PlayCry::EmoState' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, Temp_delegate_Variable) == 0x000008, "Member 'BP_PalCryComponent_C_PlayCry::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, Temp_struct_Variable) == 0x000020, "Member 'BP_PalCryComponent_C_PlayCry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_NotEqual_NameName_ReturnValue) == 0x000031, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000032, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_Conv_NameToString_ReturnValue) == 0x000050, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_GetPalID_ReturnValue) == 0x000060, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_GetPalID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_GetMainMesh_ReturnValue) == 0x000068, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_GetMainMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_IsVisible_ReturnValue) == 0x000070, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_IsDead_ReturnValue) == 0x000071, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_PostEvent_ReturnValue) == 0x000074, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_PlayCry, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_PalCryComponent_C_PlayCry::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.ProcessIdleCry
// 0x0040 (0x0040 - 0x0000)
struct BP_PalCryComponent_C_ProcessIdleCry final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C77[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_ElapsedTimeFromLastIdleCry_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_ProcessIdleCry) == 0x000008, "Wrong alignment on BP_PalCryComponent_C_ProcessIdleCry");
static_assert(sizeof(BP_PalCryComponent_C_ProcessIdleCry) == 0x000040, "Wrong size on BP_PalCryComponent_C_ProcessIdleCry");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, DeltaTime) == 0x000000, "Member 'BP_PalCryComponent_C_ProcessIdleCry::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_GetMainMesh_ReturnValue) == 0x000008, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_GetMainMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_IsVisible_ReturnValue) == 0x000018, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000019, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'BP_PalCryComponent_C_ProcessIdleCry::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PalCryComponent_C_ProcessIdleCry, K2Node_VariableSet_ElapsedTimeFromLastIdleCry_ImplicitCast) == 0x000038, "Member 'BP_PalCryComponent_C_ProcessIdleCry::K2Node_VariableSet_ElapsedTimeFromLastIdleCry_ImplicitCast' has a wrong offset!");

// Function BP_PalCryComponent.BP_PalCryComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCryComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCryComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PalCryComponent_C_ReceiveTick");
static_assert(sizeof(BP_PalCryComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_PalCryComponent_C_ReceiveTick");
static_assert(offsetof(BP_PalCryComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PalCryComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

