#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentRandom

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.CreateAction
// 0x0040 (0x0040 - 0x0000)
struct BP_PalIncidentRandom_C_CreateAction final
{
public:
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0008(0x0028)()
	class UPalRandomIncidentActionBase*           CallFunc_SpawnObject_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_CreateAction) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_CreateAction");
static_assert(sizeof(BP_PalIncidentRandom_C_CreateAction) == 0x000040, "Wrong size on BP_PalIncidentRandom_C_CreateAction");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateAction, CallFunc_Get_Setting_Table_Row_Result) == 0x000000, "Member 'BP_PalIncidentRandom_C_CreateAction::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateAction, CallFunc_Get_Setting_Table_Row_Data) == 0x000008, "Member 'BP_PalIncidentRandom_C_CreateAction::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateAction, CallFunc_SpawnObject_ReturnValue) == 0x000030, "Member 'BP_PalIncidentRandom_C_CreateAction::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateAction, CallFunc_IsValidClass_ReturnValue) == 0x000038, "Member 'BP_PalIncidentRandom_C_CreateAction::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.CreateCharacterIdList
// 0x01D0 (0x01D0 - 0x0000)
struct BP_PalIncidentRandom_C_CreateCharacterIdList final
{
public:
	TArray<class FName>                           CharacterIds;                                      // 0x0000(0x0010)(Parm, OutParm)
	TArray<class FName>                           NameList;                                          // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D1[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_Array_Get_Item;                           // 0x0040(0x0048)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D2[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D3[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D4[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x00A8(0x0028)()
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00D0(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x00E0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D5[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnNPCData         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0150(0x0068)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D6[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_CreateCharacterIdList) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_CreateCharacterIdList");
static_assert(sizeof(BP_PalIncidentRandom_C_CreateCharacterIdList) == 0x0001D0, "Wrong size on BP_PalIncidentRandom_C_CreateCharacterIdList");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CharacterIds) == 0x000000, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CharacterIds' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, NameList) == 0x000010, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::NameList' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00008C, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_AddUnique_ReturnValue) == 0x000090, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Get_Setting_Table_Row_Result) == 0x0000A0, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Get_Setting_Table_Row_Data) == 0x0000A8, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000D0, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x0000E0, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000148, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000150, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001B8, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0001BC, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0001C0, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Length_ReturnValue_1) == 0x0001C4, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Array_Length_ReturnValue_2) == 0x0001C8, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001CC, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateCharacterIdList, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001CD, "Member 'BP_PalIncidentRandom_C_CreateCharacterIdList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.CreateNpcSpawner
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PalIncidentRandom_C_CreateNpcSpawner final
{
public:
	class APalRandomIncidentSpawnerBase*          CallFunc_Get_Incident_Spawner_IncidentSpawner;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PalRandomIncidentSpawner_C*         K2Node_DynamicCast_AsBP_Pal_Random_Incident_Spawner; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PalRandomIncidentNPCSpawner_C*      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_CreateNpcSpawner) == 0x000010, "Wrong alignment on BP_PalIncidentRandom_C_CreateNpcSpawner");
static_assert(sizeof(BP_PalIncidentRandom_C_CreateNpcSpawner) == 0x0000A0, "Wrong size on BP_PalIncidentRandom_C_CreateNpcSpawner");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, CallFunc_Get_Incident_Spawner_IncidentSpawner) == 0x000000, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::CallFunc_Get_Incident_Spawner_IncidentSpawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, K2Node_DynamicCast_AsBP_Pal_Random_Incident_Spawner) == 0x000010, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::K2Node_DynamicCast_AsBP_Pal_Random_Incident_Spawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, K2Node_DynamicCast_AsActor) == 0x000020, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_CreateNpcSpawner, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_PalIncidentRandom_C_CreateNpcSpawner::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.ExcludeOtherPal
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentRandom_C_ExcludeOtherPal final
{
public:
	class APalRandomIncidentSpawnerBase*          CallFunc_Get_Incident_Spawner_IncidentSpawner;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExcludeOtherPal_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_ExcludeOtherPal) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_ExcludeOtherPal");
static_assert(sizeof(BP_PalIncidentRandom_C_ExcludeOtherPal) == 0x000010, "Wrong size on BP_PalIncidentRandom_C_ExcludeOtherPal");
static_assert(offsetof(BP_PalIncidentRandom_C_ExcludeOtherPal, CallFunc_Get_Incident_Spawner_IncidentSpawner) == 0x000000, "Member 'BP_PalIncidentRandom_C_ExcludeOtherPal::CallFunc_Get_Incident_Spawner_IncidentSpawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExcludeOtherPal, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_ExcludeOtherPal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExcludeOtherPal, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_PalIncidentRandom_C_ExcludeOtherPal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExcludeOtherPal, CallFunc_IsExcludeOtherPal_ReturnValue) == 0x00000A, "Member 'BP_PalIncidentRandom_C_ExcludeOtherPal::CallFunc_IsExcludeOtherPal_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.ExecuteUbergraph_BP_PalIncidentRandom
// 0x008C (0x008C - 0x0000)
struct BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPalRandomIncidentSpawnerAreaType AreaType, int32 PlayerId)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName& RowName)>         K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName& RowName)>         K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalRandomIncidentSpawnerAreaType             K2Node_CustomEvent_AreaType_1;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D9[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerId_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalRandomIncidentSpawnerAreaType             K2Node_CustomEvent_AreaType;                       // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DA[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_PlayerId;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DB[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPalRandomIncidentActionNotifyType NotifyType)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPalRandomIncidentSpawnerAreaType AreaType, int32 PlayerId)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom");
static_assert(sizeof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom) == 0x00008C, "Wrong size on BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, EntryPoint) == 0x000000, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_4) == 0x000044, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CustomEvent_AreaType_1) == 0x000054, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CustomEvent_AreaType_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CustomEvent_PlayerId_1) == 0x000058, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CustomEvent_PlayerId_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CustomEvent_AreaType) == 0x00005C, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CustomEvent_AreaType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CustomEvent_PlayerId) == 0x000060, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CustomEvent_PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_5) == 0x000068, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, K2Node_CreateDelegate_OutputDelegate_6) == 0x000078, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_PalIncidentRandom_C_ExecuteUbergraph_BP_PalIncidentRandom::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.GetGroupList
// 0x01D0 (0x01D0 - 0x0000)
struct BP_PalIncidentRandom_C_GetGroupList final
{
public:
	TArray<int32>                                 GroupNo;                                           // 0x0000(0x0010)(Parm, OutParm)
	TArray<int32>                                 GroupNoList;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DC[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_Array_Get_Item;                           // 0x0040(0x0048)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DD[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DE[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x00A0(0x0028)()
	bool                                          CallFunc_IsOutbreakTable_ReturnValue;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37DF[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00D0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E0[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnNPCData         CallFunc_GetDataTableRowFromName_OutRow;           // 0x00F0(0x0068)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E1[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0160(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0180(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E2[0x2];                                     // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_GetGroupList) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_GetGroupList");
static_assert(sizeof(BP_PalIncidentRandom_C_GetGroupList) == 0x0001D0, "Wrong size on BP_PalIncidentRandom_C_GetGroupList");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, GroupNo) == 0x000000, "Member 'BP_PalIncidentRandom_C_GetGroupList::GroupNo' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, GroupNoList) == 0x000010, "Member 'BP_PalIncidentRandom_C_GetGroupList::GroupNoList' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_AddUnique_ReturnValue) == 0x00008C, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, Temp_int_Loop_Counter_Variable_2) == 0x000090, "Member 'BP_PalIncidentRandom_C_GetGroupList::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Add_IntInt_ReturnValue_2) == 0x000098, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Get_Setting_Table_Row_Result) == 0x00009C, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Get_Setting_Table_Row_Data) == 0x0000A0, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_IsOutbreakTable_ReturnValue) == 0x0000C8, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_IsOutbreakTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000D0, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000F0, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000158, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Less_IntInt_ReturnValue_1) == 0x000159, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000160, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000170, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Get_Item_2) == 0x000174, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_Length_ReturnValue_2) == 0x00017C, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000180, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001C8, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001C9, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_GetGroupList, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0001CC, "Member 'BP_PalIncidentRandom_C_GetGroupList::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.GetNPCSpawner
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentRandom_C_GetNPCSpawner final
{
public:
	class APalRandomIncidentNPCSpawner*           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_GetNPCSpawner) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_GetNPCSpawner");
static_assert(sizeof(BP_PalIncidentRandom_C_GetNPCSpawner) == 0x000008, "Wrong size on BP_PalIncidentRandom_C_GetNPCSpawner");
static_assert(offsetof(BP_PalIncidentRandom_C_GetNPCSpawner, ReturnValue) == 0x000000, "Member 'BP_PalIncidentRandom_C_GetNPCSpawner::ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.IsAllNpcSpawned
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PalIncidentRandom_C_IsAllNpcSpawned final
{
public:
	bool                                          IsSpawned;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E3[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E4[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E5[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0040(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E6[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0070(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E7[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_IsAllNpcSpawned) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_IsAllNpcSpawned");
static_assert(sizeof(BP_PalIncidentRandom_C_IsAllNpcSpawned) == 0x0000B0, "Wrong size on BP_PalIncidentRandom_C_IsAllNpcSpawned");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, IsSpawned) == 0x000000, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::IsSpawned' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Loop_Counter_Variable_2) == 0x000014, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Add_IntInt_ReturnValue_2) == 0x00001C, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, Temp_int_Array_Index_Variable_2) == 0x000024, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_IsEmpty_ReturnValue) == 0x000028, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Contains_ReturnValue) == 0x000038, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Get_Setting_Table_Row_Result) == 0x00003A, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Get_Setting_Table_Row_Data) == 0x000040, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000070, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Contains_ReturnValue_1) == 0x00008C, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008D, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_IsValid_ReturnValue_1) == 0x00008E, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000090, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Get_Item_2) == 0x0000A0, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Length_ReturnValue_2) == 0x0000A8, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Array_Contains_ReturnValue_2) == 0x0000AC, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsAllNpcSpawned, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000AD, "Member 'BP_PalIncidentRandom_C_IsAllNpcSpawned::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnEndProc
// 0x0018 (0x0018 - 0x0000)
struct BP_PalIncidentRandom_C_OnEndProc final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalRandomIncidentSpawnerBase*          CallFunc_Get_Incident_Spawner_IncidentSpawner;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnEndProc) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_OnEndProc");
static_assert(sizeof(BP_PalIncidentRandom_C_OnEndProc) == 0x000018, "Wrong size on BP_PalIncidentRandom_C_OnEndProc");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEndProc, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnEndProc::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEndProc, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PalIncidentRandom_C_OnEndProc::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEndProc, CallFunc_Get_Incident_Spawner_IncidentSpawner) == 0x000008, "Member 'BP_PalIncidentRandom_C_OnEndProc::CallFunc_Get_Incident_Spawner_IncidentSpawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEndProc, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_PalIncidentRandom_C_OnEndProc::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnEnterAnyArea_Impl
// 0x000C (0x000C - 0x0000)
struct BP_PalIncidentRandom_C_OnEnterAnyArea_Impl final
{
public:
	EPalRandomIncidentSpawnerAreaType             AreaType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37E9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnEnterAnyArea_Impl) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnEnterAnyArea_Impl");
static_assert(sizeof(BP_PalIncidentRandom_C_OnEnterAnyArea_Impl) == 0x00000C, "Wrong size on BP_PalIncidentRandom_C_OnEnterAnyArea_Impl");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEnterAnyArea_Impl, AreaType) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnEnterAnyArea_Impl::AreaType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEnterAnyArea_Impl, PlayerId) == 0x000004, "Member 'BP_PalIncidentRandom_C_OnEnterAnyArea_Impl::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEnterAnyArea_Impl, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_PalIncidentRandom_C_OnEnterAnyArea_Impl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnEnterAnyAreaEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentRandom_C_OnEnterAnyAreaEvent final
{
public:
	EPalRandomIncidentSpawnerAreaType             AreaType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnEnterAnyAreaEvent) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnEnterAnyAreaEvent");
static_assert(sizeof(BP_PalIncidentRandom_C_OnEnterAnyAreaEvent) == 0x000008, "Wrong size on BP_PalIncidentRandom_C_OnEnterAnyAreaEvent");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEnterAnyAreaEvent, AreaType) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnEnterAnyAreaEvent::AreaType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnEnterAnyAreaEvent, PlayerId) == 0x000004, "Member 'BP_PalIncidentRandom_C_OnEnterAnyAreaEvent::PlayerId' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnExitAnyArea_Impl
// 0x000C (0x000C - 0x0000)
struct BP_PalIncidentRandom_C_OnExitAnyArea_Impl final
{
public:
	EPalRandomIncidentSpawnerAreaType             AreaType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnExitAnyArea_Impl) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnExitAnyArea_Impl");
static_assert(sizeof(BP_PalIncidentRandom_C_OnExitAnyArea_Impl) == 0x00000C, "Wrong size on BP_PalIncidentRandom_C_OnExitAnyArea_Impl");
static_assert(offsetof(BP_PalIncidentRandom_C_OnExitAnyArea_Impl, AreaType) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnExitAnyArea_Impl::AreaType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnExitAnyArea_Impl, PlayerId) == 0x000004, "Member 'BP_PalIncidentRandom_C_OnExitAnyArea_Impl::PlayerId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnExitAnyArea_Impl, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_PalIncidentRandom_C_OnExitAnyArea_Impl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnExitAnyAreaEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentRandom_C_OnExitAnyAreaEvent final
{
public:
	EPalRandomIncidentSpawnerAreaType             AreaType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerId;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnExitAnyAreaEvent) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnExitAnyAreaEvent");
static_assert(sizeof(BP_PalIncidentRandom_C_OnExitAnyAreaEvent) == 0x000008, "Wrong size on BP_PalIncidentRandom_C_OnExitAnyAreaEvent");
static_assert(offsetof(BP_PalIncidentRandom_C_OnExitAnyAreaEvent, AreaType) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnExitAnyAreaEvent::AreaType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnExitAnyAreaEvent, PlayerId) == 0x000004, "Member 'BP_PalIncidentRandom_C_OnExitAnyAreaEvent::PlayerId' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnNpcDespawned
// 0x000C (0x000C - 0x0000)
struct BP_PalIncidentRandom_C_OnNpcDespawned final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnNpcDespawned) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnNpcDespawned");
static_assert(sizeof(BP_PalIncidentRandom_C_OnNpcDespawned) == 0x00000C, "Wrong size on BP_PalIncidentRandom_C_OnNpcDespawned");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcDespawned, RowName) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnNpcDespawned::RowName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcDespawned, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_OnNpcDespawned::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcDespawned, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'BP_PalIncidentRandom_C_OnNpcDespawned::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnNpcSpawned
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentRandom_C_OnNpcSpawned final
{
public:
	class FName                                   RowName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAllNpcSpawned_isSpawned;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37ED[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnNpcSpawned) == 0x000004, "Wrong alignment on BP_PalIncidentRandom_C_OnNpcSpawned");
static_assert(sizeof(BP_PalIncidentRandom_C_OnNpcSpawned) == 0x000010, "Wrong size on BP_PalIncidentRandom_C_OnNpcSpawned");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcSpawned, RowName) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnNpcSpawned::RowName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcSpawned, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_OnNpcSpawned::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcSpawned, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PalIncidentRandom_C_OnNpcSpawned::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcSpawned, CallFunc_IsAllNpcSpawned_isSpawned) == 0x00000A, "Member 'BP_PalIncidentRandom_C_OnNpcSpawned::CallFunc_IsAllNpcSpawned_isSpawned' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNpcSpawned, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'BP_PalIncidentRandom_C_OnNpcSpawned::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnNPCSpawnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed");
static_assert(sizeof(BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed) == 0x000008, "Wrong size on BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed");
static_assert(offsetof(BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed, DestroyedActor) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnNPCSpawnerDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.OnRandomIncidentActionNotify
// 0x0002 (0x0002 - 0x0000)
struct BP_PalIncidentRandom_C_OnRandomIncidentActionNotify final
{
public:
	EPalRandomIncidentActionNotifyType            NotifyType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_OnRandomIncidentActionNotify) == 0x000001, "Wrong alignment on BP_PalIncidentRandom_C_OnRandomIncidentActionNotify");
static_assert(sizeof(BP_PalIncidentRandom_C_OnRandomIncidentActionNotify) == 0x000002, "Wrong size on BP_PalIncidentRandom_C_OnRandomIncidentActionNotify");
static_assert(offsetof(BP_PalIncidentRandom_C_OnRandomIncidentActionNotify, NotifyType) == 0x000000, "Member 'BP_PalIncidentRandom_C_OnRandomIncidentActionNotify::NotifyType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_OnRandomIncidentActionNotify, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PalIncidentRandom_C_OnRandomIncidentActionNotify::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.SetDisableFlagForNPCSpawner_BP
// 0x0048 (0x0048 - 0x0000)
struct BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP final
{
public:
	bool                                          IsDisable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalRandomIncidentSpawnerBase*          CallFunc_Get_Incident_Spawner_IncidentSpawner;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37EF[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAreaRadius_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP");
static_assert(sizeof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP) == 0x000048, "Wrong size on BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, IsDisable) == 0x000000, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::IsDisable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_Get_Incident_Spawner_IncidentSpawner) == 0x000008, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_Get_Incident_Spawner_IncidentSpawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_Conv_StringToName_ReturnValue) == 0x000024, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_GetAreaRadius_ReturnValue) == 0x00002C, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_GetAreaRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_PalIncidentRandom_C_SetDisableFlagForNPCSpawner_BP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.SetupIncident
// 0x0058 (0x0058 - 0x0000)
struct BP_PalIncidentRandom_C_SetupIncident final
{
public:
	TArray<int32>                                 CallFunc_GetGroupList_GroupNo;                     // 0x0000(0x0010)(ReferenceParm)
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0018(0x0028)()
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterRandom*     K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Random; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_SetupIncident) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_SetupIncident");
static_assert(sizeof(BP_PalIncidentRandom_C_SetupIncident) == 0x000058, "Wrong size on BP_PalIncidentRandom_C_SetupIncident");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, CallFunc_GetGroupList_GroupNo) == 0x000000, "Member 'BP_PalIncidentRandom_C_SetupIncident::CallFunc_GetGroupList_GroupNo' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, CallFunc_Get_Setting_Table_Row_Result) == 0x000010, "Member 'BP_PalIncidentRandom_C_SetupIncident::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, CallFunc_Get_Setting_Table_Row_Data) == 0x000018, "Member 'BP_PalIncidentRandom_C_SetupIncident::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, CallFunc_GetDynamicParameter_ReturnValue) == 0x000040, "Member 'BP_PalIncidentRandom_C_SetupIncident::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Random) == 0x000048, "Member 'BP_PalIncidentRandom_C_SetupIncident::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Random' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupIncident, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PalIncidentRandom_C_SetupIncident::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.SetupOutbreakData
// 0x0038 (0x0038 - 0x0000)
struct BP_PalIncidentRandom_C_SetupOutbreakData final
{
public:
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0008(0x0028)()
	bool                                          CallFunc_IsOutbreakTable_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_SetupOutbreakData) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_SetupOutbreakData");
static_assert(sizeof(BP_PalIncidentRandom_C_SetupOutbreakData) == 0x000038, "Wrong size on BP_PalIncidentRandom_C_SetupOutbreakData");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupOutbreakData, CallFunc_Get_Setting_Table_Row_Result) == 0x000000, "Member 'BP_PalIncidentRandom_C_SetupOutbreakData::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupOutbreakData, CallFunc_Get_Setting_Table_Row_Data) == 0x000008, "Member 'BP_PalIncidentRandom_C_SetupOutbreakData::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_SetupOutbreakData, CallFunc_IsOutbreakTable_ReturnValue) == 0x000030, "Member 'BP_PalIncidentRandom_C_SetupOutbreakData::CallFunc_IsOutbreakTable_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.ShowErrorNameDuplication
// 0x0058 (0x0058 - 0x0000)
struct BP_PalIncidentRandom_C_ShowErrorNameDuplication final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_ShowErrorNameDuplication) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_ShowErrorNameDuplication");
static_assert(sizeof(BP_PalIncidentRandom_C_ShowErrorNameDuplication) == 0x000058, "Wrong size on BP_PalIncidentRandom_C_ShowErrorNameDuplication");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, InName) == 0x000000, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::InName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, CallFunc_Conv_NameToString_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000018, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_ShowErrorNameDuplication, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000048, "Member 'BP_PalIncidentRandom_C_ShowErrorNameDuplication::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.Spawn Characters
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentRandom_C_Spawn_Characters final
{
public:
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0008(0x0028)()
};
static_assert(alignof(BP_PalIncidentRandom_C_Spawn_Characters) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_Spawn_Characters");
static_assert(sizeof(BP_PalIncidentRandom_C_Spawn_Characters) == 0x000030, "Wrong size on BP_PalIncidentRandom_C_Spawn_Characters");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Characters, CallFunc_Get_Setting_Table_Row_Result) == 0x000000, "Member 'BP_PalIncidentRandom_C_Spawn_Characters::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Characters, CallFunc_Get_Setting_Table_Row_Data) == 0x000008, "Member 'BP_PalIncidentRandom_C_Spawn_Characters::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.Spawn Monsters
// 0x0188 (0x0188 - 0x0000)
struct BP_PalIncidentRandom_C_Spawn_Monsters final
{
public:
	class UDataTable*                             SpawnDataList;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalRandomIncidentSpawnMonsterData     GenerateSpawnMonsterData;                          // 0x0008(0x0048)(Edit, BlueprintVisible)
	struct FPalRandomIncidentSpawnMonsterOutbreakData OutbreakData;                                      // 0x0050(0x0040)(Edit, BlueprintVisible)
	class FName                                   RowName;                                           // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOutbreakTable_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F3[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F4[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_Array_Get_Item;                           // 0x00B0(0x0048)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F5[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F6[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnMonsterData     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0110(0x0048)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F7[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0160(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F8[0x3];                                     // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_Spawn_Monsters) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_Spawn_Monsters");
static_assert(sizeof(BP_PalIncidentRandom_C_Spawn_Monsters) == 0x000188, "Wrong size on BP_PalIncidentRandom_C_Spawn_Monsters");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, SpawnDataList) == 0x000000, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::SpawnDataList' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, GenerateSpawnMonsterData) == 0x000008, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::GenerateSpawnMonsterData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, OutbreakData) == 0x000050, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::OutbreakData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, RowName) == 0x000090, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::RowName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_IsOutbreakTable_ReturnValue) == 0x000098, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_IsOutbreakTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Length_ReturnValue_1) == 0x0000FC, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, Temp_int_Loop_Counter_Variable_1) == 0x000100, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Less_IntInt_ReturnValue) == 0x000104, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_GetDataTableRowFromName_OutRow) == 0x000110, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000158, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000160, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Length_ReturnValue_2) == 0x000178, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Less_IntInt_ReturnValue_1) == 0x00017C, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_Monsters, CallFunc_Array_Length_ReturnValue_3) == 0x000180, "Member 'BP_PalIncidentRandom_C_Spawn_Monsters::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.Spawn NPCs
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PalIncidentRandom_C_Spawn_NPCs final
{
public:
	class UDataTable*                             SpawnDataList;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37F9[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSpawnNPCData         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0068)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FA[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FB[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_Spawn_NPCs) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_Spawn_NPCs");
static_assert(sizeof(BP_PalIncidentRandom_C_Spawn_NPCs) == 0x0000B8, "Wrong size on BP_PalIncidentRandom_C_Spawn_NPCs");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, SpawnDataList) == 0x000000, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::SpawnDataList' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, RowName) == 0x000008, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::RowName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000088, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000090, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Spawn_NPCs, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BP_PalIncidentRandom_C_Spawn_NPCs::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.StartAction
// 0x0002 (0x0002 - 0x0000)
struct BP_PalIncidentRandom_C_StartAction final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_StartAction) == 0x000001, "Wrong alignment on BP_PalIncidentRandom_C_StartAction");
static_assert(sizeof(BP_PalIncidentRandom_C_StartAction) == 0x000002, "Wrong size on BP_PalIncidentRandom_C_StartAction");
static_assert(offsetof(BP_PalIncidentRandom_C_StartAction, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_PalIncidentRandom_C_StartAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_StartAction, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PalIncidentRandom_C_StartAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.TerminateAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PalIncidentRandom_C_TerminateAction final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_TerminateAction) == 0x000001, "Wrong alignment on BP_PalIncidentRandom_C_TerminateAction");
static_assert(sizeof(BP_PalIncidentRandom_C_TerminateAction) == 0x000001, "Wrong size on BP_PalIncidentRandom_C_TerminateAction");
static_assert(offsetof(BP_PalIncidentRandom_C_TerminateAction, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PalIncidentRandom_C_TerminateAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.Get Incident Spawner
// 0x0020 (0x0020 - 0x0000)
struct BP_PalIncidentRandom_C_Get_Incident_Spawner final
{
public:
	class APalRandomIncidentSpawnerBase*          IncidentSpawner;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalRandomIncidentSpawnerBase*          K2Node_DynamicCast_AsPal_Random_Incident_Spawner_Base; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_Get_Incident_Spawner) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_Get_Incident_Spawner");
static_assert(sizeof(BP_PalIncidentRandom_C_Get_Incident_Spawner) == 0x000020, "Wrong size on BP_PalIncidentRandom_C_Get_Incident_Spawner");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Incident_Spawner, IncidentSpawner) == 0x000000, "Member 'BP_PalIncidentRandom_C_Get_Incident_Spawner::IncidentSpawner' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Incident_Spawner, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PalIncidentRandom_C_Get_Incident_Spawner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Incident_Spawner, K2Node_DynamicCast_AsPal_Random_Incident_Spawner_Base) == 0x000010, "Member 'BP_PalIncidentRandom_C_Get_Incident_Spawner::K2Node_DynamicCast_AsPal_Random_Incident_Spawner_Base' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Incident_Spawner, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PalIncidentRandom_C_Get_Incident_Spawner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.Get Setting Table Row
// 0x0060 (0x0060 - 0x0000)
struct BP_PalIncidentRandom_C_Get_Setting_Table_Row final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             Data;                                              // 0x0008(0x0028)(Parm, OutParm)
	struct FPalRandomIncidentSettings             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentRandom_C_Get_Setting_Table_Row) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_Get_Setting_Table_Row");
static_assert(sizeof(BP_PalIncidentRandom_C_Get_Setting_Table_Row) == 0x000060, "Wrong size on BP_PalIncidentRandom_C_Get_Setting_Table_Row");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Setting_Table_Row, Result) == 0x000000, "Member 'BP_PalIncidentRandom_C_Get_Setting_Table_Row::Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Setting_Table_Row, Data) == 0x000008, "Member 'BP_PalIncidentRandom_C_Get_Setting_Table_Row::Data' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Setting_Table_Row, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'BP_PalIncidentRandom_C_Get_Setting_Table_Row::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_Get_Setting_Table_Row, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000058, "Member 'BP_PalIncidentRandom_C_Get_Setting_Table_Row::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentRandom.BP_PalIncidentRandom_C.IsExcludeOtherPal
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentRandom_C_IsExcludeOtherPal final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Setting_Table_Row_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37FD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalRandomIncidentSettings             CallFunc_Get_Setting_Table_Row_Data;               // 0x0008(0x0028)()
};
static_assert(alignof(BP_PalIncidentRandom_C_IsExcludeOtherPal) == 0x000008, "Wrong alignment on BP_PalIncidentRandom_C_IsExcludeOtherPal");
static_assert(sizeof(BP_PalIncidentRandom_C_IsExcludeOtherPal) == 0x000030, "Wrong size on BP_PalIncidentRandom_C_IsExcludeOtherPal");
static_assert(offsetof(BP_PalIncidentRandom_C_IsExcludeOtherPal, ReturnValue) == 0x000000, "Member 'BP_PalIncidentRandom_C_IsExcludeOtherPal::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsExcludeOtherPal, CallFunc_Get_Setting_Table_Row_Result) == 0x000001, "Member 'BP_PalIncidentRandom_C_IsExcludeOtherPal::CallFunc_Get_Setting_Table_Row_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentRandom_C_IsExcludeOtherPal, CallFunc_Get_Setting_Table_Row_Data) == 0x000008, "Member 'BP_PalIncidentRandom_C_IsExcludeOtherPal::CallFunc_Get_Setting_Table_Row_Data' has a wrong offset!");

}

