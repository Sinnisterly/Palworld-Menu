#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Status_FallDamage

#include "Basic.hpp"

#include "BP_Status_FallDamage_classes.hpp"
#include "BP_Status_FallDamage_parameters.hpp"


namespace SDK
{

// Function BP_Status_FallDamage.BP_Status_FallDamage_C.ExecuteUbergraph_BP_Status_FallDamage
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::ExecuteUbergraph_BP_Status_FallDamage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "ExecuteUbergraph_BP_Status_FallDamage");

	Params::BP_Status_FallDamage_C_ExecuteUbergraph_BP_Status_FallDamage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.GetLastJumpedZ
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Z                                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::GetLastJumpedZ(double* Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "GetLastJumpedZ");

	Params::BP_Status_FallDamage_C_GetLastJumpedZ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Z != nullptr)
		*Z = Parms.Z;
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.IsIgnoreCharacter
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Ignore                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::IsIgnoreCharacter(bool* Ignore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "IsIgnoreCharacter");

	Params::BP_Status_FallDamage_C_IsIgnoreCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ignore != nullptr)
		*Ignore = Parms.Ignore;
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.LandDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_Status_FallDamage_C::LandDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "LandDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.OnBeginStatus
// (Event, Public, BlueprintEvent)

void UBP_Status_FallDamage_C::OnBeginStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "OnBeginStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.OnEndStatus
// (Event, Public, BlueprintEvent)

void UBP_Status_FallDamage_C::OnEndStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "OnEndStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.OnLand
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalCharacterMovementComponent*   Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UBP_Status_FallDamage_C::OnLand(class UPalCharacterMovementComponent* Component, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "OnLand");

	Params::BP_Status_FallDamage_C_OnLand Parms{};

	Parms.Component = Component;
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.OnModeChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalCharacterMovementComponent*   Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           PrevMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EMovementMode                           NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPalCharacterMovementCustomMode         PrevCustomMode                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EPalCharacterMovementCustomMode         NewCustomMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::OnModeChange(class UPalCharacterMovementComponent* Component, EMovementMode PrevMode, EMovementMode NewMode, EPalCharacterMovementCustomMode PrevCustomMode, EPalCharacterMovementCustomMode NewCustomMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "OnModeChange");

	Params::BP_Status_FallDamage_C_OnModeChange Parms{};

	Parms.Component = Component;
	Parms.PrevMode = PrevMode;
	Parms.NewMode = NewMode;
	Parms.PrevCustomMode = PrevCustomMode;
	Parms.NewCustomMode = NewCustomMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.ResetFallStartPos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnLand                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::ResetFallStartPos(bool OnLand)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "ResetFallStartPos");

	Params::BP_Status_FallDamage_C_ResetFallStartPos Parms{};

	Parms.OnLand = OnLand;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.SetUp_FallDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::SetUp_FallDamage(class APalCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "SetUp_FallDamage");

	Params::BP_Status_FallDamage_C_SetUp_FallDamage Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Status_FallDamage.BP_Status_FallDamage_C.TickStatus
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Status_FallDamage_C::TickStatus(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Status_FallDamage_C", "TickStatus");

	Params::BP_Status_FallDamage_C_TickStatus Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

