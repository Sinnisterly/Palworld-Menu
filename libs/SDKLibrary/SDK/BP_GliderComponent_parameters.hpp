#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GliderComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_GliderComponent.BP_GliderComponent_C.CheckReturnSpawnedOtomo
// 0x0058 (0x0058 - 0x0000)
struct BP_GliderComponent_C_CheckReturnSpawnedOtomo final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllGliderPalNames_ReturnValue;         // 0x0008(0x0010)(ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGliderPal_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4306[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4307[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_OtomoPalHolderComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetSpawnedOtomo_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Inactivate_Otomo_isSuccess;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4308[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterIDFromCharacter_ReturnValue;  // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GliderComponent_C_CheckReturnSpawnedOtomo) == 0x000008, "Wrong alignment on BP_GliderComponent_C_CheckReturnSpawnedOtomo");
static_assert(sizeof(BP_GliderComponent_C_CheckReturnSpawnedOtomo) == 0x000058, "Wrong size on BP_GliderComponent_C_CheckReturnSpawnedOtomo");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_GetAllGliderPalNames_ReturnValue) == 0x000008, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_GetAllGliderPalNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_HasGliderPal_ReturnValue) == 0x000020, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_HasGliderPal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000028, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_TryGetSpawnedOtomo_ReturnValue) == 0x000040, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_TryGetSpawnedOtomo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_Inactivate_Otomo_isSuccess) == 0x000048, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_Inactivate_Otomo_isSuccess' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_GetCharacterIDFromCharacter_ReturnValue) == 0x00004C, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_GetCharacterIDFromCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_CheckReturnSpawnedOtomo, CallFunc_Array_Contains_ReturnValue) == 0x000055, "Member 'BP_GliderComponent_C_CheckReturnSpawnedOtomo::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_GliderComponent.BP_GliderComponent_C.ExecuteUbergraph_BP_GliderComponent
// 0x00A0 (0x00A0 - 0x0000)
struct BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4309[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430B[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NormalizeToRange_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisibility;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions;                 // 0x0074(0x0004)(NoDestructor)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID_1;   // 0x0078(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions_1;               // 0x0080(0x0004)(NoDestructor)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID_2;   // 0x0084(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID_3;   // 0x008C(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions_2;               // 0x0094(0x0004)(NoDestructor)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent) == 0x000008, "Wrong alignment on BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent");
static_assert(sizeof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent) == 0x0000A0, "Wrong size on BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, EntryPoint) == 0x000000, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000028, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_Event_DeltaSeconds) == 0x000034, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_NormalizeToRange_ReturnValue) == 0x000058, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_Event_bIsVisibility) == 0x000069, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_Event_bIsVisibility' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_Not_PreBool_ReturnValue) == 0x00006A, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_IsValid_ReturnValue_2) == 0x00006B, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x00006C, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalSoundOptions) == 0x000074, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalSoundOptions' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalDataTableRowName_SoundID_1) == 0x000078, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalDataTableRowName_SoundID_1' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalSoundOptions_1) == 0x000080, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalSoundOptions_1' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalDataTableRowName_SoundID_2) == 0x000084, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalDataTableRowName_SoundID_2' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalDataTableRowName_SoundID_3) == 0x00008C, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalDataTableRowName_SoundID_3' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, K2Node_MakeStruct_PalSoundOptions_2) == 0x000094, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::K2Node_MakeStruct_PalSoundOptions_2' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000098, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00009C, "Member 'BP_GliderComponent_C_ExecuteUbergraph_BP_GliderComponent::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function BP_GliderComponent.BP_GliderComponent_C.OnChangeGliderVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_GliderComponent_C_OnChangeGliderVisibility final
{
public:
	bool                                          bIsVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GliderComponent_C_OnChangeGliderVisibility) == 0x000001, "Wrong alignment on BP_GliderComponent_C_OnChangeGliderVisibility");
static_assert(sizeof(BP_GliderComponent_C_OnChangeGliderVisibility) == 0x000001, "Wrong size on BP_GliderComponent_C_OnChangeGliderVisibility");
static_assert(offsetof(BP_GliderComponent_C_OnChangeGliderVisibility, bIsVisibility) == 0x000000, "Member 'BP_GliderComponent_C_OnChangeGliderVisibility::bIsVisibility' has a wrong offset!");

// Function BP_GliderComponent.BP_GliderComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_GliderComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GliderComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_GliderComponent_C_ReceiveTick");
static_assert(sizeof(BP_GliderComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_GliderComponent_C_ReceiveTick");
static_assert(offsetof(BP_GliderComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_GliderComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_GliderComponent.BP_GliderComponent_C.Setup
// 0x0020 (0x0020 - 0x0000)
struct BP_GliderComponent_C_Setup final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterMovementComponent*         CallFunc_GetPalCharacterMovementComponent_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GliderComponent_C_Setup) == 0x000008, "Wrong alignment on BP_GliderComponent_C_Setup");
static_assert(sizeof(BP_GliderComponent_C_Setup) == 0x000020, "Wrong size on BP_GliderComponent_C_Setup");
static_assert(offsetof(BP_GliderComponent_C_Setup, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_GliderComponent_C_Setup::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_Setup, K2Node_DynamicCast_AsPal_Character) == 0x000008, "Member 'BP_GliderComponent_C_Setup::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_GliderComponent_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GliderComponent_C_Setup, CallFunc_GetPalCharacterMovementComponent_ReturnValue) == 0x000018, "Member 'BP_GliderComponent_C_Setup::CallFunc_GetPalCharacterMovementComponent_ReturnValue' has a wrong offset!");

}

