#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AINPC_Combat_CommonState_BackwardTurn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AINPC_CombatState_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AINPC_Combat_CommonState_BackwardTurn.BP_AINPC_Combat_CommonState_BackwardTurn_C
// 0x0018 (0x0050 - 0x0038)
class UBP_AINPC_Combat_CommonState_BackwardTurn_C final : public UBP_AINPC_CombatState_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0038(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        RightLeftMove;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FlagName;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AINPC_Combat_CommonState_BackwardTurn(int32 EntryPoint);
	void StateEnter();
	void StateExit();
	void StateTick(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AINPC_Combat_CommonState_BackwardTurn_C">();
	}
	static class UBP_AINPC_Combat_CommonState_BackwardTurn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AINPC_Combat_CommonState_BackwardTurn_C>();
	}
};
static_assert(alignof(UBP_AINPC_Combat_CommonState_BackwardTurn_C) == 0x000008, "Wrong alignment on UBP_AINPC_Combat_CommonState_BackwardTurn_C");
static_assert(sizeof(UBP_AINPC_Combat_CommonState_BackwardTurn_C) == 0x000050, "Wrong size on UBP_AINPC_Combat_CommonState_BackwardTurn_C");
static_assert(offsetof(UBP_AINPC_Combat_CommonState_BackwardTurn_C, UberGraphFrame) == 0x000038, "Member 'UBP_AINPC_Combat_CommonState_BackwardTurn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AINPC_Combat_CommonState_BackwardTurn_C, RightLeftMove) == 0x000040, "Member 'UBP_AINPC_Combat_CommonState_BackwardTurn_C::RightLeftMove' has a wrong offset!");
static_assert(offsetof(UBP_AINPC_Combat_CommonState_BackwardTurn_C, FlagName) == 0x000048, "Member 'UBP_AINPC_Combat_CommonState_BackwardTurn_C::FlagName' has a wrong offset!");

}

