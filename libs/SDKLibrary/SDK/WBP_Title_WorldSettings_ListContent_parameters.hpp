#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Title_WorldSettings_ListContent

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetupTextInput
// 0x0028 (0x0028 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetupTextInput final
{
public:
	class FString                                 DefaultString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetupTextInput) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetupTextInput");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetupTextInput) == 0x000028, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetupTextInput");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupTextInput, DefaultString) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupTextInput::DefaultString' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupTextInput, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupTextInput::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetupSelectString
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetupSelectString final
{
public:
	TArray<class FString>                         SelectStrings;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         DefaultSelectIndex;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetupSelectString) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetupSelectString");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetupSelectString) == 0x000018, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetupSelectString");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupSelectString, SelectStrings) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupSelectString::SelectStrings' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupSelectString, DefaultSelectIndex) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupSelectString::DefaultSelectIndex' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetupOnOff
// 0x0002 (0x0002 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetupOnOff final
{
public:
	bool                                          Param_IsOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetupOnOff) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetupOnOff");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetupOnOff) == 0x000002, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetupOnOff");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupOnOff, Param_IsOn) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupOnOff::Param_IsOn' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupOnOff, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupOnOff::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetupIntValue
// 0x000C (0x000C - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetupIntValue final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Min;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetupIntValue) == 0x000004, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetupIntValue");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetupIntValue) == 0x00000C, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetupIntValue");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupIntValue, Value) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupIntValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupIntValue, Min) == 0x000004, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupIntValue::Min' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupIntValue, Max) == 0x000008, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupIntValue::Max' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetupFloatValue
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetupFloatValue final
{
public:
	double                                        NowValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxValue;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetupFloatValue) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetupFloatValue");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetupFloatValue) == 0x000018, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetupFloatValue");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupFloatValue, NowValue) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupFloatValue::NowValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupFloatValue, MinValue) == 0x000008, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupFloatValue::MinValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetupFloatValue, MaxValue) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_SetupFloatValue::MaxValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetEnableCautionMark
// 0x0005 (0x0005 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark final
{
public:
	bool                                          IsEnableMark;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark) == 0x000005, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark, IsEnableMark) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark::IsEnableMark' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark, Temp_bool_Variable) == 0x000001, "Member 'WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark, Temp_byte_Variable) == 0x000002, "Member 'WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark, K2Node_Select_Default) == 0x000004, "Member 'WBP_Title_WorldSettings_ListContent_C_SetEnableCautionMark::K2Node_Select_Default' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.SetButtonText
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_SetButtonText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_SetButtonText) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_SetButtonText");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_SetButtonText) == 0x000018, "Wrong size on WBP_Title_WorldSettings_ListContent_C_SetButtonText");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_SetButtonText, Text) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_SetButtonText::Text' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.Set Name Select Index
// 0x0004 (0x0004 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index) == 0x000004, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index) == 0x000004, "Wrong size on WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index, Param_Index) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_Set_Name_Select_Index::Param_Index' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_PreConstruct");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_PreConstruct) == 0x000001, "Wrong size on WBP_Title_WorldSettings_ListContent_C_PreConstruct");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.OnSwitchChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature final
{
public:
	bool                                          Param_IsOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature, Param_IsOn) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_OnSwitchChanged__DelegateSignature::Param_IsOn' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.OnComittedText__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature final
{
public:
	class FString                                 NewString;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature) == 0x000010, "Wrong size on WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature, NewString) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_OnComittedText__DelegateSignature::NewString' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.OnClickedInternal
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_OnClickedInternal final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_OnClickedInternal) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_OnClickedInternal");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_OnClickedInternal) == 0x000001, "Wrong size on WBP_Title_WorldSettings_ListContent_C_OnClickedInternal");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_OnClickedInternal, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_OnClickedInternal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.OnChangedValue__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature final
{
public:
	double                                        NewValue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature, NewValue) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_OnChangedValue__DelegateSignature::NewValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.OnChangedSelectIndex__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature) == 0x000004, "Wrong size on WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature, NewIndex) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_OnChangedSelectIndex__DelegateSignature::NewIndex' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.IsOn
// 0x0002 (0x0002 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_IsOn final
{
public:
	bool                                          Param_IsOn;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOn_IsOn;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_IsOn) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_IsOn");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_IsOn) == 0x000002, "Wrong size on WBP_Title_WorldSettings_ListContent_C_IsOn");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsOn, Param_IsOn) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_IsOn::Param_IsOn' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsOn, CallFunc_IsOn_IsOn) == 0x000001, "Member 'WBP_Title_WorldSettings_ListContent_C_IsOn::CallFunc_IsOn_IsOn' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.IsEditingText
// 0x0004 (0x0004 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_IsEditingText final
{
public:
	bool                                          IsEditing;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_IsEditingText) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_IsEditingText");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_IsEditingText) == 0x000004, "Wrong size on WBP_Title_WorldSettings_ListContent_C_IsEditingText");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsEditingText, IsEditing) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_IsEditingText::IsEditing' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsEditingText, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000001, "Member 'WBP_Title_WorldSettings_ListContent_C_IsEditingText::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsEditingText, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000002, "Member 'WBP_Title_WorldSettings_ListContent_C_IsEditingText::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_IsEditingText, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WBP_Title_WorldSettings_ListContent_C_IsEditingText::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.InitializeInternal
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_InitializeInternal final
{
public:
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0000(0x0018)()
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0018(0x0018)()
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4759[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_InitializeInternal");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal) == 0x0000E8, "Wrong size on WBP_Title_WorldSettings_ListContent_C_InitializeInternal");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000018, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_GetDisplayName_ReturnValue) == 0x000030, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_InitializeInternal, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'WBP_Title_WorldSettings_ListContent_C_InitializeInternal::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.GetSelectNameIndex
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex final
{
public:
	int32                                         NowIndex;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentIndex_Index;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex) == 0x000004, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex, NowIndex) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex::NowIndex' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex, CallFunc_GetCurrentIndex_Index) == 0x000004, "Member 'WBP_Title_WorldSettings_ListContent_C_GetSelectNameIndex::CallFunc_GetCurrentIndex_Index' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.GetInputText
// 0x0038 (0x0038 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_GetInputText final
{
public:
	class FString                                 InputTextString;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_GetInputText) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_GetInputText");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_GetInputText) == 0x000038, "Wrong size on WBP_Title_WorldSettings_ListContent_C_GetInputText");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetInputText, InputTextString) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_GetInputText::InputTextString' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetInputText, CallFunc_GetText_ReturnValue) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_GetInputText::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetInputText, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'WBP_Title_WorldSettings_ListContent_C_GetInputText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.GetButtonText
// 0x0030 (0x0030 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_GetButtonText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetButtonText_ButtonText;                 // 0x0018(0x0018)()
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_GetButtonText) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_GetButtonText");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_GetButtonText) == 0x000030, "Wrong size on WBP_Title_WorldSettings_ListContent_C_GetButtonText");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetButtonText, Text) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_GetButtonText::Text' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_GetButtonText, CallFunc_GetButtonText_ButtonText) == 0x000018, "Member 'WBP_Title_WorldSettings_ListContent_C_GetButtonText::CallFunc_GetButtonText_ButtonText' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.ExecuteUbergraph_WBP_Title_WorldSettings_ListContent
// 0x0178 (0x0178 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isEnableButton;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_2;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button_1;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsOn;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0048(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0068(0x0018)(ConstParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475D[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Selection;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475E[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C0(0x0018)()
	double                                        K2Node_ComponentBoundEvent_Value;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x00E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0100(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent) == 0x000178, "Wrong size on WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, EntryPoint) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, Temp_byte_Variable) == 0x000004, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, Temp_byte_Variable_1) == 0x000005, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_CustomEvent_isEnableButton) == 0x000006, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_CustomEvent_isEnableButton' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, Temp_bool_Variable) == 0x000007, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000008, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_Select_Default) == 0x000009, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Button_2) == 0x000018, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Button_1) == 0x000020, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_PlayAnimation_ReturnValue_2) == 0x000030, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_IsOn) == 0x000038, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_IsOn' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Button) == 0x000040, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Text_1) == 0x000048, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_CommitMethod) == 0x000060, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Text) == 0x000068, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000098, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Selection) == 0x0000A8, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Selection' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Left_ReturnValue) == 0x0000B0, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C0, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_ComponentBoundEvent_Value) == 0x0000D8, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_Event_IsDesignTime) == 0x0000E0, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Conv_NameToText_ReturnValue) == 0x0000E8, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_MakeStruct_FormatArgumentData) == 0x000100, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, K2Node_MakeArray_Array) == 0x000150, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent, CallFunc_Format_ReturnValue) == 0x000160, "Member 'WBP_Title_WorldSettings_ListContent_C_ExecuteUbergraph_WBP_Title_WorldSettings_ListContent::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.CustomNavi_ToRight
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4760[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOn_IsOn;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight) == 0x000018, "Wrong size on WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight, Param_Navigation) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight, ReturnValue) == 0x000008, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight, CallFunc_IsOn_IsOn) == 0x000011, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToRight::CallFunc_IsOn_IsOn' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.CustomNavi_ToLeft
// 0x0020 (0x0020 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4761[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOn_IsOn;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft) == 0x000020, "Wrong size on WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft, Param_Navigation) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft, ReturnValue) == 0x000008, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft, CallFunc_IsOn_IsOn) == 0x000019, "Member 'WBP_Title_WorldSettings_ListContent_C_CustomNavi_ToLeft::CallFunc_IsOn_IsOn' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature final
{
public:
	bool                                          Param_IsOn;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature) == 0x000001, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature, Param_IsOn) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSwitch_K2Node_ComponentBoundEvent_3_OnSwitcherChanged__DelegateSignature::Param_IsOn' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature) == 0x000008, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature, Value) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentSlider_K2Node_ComponentBoundEvent_8_OnValueChanged__DelegateSignature::Value' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature) == 0x000004, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature) == 0x000004, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature, Selection) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_WBP_OptionSettings_ListContentLR_K2Node_ComponentBoundEvent_6_OnSelectionChanged__DelegateSignature::Selection' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'WBP_Title_WorldSettings_ListContent_C_BndEvt__WBP_Title_WorldSettings_ListContent_EditableTextBox_46_K2Node_ComponentBoundEvent_1_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WBP_Title_WorldSettings_ListContent.WBP_Title_WorldSettings_ListContent_C.AnmEvent_SetEnableBuutton
// 0x0001 (0x0001 - 0x0000)
struct WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton final
{
public:
	bool                                          IsEnableButton;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton) == 0x000001, "Wrong alignment on WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton");
static_assert(sizeof(WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton) == 0x000001, "Wrong size on WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton");
static_assert(offsetof(WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton, IsEnableButton) == 0x000000, "Member 'WBP_Title_WorldSettings_ListContent_C_AnmEvent_SetEnableBuutton::IsEnableButton' has a wrong offset!");

}

