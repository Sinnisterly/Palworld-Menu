#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentNPCTalk

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "FPalPresentLotteryDataTableRow_structs.hpp"
#include "FPalRequestItemLotteryDataTableRow_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.AddItemToInventory
// 0x0040 (0x0040 - 0x0000)
struct BP_PalIncidentNPCTalk_C_AddItemToInventory final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TScriptInterface<class IPalNPCTalkSystemCustomFunctionInterface> Interface;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_AddItemToInventory) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_AddItemToInventory");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_AddItemToInventory) == 0x000040, "Wrong size on BP_PalIncidentNPCTalk_C_AddItemToInventory");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AddItemToInventory, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_AddItemToInventory::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AddItemToInventory, Interface) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_AddItemToInventory::Interface' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AddItemToInventory, CallFunc_GetHUDService_ReturnValue) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_AddItemToInventory::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.AttachCamera
// 0x0230 (0x0230 - 0x0000)
struct BP_PalIncidentNPCTalk_C_AttachCamera final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377E[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TraceDegStep;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationToTarget;                                  // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TalkCameraLocation;                                // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerCameraLocation;                              // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PlayerLocation;                                    // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindTalkCameraLocation_NoHitPlayer_Result; // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377F[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindTalkCameraLocation_NoHitPlayer_NewTalkCameraLocation; // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3780[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPalCharacterCameraComponent*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3781[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue_1;   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3782[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_AttachCamera) == 0x000010, "Wrong alignment on BP_PalIncidentNPCTalk_C_AttachCamera");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_AttachCamera) == 0x000230, "Wrong size on BP_PalIncidentNPCTalk_C_AttachCamera");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, NewLocalVar_0) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, TraceDegStep) == 0x000004, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::TraceDegStep' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, RotationToTarget) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::RotationToTarget' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, TalkCameraLocation) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::TalkCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, PlayerCameraLocation) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::PlayerCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, PlayerLocation) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, TargetLocation) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_FindTalkCameraLocation_NoHitPlayer_Result) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_FindTalkCameraLocation_NoHitPlayer_Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_FindTalkCameraLocation_NoHitPlayer_NewTalkCameraLocation) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_FindTalkCameraLocation_NoHitPlayer_NewTalkCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000100, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetDynamicParameter_ReturnValue) == 0x000108, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000110, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, K2Node_DynamicCast_AsPal_Character) == 0x000118, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_IsValid_ReturnValue) == 0x000121, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000128, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetSocketLocation_ReturnValue) == 0x000140, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000158, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_MakeRotFromX_ReturnValue) == 0x000170, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetComponentByClass_ReturnValue) == 0x000188, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_IsValid_ReturnValue_1) == 0x000190, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000198, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0001B0, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001C8, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_Add_VectorVector_ReturnValue) == 0x0001F8, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetLocalPlayerController_ReturnValue_1) == 0x000210, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetLocalPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000218, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, K2Node_DynamicCast_bSuccess_1) == 0x000220, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttachCamera, CallFunc_GetViewTarget_ReturnValue) == 0x000228, "Member 'BP_PalIncidentNPCTalk_C_AttachCamera::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.AttackToPlayer
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentNPCTalk_C_AttackToPlayer final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_AttackToPlayer) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_AttackToPlayer");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_AttackToPlayer) == 0x000028, "Wrong size on BP_PalIncidentNPCTalk_C_AttackToPlayer");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_AttackToPlayer, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_AttackToPlayer::Param' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.CreateCamera
// 0x0090 (0x0090 - 0x0000)
struct BP_PalIncidentNPCTalk_C_CreateCamera final
{
public:
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3783[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3784[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PalIncidentCamera_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_CreateCamera) == 0x000010, "Wrong alignment on BP_PalIncidentNPCTalk_C_CreateCamera");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_CreateCamera) == 0x000090, "Wrong size on BP_PalIncidentNPCTalk_C_CreateCamera");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CreateCamera, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_CreateCamera::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CreateCamera, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_CreateCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CreateCamera, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_CreateCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CreateCamera, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_CreateCamera::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CreateCamera, CallFunc_FinishSpawningActor_ReturnValue) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_CreateCamera::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.CunsumeRequestItem
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PalIncidentNPCTalk_C_CunsumeRequestItem final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         RequestNum;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConsumedItemNum;                                   // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RequestItem;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPalNPCTalkSystemCustomFunctionInterface> Interface;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_outName;                      // 0x0048(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0060(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3785[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3786[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RequestConsumeInventoryItem_ReturnValue;  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_CunsumeRequestItem");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem) == 0x0000A8, "Wrong size on BP_PalIncidentNPCTalk_C_CunsumeRequestItem");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, RequestNum) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::RequestNum' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, ConsumedItemNum) == 0x00002C, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::ConsumedItemNum' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, RequestItem) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::RequestItem' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, Interface) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::Interface' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_GetItemName_outName) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_Conv_IntToText_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_Not_PreBool_ReturnValue) == 0x000079, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_GetDynamicParameter_ReturnValue) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000098, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CunsumeRequestItem, CallFunc_RequestConsumeInventoryItem_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_CunsumeRequestItem::CallFunc_RequestConsumeInventoryItem_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.CustomFunctionTemplate
// 0x0038 (0x0038 - 0x0000)
struct BP_PalIncidentNPCTalk_C_CustomFunctionTemplate final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	TScriptInterface<class IPalNPCTalkSystemCustomFunctionInterface> Interface;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_CustomFunctionTemplate) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_CustomFunctionTemplate");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_CustomFunctionTemplate) == 0x000038, "Wrong size on BP_PalIncidentNPCTalk_C_CustomFunctionTemplate");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionTemplate, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionTemplate::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionTemplate, Interface) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionTemplate::Interface' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.CustomFunctionToServer
// 0x0070 (0x0070 - 0x0000)
struct BP_PalIncidentNPCTalk_C_CustomFunctionToServer final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalNPCTalkNotifyInfo                  K2Node_MakeStruct_PalNPCTalkNotifyInfo;            // 0x0038(0x0018)(NoDestructor)
	class APalNetworkTransmitter*                 CallFunc_GetNetworkTransmitter_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3787[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNetworkCharacterComponent*          CallFunc_GetCharacter_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_CustomFunctionToServer");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer) == 0x000070, "Wrong size on BP_PalIncidentNPCTalk_C_CustomFunctionToServer");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, CallFunc_GetDynamicParameter_ReturnValue) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, K2Node_MakeStruct_PalNPCTalkNotifyInfo) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::K2Node_MakeStruct_PalNPCTalkNotifyInfo' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, CallFunc_GetNetworkTransmitter_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::CallFunc_GetNetworkTransmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, K2Node_DynamicCast_AsPal_Player_Character) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_CustomFunctionToServer, CallFunc_GetCharacter_ReturnValue) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_CustomFunctionToServer::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.DetachCamera
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentNPCTalk_C_DetachCamera final
{
public:
	double                                        BlendTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3788[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3789[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_DetachCamera) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_DetachCamera");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_DetachCamera) == 0x000028, "Wrong size on BP_PalIncidentNPCTalk_C_DetachCamera");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, BlendTime) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_DetachCamera, CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast) == 0x000024, "Member 'BP_PalIncidentNPCTalk_C_DetachCamera::CallFunc_SetViewTargetWithBlend_BlendTime_ImplicitCast' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.ExecuteUbergraph_BP_PalIncidentNPCTalk
// 0x01A0 (0x01A0 - 0x0000)
struct BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_1;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(class UPalHUDDispatchParameterBase* Param)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_1; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UPalHUDDispatchParameterBase* Param)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378D[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           K2Node_CustomEvent_Param_2;                        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalTalkWidgetParameter*                CallFunc_SpawnObject_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Push_ReturnValue;                         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalHUDDispatchParameterBase* Param)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           K2Node_CustomEvent_HUDParam_1;                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           K2Node_CustomEvent_Param_1;                        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalTalkWidgetParameter*                K2Node_DynamicCast_AsPal_Talk_Widget_Parameter;    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Setup_Talkable;                           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378E[0x2];                                     // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter_1;         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           K2Node_CustomEvent_HUDParam;                       // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue_2;              // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameterBase*           K2Node_CustomEvent_Param;                          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_2; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378F[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3790[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Push_ReturnValue_1;                       // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Push_ReturnValue_2;                       // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    K2Node_CustomEvent_Loaded_2;                       // 0x0150(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APalNetworkTransmitter*                 CallFunc_GetNetworkTransmitter_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TSubclassOf<class UObject> Loaded)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNetworkCharacterComponent*          CallFunc_GetCharacter_ReturnValue;                 // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue_1;        // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3791[0x6];                                     // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Tick_DelayFinish_DeltaTime_ImplicitCast;  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk) == 0x0001A0, "Wrong size on BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, EntryPoint) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Loaded_1) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, Temp_class_Variable) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, Temp_class_Variable_1) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_1) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_bSuccess_1) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate_1) == 0x00005C, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetHUDService_ReturnValue) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Param_2) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Param_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate_2) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_SpawnObject_ReturnValue) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetHUDService_ReturnValue_1) == 0x000098, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetHUDService_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Push_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Push_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_HUDParam_1) == 0x0000C0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_HUDParam_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Param_1) == 0x0000C8, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Param_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_DynamicCast_AsPal_Talk_Widget_Parameter) == 0x0000D0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_DynamicCast_AsPal_Talk_Widget_Parameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Setup_Talkable) == 0x0000D9, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Setup_Talkable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_Event_DeltaTime) == 0x0000DC, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetTalkCharacter_TalkCharacter_1) == 0x0000E0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetTalkCharacter_TalkCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_HUDParam) == 0x0000E8, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_HUDParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F0, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetHUDService_ReturnValue_2) == 0x000100, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetHUDService_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Param) == 0x000108, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, Temp_class_Variable_2) == 0x000110, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_2) == 0x000118, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_AsPal_User_Widget_Stackable_UI_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_ClassDynamicCast_bSuccess_2) == 0x000120, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Conv_StringToName_ReturnValue) == 0x000124, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_IsValid_ReturnValue) == 0x00012C, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Not_PreBool_ReturnValue) == 0x00012D, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Push_ReturnValue_1) == 0x000130, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Push_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Push_ReturnValue_2) == 0x000140, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Push_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CustomEvent_Loaded_2) == 0x000150, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetNetworkTransmitter_ReturnValue) == 0x000158, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetNetworkTransmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_CreateDelegate_OutputDelegate_5) == 0x000160, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetCharacter_ReturnValue) == 0x000170, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetDynamicParameter_ReturnValue) == 0x000178, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_GetDynamicParameter_ReturnValue_1) == 0x000180, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_GetDynamicParameter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_DynamicCast_AsPal_Player_Character) == 0x000188, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_HasAuthority_ReturnValue) == 0x000191, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk, CallFunc_Tick_DelayFinish_DeltaTime_ImplicitCast) == 0x000198, "Member 'BP_PalIncidentNPCTalk_C_ExecuteUbergraph_BP_PalIncidentNPCTalk::CallFunc_Tick_DelayFinish_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.FindTalkCameraLocation_NoHitPlayer
// 0x03C0 (0x03C0 - 0x0000)
struct BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer final
{
public:
	struct FVector                                PlayerLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TalkCameraLocation;                                // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3792[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewTalkCameraLocation;                             // 0x0050(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultLocation;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3793[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TraceDegStep;                                      // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3794[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3795[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3796[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0190(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3797[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3798[0x2];                                     // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3799[0x4];                                     // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0358(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379A[0x4];                                     // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer) == 0x0003C0, "Wrong size on BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, PlayerLocation) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::PlayerLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, TargetLocation) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, TalkCameraLocation) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::TalkCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, Result) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::Result' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, NewTalkCameraLocation) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::NewTalkCameraLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, ResultLocation) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::ResultLocation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, bResult) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::bResult' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, TraceDegStep) == 0x000084, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::TraceDegStep' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, Temp_bool_Variable) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_GetDynamicParameter_ReturnValue) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, Temp_int_Variable) == 0x0000B8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000100, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_X) == 0x000118, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_Y) == 0x000120, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_Z) == 0x000128, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000148, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Normal_ReturnValue) == 0x000160, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_X_1) == 0x000178, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_Y_1) == 0x000180, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakVector_Z_1) == 0x000188, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, Temp_object_Variable) == 0x000190, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_MakeVector_ReturnValue_1) == 0x0001A0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_LineTraceSingle_OutHit) == 0x0001B8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_LineTraceSingle_ReturnValue) == 0x0002A0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Normal_ReturnValue_1) == 0x0002A8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x0002C0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_bBlockingHit) == 0x0002D8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002D9, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_Time) == 0x0002DC, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_Distance) == 0x0002E0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_Location) == 0x0002E8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_ImpactPoint) == 0x000300, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_Normal) == 0x000318, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_ImpactNormal) == 0x000330, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_PhysMat) == 0x000348, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_HitActor) == 0x000350, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_HitComponent) == 0x000358, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_HitBoneName) == 0x000360, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_BoneName) == 0x000368, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_HitItem) == 0x000370, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_ElementIndex) == 0x000374, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_FaceIndex) == 0x000378, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_TraceStart) == 0x000380, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_BreakHitResult_TraceEnd) == 0x000398, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Dot_VectorVector_ReturnValue) == 0x0003B0, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003B8, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003B9, "Member 'BP_PalIncidentNPCTalk_C_FindTalkCameraLocation_NoHitPlayer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetCharacterTalk
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetCharacterTalk final
{
public:
	class FName                                   CharacterID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTalkData;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Param_TalkData;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCManager*                         CallFunc_GetNPCManager_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetNPCCharacterTalkDT_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetCharacterTalk) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetCharacterTalk");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetCharacterTalk) == 0x000030, "Wrong size on BP_PalIncidentNPCTalk_C_GetCharacterTalk");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, CharacterID) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::CharacterID' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, HasTalkData) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, Param_TalkData) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::Param_TalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, CallFunc_GetNPCManager_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::CallFunc_GetNPCManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, CallFunc_GetNPCCharacterTalkDT_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::CallFunc_GetNPCCharacterTalkDT_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetCharacterTalk, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_GetCharacterTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetMultiTalk
// 0x0088 (0x0088 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetMultiTalk final
{
public:
	class FName                                   TalkId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTalkData;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Param_TalkData;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Param_TalkSequence;                                // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCManager*                         CallFunc_GetNPCManager_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTransientTalkCount_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MultiTalk_OrderByName_C*            K2Node_DynamicCast_AsBP_Multi_Talk_Order_by_Name;  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379E[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStartTalkSequence_Sequence;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetTalkData_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCManager*                         CallFunc_GetNPCManager_ReturnValue_1;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UPalNPCMultiTalkHandle>     CallFunc_GetNPCMultiTalkClassFromTalkId_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalNPCMultiTalkHandle*                 CallFunc_SpawnObject_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetMultiTalk) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetMultiTalk");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetMultiTalk) == 0x000088, "Wrong size on BP_PalIncidentNPCTalk_C_GetMultiTalk");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, TalkId) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::TalkId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, HasTalkData) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, Param_TalkData) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::Param_TalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, Param_TalkSequence) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::Param_TalkSequence' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetNPCManager_ReturnValue) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetNPCManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_IsTransientTalkCount_ReturnValue) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_IsTransientTalkCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, K2Node_DynamicCast_AsBP_Multi_Talk_Order_by_Name) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::K2Node_DynamicCast_AsBP_Multi_Talk_Order_by_Name' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetStartTalkSequence_Sequence) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetStartTalkSequence_Sequence' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetTalkData_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetTalkData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetNPCManager_ReturnValue_1) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetNPCManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_GetNPCMultiTalkClassFromTalkId_ReturnValue) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_GetNPCMultiTalkClassFromTalkId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetMultiTalk, CallFunc_SpawnObject_ReturnValue) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_GetMultiTalk::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetOneTalk
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetOneTalk final
{
public:
	class FName                                   TalkId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTalkData;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A0[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             OneTalkData;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCManager*                         CallFunc_GetNPCManager_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             CallFunc_GetNPCOneTalkDTFromTalkId_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetOneTalk) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetOneTalk");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetOneTalk) == 0x000030, "Wrong size on BP_PalIncidentNPCTalk_C_GetOneTalk");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, TalkId) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::TalkId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, HasTalkData) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, OneTalkData) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::OneTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, CallFunc_GetNPCManager_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::CallFunc_GetNPCManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, CallFunc_GetNPCOneTalkDTFromTalkId_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::CallFunc_GetNPCOneTalkDTFromTalkId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetOneTalk, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_GetOneTalk::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetTalkCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetTalkCharacter final
{
public:
	class APalCharacter*                          TalkCharacter;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOccuredObject_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetTalkCharacter) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetTalkCharacter");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetTalkCharacter) == 0x000020, "Wrong size on BP_PalIncidentNPCTalk_C_GetTalkCharacter");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkCharacter, TalkCharacter) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetTalkCharacter::TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkCharacter, CallFunc_GetOccuredObject_ReturnValue) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetTalkCharacter::CallFunc_GetOccuredObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkCharacter, K2Node_DynamicCast_AsPal_Character) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetTalkCharacter::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetTalkCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetTalkId
// 0x0020 (0x0020 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetTalkId final
{
public:
	class FName                                   TalkId;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetTalkId) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetTalkId");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetTalkId) == 0x000020, "Wrong size on BP_PalIncidentNPCTalk_C_GetTalkId");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkId, TalkId) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetTalkId::TalkId' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkId, CallFunc_GetDynamicParameter_ReturnValue) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetTalkId::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkId, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetTalkId::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkId, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetTalkId::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.GetTalkType
// 0x0020 (0x0020 - 0x0000)
struct BP_PalIncidentNPCTalk_C_GetTalkType final
{
public:
	EPalIncidentTalkType                          TalkType;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_GetTalkType) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_GetTalkType");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_GetTalkType) == 0x000020, "Wrong size on BP_PalIncidentNPCTalk_C_GetTalkType");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkType, TalkType) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_GetTalkType::TalkType' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkType, CallFunc_GetDynamicParameter_ReturnValue) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_GetTalkType::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkType, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_GetTalkType::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_GetTalkType, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_GetTalkType::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.HasRequestItem
// 0x0070 (0x0070 - 0x0000)
struct BP_PalIncidentNPCTalk_C_HasRequestItem final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   RequestItem;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPalNPCTalkSystemCustomFunctionInterface> Interface;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A3[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistItem_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_HasRequestItem) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_HasRequestItem");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_HasRequestItem) == 0x000070, "Wrong size on BP_PalIncidentNPCTalk_C_HasRequestItem");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, RequestItem) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::RequestItem' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, Interface) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::Interface' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, CallFunc_GetDynamicParameter_ReturnValue) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_HasRequestItem, CallFunc_IsExistItem_ReturnValue) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_HasRequestItem::CallFunc_IsExistItem_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Lottery Index by Weights
// 0x0088 (0x0088 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights final
{
public:
	TArray<double>                                Weights;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Param_Index;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LotteryWeight;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalWeight;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A4[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A5[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A6[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A7[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights) == 0x000088, "Wrong size on BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Weights) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Weights' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Param_Index) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, SelectedIndex) == 0x000014, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, LotteryWeight) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::LotteryWeight' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, TotalWeight) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::TotalWeight' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Temp_bool_True_if_break_was_hit_Variable) == 0x000034, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00005A, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00005B, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_RandomFloatInRange_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_Lottery_Index_by_Weights::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.LotteryItemAndNum
// 0x0130 (0x0130 - 0x0000)
struct BP_PalIncidentNPCTalk_C_LotteryItemAndNum final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FName                                   AddItemName1;                                      // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddItemNum1;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Weights;                                           // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           RowNames;                                          // 0x0048(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             FuncParameter;                                     // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AddItemNum;                                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AddItemName;                                       // 0x0064(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRange;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Unit;                                              // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMax;                                            // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMin;                                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinRange;                                          // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A8[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A9[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFPalPresentLotteryDataTableRow        CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AA[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00E0(0x0010)(ReferenceParm)
	struct FFPalPresentLotteryDataTableRow        CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00F0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AB[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AC[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AD[0x3];                                     // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_LotteryItemAndNum");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum) == 0x000130, "Wrong size on BP_PalIncidentNPCTalk_C_LotteryItemAndNum");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, AddItemName1) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::AddItemName1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, AddItemNum1) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::AddItemNum1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, SelectedIndex) == 0x000034, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, Weights) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::Weights' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, RowNames) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::RowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, FuncParameter) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::FuncParameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, AddItemNum) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::AddItemNum' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, AddItemName) == 0x000064, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::AddItemName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, MaxRange) == 0x00006C, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::MaxRange' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, Unit) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::Unit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, NumMax) == 0x000074, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::NumMax' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, NumMin) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::NumMin' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, MinRange) == 0x00007C, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::MinRange' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000084, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Multiply_IntInt_ReturnValue) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Divide_IntInt_ReturnValue) == 0x00008C, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Percent_IntInt_ReturnValue) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C8, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Max_ReturnValue) == 0x0000CC, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Max_ReturnValue_1) == 0x0000D0, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Max_ReturnValue_2) == 0x0000D4, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000E0, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000F0, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000110, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, Temp_int_Loop_Counter_Variable) == 0x000120, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_LotteryItemAndNum, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_PalIncidentNPCTalk_C_LotteryItemAndNum::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnItemShopClosed
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnItemShopClosed final
{
public:
	class UPalHUDDispatchParameterBase*           Param;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnItemShopClosed) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnItemShopClosed");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnItemShopClosed) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnItemShopClosed");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnItemShopClosed, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnItemShopClosed::Param' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnLoaded_4657C8C34673DDF607731EB504BB6BC2
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2, Loaded) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnLoaded_4657C8C34673DDF607731EB504BB6BC2::Loaded' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnLoaded_C353222C4BEC5555051A4EADFED69384
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384, Loaded) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnLoaded_C353222C4BEC5555051A4EADFED69384::Loaded' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnLoaded_F24E709545997EF6D7A638BDDC970200
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200 final
{
public:
	TSubclassOf<class UObject>                    Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200, Loaded) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnLoaded_F24E709545997EF6D7A638BDDC970200::Loaded' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnRegisteredItemShopEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent) == 0x000028, "Wrong size on BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredItemShopEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnRegisteredPalShopEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent) == 0x000030, "Wrong size on BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_OnRegisteredPalShopEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnShopUIClosed
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnShopUIClosed final
{
public:
	class UPalHUDDispatchParameterBase*           Param;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnShopUIClosed) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnShopUIClosed");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnShopUIClosed) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnShopUIClosed");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnShopUIClosed, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnShopUIClosed::Param' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnTalkCharacterBattleModeChanged
// 0x0010 (0x0010 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged final
{
public:
	bool                                          IsBattle;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37AF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged) == 0x000010, "Wrong size on BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged, IsBattle) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged::IsBattle' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged, CallFunc_GetHUDService_ReturnValue) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_OnTalkCharacterBattleModeChanged::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnTalkCharacterCaptured
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured final
{
public:
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured, CallFunc_GetHUDService_ReturnValue) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnTalkCharacterCaptured::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnTalkCharacterDead
// 0x0058 (0x0058 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnTalkCharacterDead final
{
public:
	struct FPalDeadInfo                           Info;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnTalkCharacterDead) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnTalkCharacterDead");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnTalkCharacterDead) == 0x000058, "Wrong size on BP_PalIncidentNPCTalk_C_OnTalkCharacterDead");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkCharacterDead, Info) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnTalkCharacterDead::Info' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkCharacterDead, CallFunc_GetHUDService_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_OnTalkCharacterDead::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OnTalkUIClosed
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OnTalkUIClosed final
{
public:
	class UPalHUDDispatchParameterBase*           Param;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OnTalkUIClosed) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OnTalkUIClosed");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OnTalkUIClosed) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OnTalkUIClosed");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OnTalkUIClosed, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OnTalkUIClosed::Param' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenItemShop_AsyncLoadAsset
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset final
{
public:
	class UPalHUDDispatchParameterBase*           HUDParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset, HUDParam) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_AsyncLoadAsset::HUDParam' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenItemShop_Buy
// 0x0058 (0x0058 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenItemShop_Buy final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalHUDDispatchParameterBase*           TempWidgetParam;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemShop_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenItemShop_Buy");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy) == 0x000058, "Wrong size on BP_PalIncidentNPCTalk_C_OpenItemShop_Buy");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, TempWidgetParam) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::TempWidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, CallFunc_IsValidItemShop_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::CallFunc_IsValidItemShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Buy, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Buy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenItemShop_Internal
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenItemShop_Internal final
{
public:
	class UPalVenderDataComponent*                VenderDataComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalShopBase*                           CallFunc_TryGetItemShop_OutShop;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetItemShop_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalUIDispatchParameter_ItemShop_C*  CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenItemShop_Internal");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal) == 0x000028, "Wrong size on BP_PalIncidentNPCTalk_C_OpenItemShop_Internal");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal, VenderDataComponent) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Internal::VenderDataComponent' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal, CallFunc_TryGetItemShop_OutShop) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Internal::CallFunc_TryGetItemShop_OutShop' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal, CallFunc_TryGetItemShop_ReturnValue) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Internal::CallFunc_TryGetItemShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal, CallFunc_GetHUDService_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Internal::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Internal, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Internal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenItemShop_Sell
// 0x0058 (0x0058 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenItemShop_Sell final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalHUDDispatchParameterBase*           TempWidgetParam;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidItemShop_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenItemShop_Sell");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell) == 0x000058, "Wrong size on BP_PalIncidentNPCTalk_C_OpenItemShop_Sell");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, TempWidgetParam) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::TempWidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, CallFunc_IsValidItemShop_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::CallFunc_IsValidItemShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenItemShop_Sell, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_PalIncidentNPCTalk_C_OpenItemShop_Sell::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenPalShop_AsyncLoadAsset
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset final
{
public:
	class UPalHUDDispatchParameterBase*           HUDParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset, HUDParam) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_AsyncLoadAsset::HUDParam' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenPalShop_Buy
// 0x0060 (0x0060 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenPalShop_Buy final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalHUDDispatchParameter_PalShop*       TempWidgetParam;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                WidgetParam;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPalShop_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenPalShop_Buy");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy) == 0x000060, "Wrong size on BP_PalIncidentNPCTalk_C_OpenPalShop_Buy");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, TempWidgetParam) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::TempWidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, WidgetParam) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::WidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Buy, CallFunc_IsValidPalShop_ReturnValue) == 0x000059, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Buy::CallFunc_IsValidPalShop_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenPalShop_Internal
// 0x0028 (0x0028 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenPalShop_Internal final
{
public:
	class UPalVenderDataComponent*                VenderDataComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalShopBase*                           CallFunc_TryGetPalShop_OutShop;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetPalShop_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PalUIDIspatchParameter_PalShop_C*   CallFunc_SpawnObject_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenPalShop_Internal");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal) == 0x000028, "Wrong size on BP_PalIncidentNPCTalk_C_OpenPalShop_Internal");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal, VenderDataComponent) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Internal::VenderDataComponent' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal, CallFunc_TryGetPalShop_OutShop) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Internal::CallFunc_TryGetPalShop_OutShop' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal, CallFunc_TryGetPalShop_ReturnValue) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Internal::CallFunc_TryGetPalShop_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal, CallFunc_GetHUDService_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Internal::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Internal, CallFunc_SpawnObject_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Internal::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.OpenPalShop_Sell
// 0x0060 (0x0060 - 0x0000)
struct BP_PalIncidentNPCTalk_C_OpenPalShop_Sell final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPalHUDDispatchParameter_PalShop*       TempWidgetParam;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                WidgetParam;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalVenderDataComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidPalShop_ReturnValue;               // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_OpenPalShop_Sell");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell) == 0x000060, "Wrong size on BP_PalIncidentNPCTalk_C_OpenPalShop_Sell");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, TempWidgetParam) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::TempWidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, WidgetParam) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::WidgetParam' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, CallFunc_GetComponentByClass_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_OpenPalShop_Sell, CallFunc_IsValidPalShop_ReturnValue) == 0x000059, "Member 'BP_PalIncidentNPCTalk_C_OpenPalShop_Sell::CallFunc_IsValidPalShop_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.RequestItem
// 0x0140 (0x0140 - 0x0000)
struct BP_PalIncidentNPCTalk_C_RequestItem final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         SelectedIndex;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B2[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                Weights;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             DataTable;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           RowNames;                                          // 0x0048(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IPalNPCTalkSystemCustomFunctionInterface> Interface;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B3[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B4[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPalRequestItemLotteryDataTableRow    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0088(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B5[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A8(0x0018)()
	class FText                                   CallFunc_GetItemName_outName;                      // 0x00C0(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B6[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Lottery_Index_by_Weights_Index;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00E0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFPalRequestItemLotteryDataTableRow    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00F8(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B7[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B8[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue_1;        // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37B9[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk_1; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_RequestItem) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_RequestItem");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_RequestItem) == 0x000140, "Wrong size on BP_PalIncidentNPCTalk_C_RequestItem");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, SelectedIndex) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, Weights) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::Weights' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, DataTable) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::DataTable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, RowNames) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::RowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, Interface) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::Interface' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDynamicParameter_ReturnValue) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A8, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetItemName_outName) == 0x0000C0, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Lottery_Index_by_Weights_Index) == 0x0000DC, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Lottery_Index_by_Weights_Index' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000E0, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000F8, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000110, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_Array_Add_ReturnValue) == 0x00011C, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_GetDynamicParameter_ReturnValue_1) == 0x000120, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_GetDynamicParameter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk_1) == 0x000130, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_RequestItem, K2Node_DynamicCast_bSuccess_1) == 0x000138, "Member 'BP_PalIncidentNPCTalk_C_RequestItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.ReturnToSpawnedPoint
// 0x0048 (0x0048 - 0x0000)
struct BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_Visitor_C*          K2Node_DynamicCast_AsBP_NPCAIController_Visitor;   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint) == 0x000048, "Wrong size on BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint, K2Node_DynamicCast_AsBP_NPCAIController_Visitor) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint::K2Node_DynamicCast_AsBP_NPCAIController_Visitor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.ReturnToSpawnedPointSquad
// 0x00F0 (0x00F0 - 0x0000)
struct BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BA[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalAIController*                       K2Node_DynamicCast_AsPal_AIController;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalSquad*                              CallFunc_GetSquad_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalInstanceID>                 CallFunc_GetMemberID_OutList;                      // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BC[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         CallFunc_Array_Get_Item;                           // 0x0080(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BD[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandleReference* CallFunc_GetIndividualHandleReference_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BE[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37BF[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_NPCAIController_Visitor_C*          K2Node_DynamicCast_AsBP_NPCAIController_Visitor;   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad) == 0x0000F0, "Wrong size on BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetCharacterManager_ReturnValue) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetController_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, K2Node_DynamicCast_AsPal_AIController) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::K2Node_DynamicCast_AsPal_AIController' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetSquad_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetMemberID_OutList) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetMemberID_OutList' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetIndividualHandleReference_ReturnValue) == 0x0000B8, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetIndividualHandleReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_TryGetIndividualActor_ReturnValue) == 0x0000C8, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, CallFunc_GetController_ReturnValue_1) == 0x0000D8, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, K2Node_DynamicCast_AsBP_NPCAIController_Visitor) == 0x0000E0, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::K2Node_DynamicCast_AsBP_NPCAIController_Visitor' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BP_PalIncidentNPCTalk_C_ReturnToSpawnedPointSquad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Set Disable Movement For Target
// 0x0050 (0x0050 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target final
{
public:
	bool                                          IsDisable;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DisableFlagName;                                   // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          TargetCharacter;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target) == 0x000050, "Wrong size on BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, IsDisable) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::IsDisable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, DisableFlagName) == 0x000004, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::DisableFlagName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, TargetCharacter) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, CallFunc_GetDynamicParameter_ReturnValue) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, K2Node_DynamicCast_AsPal_Character) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_Set_Disable_Movement_For_Target::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Setup
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Setup final
{
public:
	bool                                          Talkable;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsBattleMode)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBattleMode_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C5[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C6[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameterTalk*       K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCharacterTalk_HasTalkData;             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C7[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetCharacterTalk_TalkData;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMultiTalk_HasTalkData;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C8[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetMultiTalk_TalkData;                    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetMultiTalk_TalkSequence;                // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOneTalk_HasTalkData;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C9[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             CallFunc_GetOneTalk_OneTalkData;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Setup) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_Setup");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Setup) == 0x0000B0, "Wrong size on BP_PalIncidentNPCTalk_C_Setup");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, Talkable) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Setup::Talkable' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, Character) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_Setup::Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_IsDead_ReturnValue) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetBattleMode_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetBattleMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetDynamicParameter_ReturnValue) == 0x000060, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_DynamicCast_AsPal_Incident_Dynamic_Parameter_Talk' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'BP_PalIncidentNPCTalk_C_Setup::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetCharacterTalk_HasTalkData) == 0x000072, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetCharacterTalk_HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetCharacterTalk_TalkData) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetCharacterTalk_TalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetMultiTalk_HasTalkData) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetMultiTalk_HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetMultiTalk_TalkData) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetMultiTalk_TalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetMultiTalk_TalkSequence) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetMultiTalk_TalkSequence' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetOneTalk_HasTalkData) == 0x0000A0, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetOneTalk_HasTalkData' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Setup, CallFunc_GetOneTalk_OneTalkData) == 0x0000A8, "Member 'BP_PalIncidentNPCTalk_C_Setup::CallFunc_GetOneTalk_OneTalkData' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.SpawnItem
// 0x0170 (0x0170 - 0x0000)
struct BP_PalIncidentNPCTalk_C_SpawnItem final
{
public:
	struct FPalNPCTalkSystemCustomFunctionParameters Param;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         SelectedIndex;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CA[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                Weights;                                           // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           RowNames;                                          // 0x0040(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             FuncParameter;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         AddItemNum;                                        // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AddItemName;                                       // 0x005C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxRange;                                          // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Unit;                                              // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMax;                                            // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumMin;                                            // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinRange;                                          // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_LotteryItemAndNum_AddItemName1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_LotteryItemAndNum_AddItemNum1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CB[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CC[0x8];                                     // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_SpawnItem) == 0x000010, "Wrong alignment on BP_PalIncidentNPCTalk_C_SpawnItem");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_SpawnItem) == 0x000170, "Wrong size on BP_PalIncidentNPCTalk_C_SpawnItem");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, Param) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::Param' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, SelectedIndex) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::SelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, Weights) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::Weights' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, RowNames) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::RowNames' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, FuncParameter) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::FuncParameter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, AddItemNum) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::AddItemNum' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, AddItemName) == 0x00005C, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::AddItemName' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, MaxRange) == 0x000064, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::MaxRange' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, Unit) == 0x000068, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::Unit' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, NumMax) == 0x00006C, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::NumMax' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, NumMin) == 0x000070, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::NumMin' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, MinRange) == 0x000074, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::MinRange' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_LotteryItemAndNum_AddItemName1) == 0x000078, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_LotteryItemAndNum_AddItemName1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_LotteryItemAndNum_AddItemNum1) == 0x000080, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_LotteryItemAndNum_AddItemNum1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000084, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000088, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000090, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000110, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_BreakTransform_Location) == 0x000128, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_BreakTransform_Rotation) == 0x000140, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_SpawnItem, CallFunc_BreakTransform_Scale) == 0x000158, "Member 'BP_PalIncidentNPCTalk_C_SpawnItem::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Terminate
// 0x0003 (0x0003 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Terminate final
{
public:
	bool                                          CallFunc_IsInitialized_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Terminate) == 0x000001, "Wrong alignment on BP_PalIncidentNPCTalk_C_Terminate");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Terminate) == 0x000003, "Wrong size on BP_PalIncidentNPCTalk_C_Terminate");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Terminate, CallFunc_IsInitialized_ReturnValue) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Terminate::CallFunc_IsInitialized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Terminate, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PalIncidentNPCTalk_C_Terminate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Terminate, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PalIncidentNPCTalk_C_Terminate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Tick
// 0x0004 (0x0004 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Tick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Tick) == 0x000004, "Wrong alignment on BP_PalIncidentNPCTalk_C_Tick");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Tick) == 0x000004, "Wrong size on BP_PalIncidentNPCTalk_C_Tick");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick, DeltaTime) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Tick::DeltaTime' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Tick_DelayFinish
// 0x0060 (0x0060 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Tick_DelayFinish final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIncidentDynamicParameter*           CallFunc_GetDynamicParameter_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNPCInteractionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CD[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetTalkCharacter_TalkCharacter_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalNetworkTransmitter*                 CallFunc_GetNetworkTransmitter_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalNetworkCharacterComponent*          CallFunc_GetCharacter_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_Tick_DelayFinish");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish) == 0x000060, "Wrong size on BP_PalIncidentNPCTalk_C_Tick_DelayFinish");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, DeltaTime) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetTalkCharacter_TalkCharacter) == 0x000008, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetTalkCharacter_TalkCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetDynamicParameter_ReturnValue) == 0x000010, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetDynamicParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, K2Node_DynamicCast_AsPal_Player_Character) == 0x000028, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetTalkCharacter_TalkCharacter_1) == 0x000038, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetTalkCharacter_TalkCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetNetworkTransmitter_ReturnValue) == 0x000040, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetNetworkTransmitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GetCharacter_ReturnValue) == 0x000048, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GetCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_DelayFinish, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_PalIncidentNPCTalk_C_Tick_DelayFinish::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_PalIncidentNPCTalk.BP_PalIncidentNPCTalk_C.Tick_Talking
// 0x0008 (0x0008 - 0x0000)
struct BP_PalIncidentNPCTalk_C_Tick_Talking final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalIncidentNPCTalk_C_Tick_Talking) == 0x000008, "Wrong alignment on BP_PalIncidentNPCTalk_C_Tick_Talking");
static_assert(sizeof(BP_PalIncidentNPCTalk_C_Tick_Talking) == 0x000008, "Wrong size on BP_PalIncidentNPCTalk_C_Tick_Talking");
static_assert(offsetof(BP_PalIncidentNPCTalk_C_Tick_Talking, DeltaTime) == 0x000000, "Member 'BP_PalIncidentNPCTalk_C_Tick_Talking::DeltaTime' has a wrong offset!");

}

