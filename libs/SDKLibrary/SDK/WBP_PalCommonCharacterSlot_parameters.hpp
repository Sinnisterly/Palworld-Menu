#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalCommonCharacterSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.ExecuteUbergraph_WBP_PalCommonCharacterSlot
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double NowTimer)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4790[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterSlot* TargetSlot)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int64 NowHP, int64 NowMaxHP)>  K2Node_CreateDelegate_OutputDelegate_4;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsWorking)>               K2Node_CreateDelegate_OutputDelegate_5;            // 0x0078(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsBattleMode)>            K2Node_CreateDelegate_OutputDelegate_6;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0098(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsBoss, bool IsRare)>     K2Node_CreateDelegate_OutputDelegate_11;           // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot) == 0x000008, "Wrong alignment on WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot) == 0x0000E8, "Wrong size on WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, EntryPoint) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, CallFunc_PlayAnimation_ReturnValue_2) == 0x000028, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, CallFunc_PlayAnimation_ReturnValue_3) == 0x000030, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_3) == 0x000058, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_4) == 0x000068, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_5) == 0x000078, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_6) == 0x000088, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_7) == 0x000098, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000A8, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_9) == 0x0000B8, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000C8, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000D8, "Member 'WBP_PalCommonCharacterSlot_C_ExecuteUbergraph_WBP_PalCommonCharacterSlot::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.On Set Rarity Binded
// 0x000C (0x000C - 0x0000)
struct WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded final
{
public:
	bool                                          IsBoss;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRare;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded) == 0x000001, "Wrong alignment on WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded) == 0x00000C, "Wrong size on WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, IsBoss) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::IsBoss' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, IsRare) == 0x000001, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::IsRare' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_bool_Variable) == 0x000002, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_byte_Variable) == 0x000005, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_bool_Variable_1) == 0x000007, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, K2Node_Select_Default) == 0x000008, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_byte_Variable_2) == 0x000009, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, Temp_byte_Variable_3) == 0x00000A, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded, K2Node_Select_Default_1) == 0x00000B, "Member 'WBP_PalCommonCharacterSlot_C_On_Set_Rarity_Binded::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.OnNotifyBattleModeChanged_Binded
// 0x0001 (0x0001 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded final
{
public:
	bool                                          IsBattleMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded) == 0x000001, "Wrong alignment on WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded) == 0x000001, "Wrong size on WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded, IsBattleMode) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_OnNotifyBattleModeChanged_Binded::IsBattleMode' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.OnNotifyWorkDetail_Binded
// 0x0001 (0x0001 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded final
{
public:
	bool                                          IsWorking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded) == 0x000001, "Wrong alignment on WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded) == 0x000001, "Wrong size on WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded, IsWorking) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_OnNotifyWorkDetail_Binded::IsWorking' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.OnUpdateHP_Binded
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded final
{
public:
	int64                                         NowHP;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         NowMaxHP;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_Int64ToDouble_ReturnValue_1;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4791[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4792[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded) == 0x000008, "Wrong alignment on WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded) == 0x0000C8, "Wrong size on WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, NowHP) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::NowHP' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, NowMaxHP) == 0x000008, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::NowMaxHP' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Conv_Int64ToDouble_ReturnValue) == 0x000010, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Conv_Int64ToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Conv_Int64ToDouble_ReturnValue_1) == 0x000018, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Conv_Int64ToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000029, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00002A, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00002B, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, K2Node_MakeArray_Array) == 0x000098, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000C0, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x0000C1, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateHP_Binded::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.OnUpdateReviveTimer_Binded
// 0x0140 (0x0140 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded final
{
public:
	double                                        NowTimer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4793[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4794[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
	float                                         CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReviveTimer_ImplicitCast; // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4795[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_A_ImplicitCast;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded) == 0x000008, "Wrong alignment on WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded) == 0x000140, "Wrong size on WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, NowTimer) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::NowTimer' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReturnValue) == 0x00000C, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000020, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000088, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000090, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, K2Node_MakeArray_Array) == 0x0000F8, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Format_ReturnValue) == 0x000108, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReviveTimer_ImplicitCast) == 0x000120, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_ConvertReviveTimerToUIDisplayRemainReviveTime_ReviveTimer_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Percent_FloatFloat_A_ImplicitCast) == 0x000128, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Percent_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000130, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000138, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateReviveTimer_Binded::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.OnUpdateSlot_Binded
// 0x0048 (0x0048 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded final
{
public:
	class UPalIndividualCharacterSlot*            Param_TargetSlot;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetHandle_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4796[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4797[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFixedPoint64                          CallFunc_GetHP_ReturnValue;                        // 0x0028(0x0008)(NoDestructor)
	int64                                         CallFunc_Convert_FixedPoint64ToInt64_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFixedPoint64                          CallFunc_GetMaxHP_withBuff_ReturnValue;            // 0x0038(0x0008)(NoDestructor)
	int64                                         CallFunc_Convert_FixedPoint64ToInt64_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded) == 0x000008, "Wrong alignment on WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded) == 0x000048, "Wrong size on WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, Param_TargetSlot) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::Param_TargetSlot' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_GetHandle_ReturnValue) == 0x000008, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_GetHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000018, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_GetHP_ReturnValue) == 0x000028, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_GetHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_Convert_FixedPoint64ToInt64_ReturnValue) == 0x000030, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_Convert_FixedPoint64ToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_GetMaxHP_withBuff_ReturnValue) == 0x000038, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_GetMaxHP_withBuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded, CallFunc_Convert_FixedPoint64ToInt64_ReturnValue_1) == 0x000040, "Member 'WBP_PalCommonCharacterSlot_C_OnUpdateSlot_Binded::CallFunc_Convert_FixedPoint64ToInt64_ReturnValue_1' has a wrong offset!");

// Function WBP_PalCommonCharacterSlot.WBP_PalCommonCharacterSlot_C.RegisterCharacterIconWidget
// 0x0008 (0x0008 - 0x0000)
struct WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget final
{
public:
	class UWBP_PalCharacterIconBase_C*            IconWidget;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget) == 0x000008, "Wrong alignment on WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget");
static_assert(sizeof(WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget) == 0x000008, "Wrong size on WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget");
static_assert(offsetof(WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget, IconWidget) == 0x000000, "Member 'WBP_PalCommonCharacterSlot_C_RegisterCharacterIconWidget::IconWidget' has a wrong offset!");

}

