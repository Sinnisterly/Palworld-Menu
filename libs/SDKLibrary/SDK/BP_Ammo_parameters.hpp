#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Ammo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Ammo.BP_Ammo_C.ExecuteUbergraph_BP_Ammo
// 0x0158 (0x0158 - 0x0000)
struct BP_Ammo_C_ExecuteUbergraph_BP_Ammo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4018[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue_1;           // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo) == 0x000008, "Wrong alignment on BP_Ammo_C_ExecuteUbergraph_BP_Ammo");
static_assert(sizeof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo) == 0x000158, "Wrong size on BP_Ammo_C_ExecuteUbergraph_BP_Ammo");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, EntryPoint) == 0x000000, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_GetActorRightVector_ReturnValue) == 0x000008, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000028, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_GetActorUpVector_ReturnValue) == 0x000048, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_GetActorForwardVector_ReturnValue) == 0x000060, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000078, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000090, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000B0, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_GetActorUpVector_ReturnValue_1) == 0x0000C8, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_GetActorUpVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_GetActorRightVector_ReturnValue_1) == 0x0000E0, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000F8, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000110, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000128, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Ammo_C_ExecuteUbergraph_BP_Ammo, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000140, "Member 'BP_Ammo_C_ExecuteUbergraph_BP_Ammo::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

}

