#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_Warning_PointWalk

#include "Basic.hpp"

#include "BP_AIAction_Warning_PointWalk_classes.hpp"
#include "BP_AIAction_Warning_PointWalk_parameters.hpp"


namespace SDK
{

// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionAbort
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionAbort(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionAbort");

	Params::BP_AIAction_Warning_PointWalk_C_ActionAbort Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPawnActionResult                       WithResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionFinished");

	Params::BP_AIAction_Warning_PointWalk_C_ActionFinished Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.WithResult = WithResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionTick(class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionTick");

	Params::BP_AIAction_Warning_PointWalk_C_ActionTick Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.CancelTurnAction
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::CancelTurnAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "CancelTurnAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ExecuteUbergraph_BP_AIAction_Warning_PointWalk
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ExecuteUbergraph_BP_AIAction_Warning_PointWalk(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ExecuteUbergraph_BP_AIAction_Warning_PointWalk");

	Params::BP_AIAction_Warning_PointWalk_C_ExecuteUbergraph_BP_AIAction_Warning_PointWalk Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.PlayActionTurnIfNoneAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::PlayActionTurnIfNoneAction(const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "PlayActionTurnIfNoneAction");

	Params::BP_AIAction_Warning_PointWalk_C_PlayActionTurnIfNoneAction Parms{};

	Parms.Direction = std::move(Direction);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.Setup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          AttentionLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::Setup(const struct FVector& AttentionLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "Setup");

	Params::BP_AIAction_Warning_PointWalk_C_Setup Parms{};

	Parms.AttentionLocation = std::move(AttentionLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.StartJump
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::StartJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "StartJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.TurnL45
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::TurnL45()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "TurnL45");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.TurnMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::TurnMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "TurnMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.TurnR45
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::TurnR45()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "TurnR45");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.UpdateMoveGoal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_Warning_PointWalk_C::UpdateMoveGoal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "UpdateMoveGoal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionPause
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionPause(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionPause");

	Params::BP_AIAction_Warning_PointWalk_C_ActionPause Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionResume
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionResume(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionResume");

	Params::BP_AIAction_Warning_PointWalk_C_ActionResume Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.ActionStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::ActionStart(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "ActionStart");

	Params::BP_AIAction_Warning_PointWalk_C_ActionStart Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_Warning_PointWalk.BP_AIAction_Warning_PointWalk_C.SoundEvent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          EmitLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_Warning_PointWalk_C::SoundEvent(const struct FVector& EmitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_Warning_PointWalk_C", "SoundEvent");

	Params::BP_AIAction_Warning_PointWalk_C_SoundEvent Parms{};

	Parms.EmitLocation = std::move(EmitLocation);

	UObject::ProcessEvent(Func, &Parms);
}

}

