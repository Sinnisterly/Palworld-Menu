#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalBossBattleSequencer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PalBossBattleSequencer.BP_PalBossBattleSequencer_C.ExecuteUbergraph_BP_PalBossBattleSequencer
// 0x0008 (0x0008 - 0x0000)
struct BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer) == 0x000004, "Wrong alignment on BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer");
static_assert(sizeof(BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer) == 0x000008, "Wrong size on BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer");
static_assert(offsetof(BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer, EntryPoint) == 0x000000, "Member 'BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer, K2Node_Event_DeltaTime) == 0x000004, "Member 'BP_PalBossBattleSequencer_C_ExecuteUbergraph_BP_PalBossBattleSequencer::K2Node_Event_DeltaTime' has a wrong offset!");

// Function BP_PalBossBattleSequencer.BP_PalBossBattleSequencer_C.Tick_ForBP
// 0x0004 (0x0004 - 0x0000)
struct BP_PalBossBattleSequencer_C_Tick_ForBP final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalBossBattleSequencer_C_Tick_ForBP) == 0x000004, "Wrong alignment on BP_PalBossBattleSequencer_C_Tick_ForBP");
static_assert(sizeof(BP_PalBossBattleSequencer_C_Tick_ForBP) == 0x000004, "Wrong size on BP_PalBossBattleSequencer_C_Tick_ForBP");
static_assert(offsetof(BP_PalBossBattleSequencer_C_Tick_ForBP, DeltaTime) == 0x000000, "Member 'BP_PalBossBattleSequencer_C_Tick_ForBP::DeltaTime' has a wrong offset!");

}

