#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharaCre_ColorSelect_Free

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharaCre_ColorSelect_Free.WBP_CharaCre_ColorSelect_Free_C
// 0x00A0 (0x0318 - 0x0278)
class UWBP_CharaCre_ColorSelect_Free_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnalogSlider*                          AnalogSlider_H;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          AnalogSlider_S;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAnalogSlider*                          AnalogSlider_V;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_H;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_S;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_V;                                          // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_293;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharaCre_ColorSelect_sq_C*         WBP_CharaCre_ColorSelect_sq_Custom;                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharaCre_SliderBase_C*             WBP_CharaCre_SliderBase_H;                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharaCre_SliderBase_C*             WBP_CharaCre_SliderBase_S;                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CharaCre_SliderBase_C*             WBP_CharaCre_SliderBase_V;                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SGradientMaterial;                                 // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               VGradientMaterial;                                 // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnColorChanged;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnNotifyCustomColorClicked;                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ApplyColorSetting(bool IsTriggerEvent);
	void BndEvt__WBP_CharaCre_ColorSelect_Free_AnalogSlider_H_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__WBP_CharaCre_ColorSelect_Free_AnalogSlider_S_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__WBP_CharaCre_ColorSelect_Free_AnalogSlider_V_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__WBP_CharaCre_ColorSelect_Free_WBP_CharaCre_ColorSelect_sq_Custom_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature(class UWBP_CharaCre_ColorSelect_sq_C* Widget);
	void Construct();
	void ExecuteUbergraph_WBP_CharaCre_ColorSelect_Free(int32 EntryPoint);
	void OnColorChanged__DelegateSignature(const struct FLinearColor& HSV);
	void OnInitialized();
	void OnNotifyCustomColorClicked__DelegateSignature();
	void Set_Enable_Slider(bool IsEnable);
	void SetColor(const struct FLinearColor& NewColor);
	void SetColorForce(const struct FLinearColor& NewColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharaCre_ColorSelect_Free_C">();
	}
	static class UWBP_CharaCre_ColorSelect_Free_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharaCre_ColorSelect_Free_C>();
	}
};
static_assert(alignof(UWBP_CharaCre_ColorSelect_Free_C) == 0x000008, "Wrong alignment on UWBP_CharaCre_ColorSelect_Free_C");
static_assert(sizeof(UWBP_CharaCre_ColorSelect_Free_C) == 0x000318, "Wrong size on UWBP_CharaCre_ColorSelect_Free_C");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, UberGraphFrame) == 0x000278, "Member 'UWBP_CharaCre_ColorSelect_Free_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, AnalogSlider_H) == 0x000280, "Member 'UWBP_CharaCre_ColorSelect_Free_C::AnalogSlider_H' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, AnalogSlider_S) == 0x000288, "Member 'UWBP_CharaCre_ColorSelect_Free_C::AnalogSlider_S' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, AnalogSlider_V) == 0x000290, "Member 'UWBP_CharaCre_ColorSelect_Free_C::AnalogSlider_V' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Canvas_H) == 0x000298, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Canvas_H' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Canvas_S) == 0x0002A0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Canvas_S' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Canvas_V) == 0x0002A8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Canvas_V' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Image) == 0x0002B0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Image_1) == 0x0002B8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, Image_293) == 0x0002C0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::Image_293' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, WBP_CharaCre_ColorSelect_sq_Custom) == 0x0002C8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::WBP_CharaCre_ColorSelect_sq_Custom' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, WBP_CharaCre_SliderBase_H) == 0x0002D0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::WBP_CharaCre_SliderBase_H' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, WBP_CharaCre_SliderBase_S) == 0x0002D8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::WBP_CharaCre_SliderBase_S' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, WBP_CharaCre_SliderBase_V) == 0x0002E0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::WBP_CharaCre_SliderBase_V' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, SGradientMaterial) == 0x0002E8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::SGradientMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, VGradientMaterial) == 0x0002F0, "Member 'UWBP_CharaCre_ColorSelect_Free_C::VGradientMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, OnColorChanged) == 0x0002F8, "Member 'UWBP_CharaCre_ColorSelect_Free_C::OnColorChanged' has a wrong offset!");
static_assert(offsetof(UWBP_CharaCre_ColorSelect_Free_C, OnNotifyCustomColorClicked) == 0x000308, "Member 'UWBP_CharaCre_ColorSelect_Free_C::OnNotifyCustomColorClicked' has a wrong offset!");

}

