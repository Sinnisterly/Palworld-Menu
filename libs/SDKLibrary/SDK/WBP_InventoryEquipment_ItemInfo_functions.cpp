#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_ItemInfo

#include "Basic.hpp"

#include "WBP_InventoryEquipment_ItemInfo_classes.hpp"
#include "WBP_InventoryEquipment_ItemInfo_parameters.hpp"


namespace SDK
{

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Change Display Mode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_PalUIItemInfoWindowDIsplayType        DisplayType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Change_Display_Mode(E_PalUIItemInfoWindowDIsplayType DisplayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Change Display Mode");

	Params::WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode Parms{};

	Parms.DisplayType = DisplayType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.ConvertPassiveSkillNameToText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     PassiveSkillNameArray                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FText>                     OutTextArray                                           (Parm, OutParm)

void UWBP_InventoryEquipment_ItemInfo_C::ConvertPassiveSkillNameToText(TArray<class FName>& PassiveSkillNameArray, TArray<class FText>* OutTextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "ConvertPassiveSkillNameToText");

	Params::WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText Parms{};

	Parms.PassiveSkillNameArray = std::move(PassiveSkillNameArray);

	UObject::ProcessEvent(Func, &Parms);

	PassiveSkillNameArray = std::move(Parms.PassiveSkillNameArray);

	if (OutTextArray != nullptr)
		*OutTextArray = std::move(Parms.OutTextArray);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo");

	Params::WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Get Display Technology Category Name
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             TechnologyName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             CategoryText                                           (Parm, OutParm)

void UWBP_InventoryEquipment_ItemInfo_C::Get_Display_Technology_Category_Name(class FName TechnologyName, class FText* CategoryText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Get Display Technology Category Name");

	Params::WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name Parms{};

	Parms.TechnologyName = TechnologyName;

	UObject::ProcessEvent(Func, &Parms);

	if (CategoryText != nullptr)
		*CategoryText = std::move(Parms.CategoryText);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.GetItemRegeneInfo
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRegene                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPalStatusEffectFoodDataRow      FoodInfo                                               (Parm, OutParm)

void UWBP_InventoryEquipment_ItemInfo_C::GetItemRegeneInfo(class FName ItemId, bool* IsRegene, struct FPalStatusEffectFoodDataRow* FoodInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "GetItemRegeneInfo");

	Params::WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRegene != nullptr)
		*IsRegene = Parms.IsRegene;

	if (FoodInfo != nullptr)
		*FoodInfo = std::move(Parms.FoodInfo);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.HideAdditionalText
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::HideAdditionalText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "HideAdditionalText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.HideMainParameter
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::HideMainParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "HideMainParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.HideSubParameter
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::HideSubParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "HideSubParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Is Equipable Item
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPalItemSlot*                     Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEquipable                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Is_Equipable_Item(class UPalItemSlot* Param_Slot, bool* IsEquipable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Is Equipable Item");

	Params::WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item Parms{};

	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (IsEquipable != nullptr)
		*IsEquipable = Parms.IsEquipable;
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.OnInitialized
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::OnInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "OnInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.OnInputMethodChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonInputType                        bNewInputType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::OnInputMethodChanged(ECommonInputType bNewInputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "OnInputMethodChanged");

	Params::WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged Parms{};

	Parms.bNewInputType = bNewInputType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.OnUpdateTargetSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalItemSlot*                     Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::OnUpdateTargetSlot(class UPalItemSlot* Param_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "OnUpdateTargetSlot");

	Params::WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot Parms{};

	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Main Param Text
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Main_Param_Text(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Main Param Text");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Main Param Value
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Main_Param_Value(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Main Param Value");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Pal Gear Icon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Pal_Gear_Icon(class FName ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Pal Gear Icon");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon Parms{};

	Parms.ItemId = ItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Simple Additional Text
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Simple_Additional_Text(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Simple Additional Text");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Regene
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalStatusEffectFoodDataRow      FoodData                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Sub_Param_Regene(const struct FPalStatusEffectFoodDataRow& FoodData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Sub Param Regene");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene Parms{};

	Parms.FoodData = std::move(FoodData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Text
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Sub_Param_Text(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Sub Param Text");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Value
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Set_Sub_Param_Value(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Set Sub Param Value");

	Params::WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetImportanyAdditionalText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     TextArray                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_InventoryEquipment_ItemInfo_C::SetImportanyAdditionalText(TArray<class FText>& TextArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetImportanyAdditionalText");

	Params::WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText Parms{};

	Parms.TextArray = std::move(TextArray);

	UObject::ProcessEvent(Func, &Parms);

	TextArray = std::move(Parms.TextArray);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup by Technology Name
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TechnologyName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsMasked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       IconTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_by_Technology_Name(class FName TechnologyName, bool IsMasked, class UTexture2D* IconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup by Technology Name");

	Params::WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name Parms{};

	Parms.TechnologyName = TechnologyName;
	Parms.IsMasked = IsMasked;
	Parms.IconTexture = IconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Icon
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StaticItemId                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_Item_Icon(const class FName StaticItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup Item Icon");

	Params::WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon Parms{};

	Parms.StaticItemId = StaticItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Name
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_Item_Name()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup Item Name");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Weight
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_Item_Weight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup Item Weight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Parameter
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StaticItemId                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_Parameter(const class FName StaticItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup Parameter");

	Params::WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter Parms{};

	Parms.StaticItemId = StaticItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Tech Mat Details
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalTechnologyRecipeUnlockDataTableRowTechData                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsMasked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::Setup_Tech_Mat_Details(const struct FPalTechnologyRecipeUnlockDataTableRow& TechData, bool IsMasked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "Setup Tech Mat Details");

	Params::WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details Parms{};

	Parms.TechData = std::move(TechData);
	Parms.IsMasked = IsMasked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupByDisplayInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalUICommonItemInfoDisplayData  DisplayInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)

void UWBP_InventoryEquipment_ItemInfo_C::SetupByDisplayInfo(const struct FPalUICommonItemInfoDisplayData& DisplayInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupByDisplayInfo");

	Params::WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo Parms{};

	Parms.DisplayInfo = std::move(DisplayInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemDescription
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupItemDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupItemDescription");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemDurability
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupItemDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupItemDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemNum
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupItemNum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupItemNum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemRarity
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupItemRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupItemRarity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupKeyGuide
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupKeyGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupKeyGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupPrice
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupPrice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupPrice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupSkillInfo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupSkillInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupSkillInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupTechDetails
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::SetupTechDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupTechDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupUseableKeyGuide_Internal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StaticItemId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_InventoryEquipment_ItemInfo_C::SetupUseableKeyGuide_Internal(class FName StaticItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "SetupUseableKeyGuide_Internal");

	Params::WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal Parms{};

	Parms.StaticItemId = StaticItemId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.UnbindEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_InventoryEquipment_ItemInfo_C::UnbindEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_InventoryEquipment_ItemInfo_C", "UnbindEvent");

	UObject::ProcessEvent(Func, nullptr);
}

}

