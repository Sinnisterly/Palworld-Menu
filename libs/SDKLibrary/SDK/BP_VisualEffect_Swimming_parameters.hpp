#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VisualEffect_Swimming

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create NS Dive
// 0x01B0 (0x01B0 - 0x0000)
struct BP_VisualEffect_Swimming_C_Create_NS_Dive final
{
public:
	double                                        MaxScaleLengthToBottom;                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxScaleFallingVelocity;                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectScale;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWaterDepth_Length;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetOwnerHalfHeight_HalfHeight;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWaterDepth_Length_1;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetVelocityLengthXY_Velocity;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4704[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Create_NS_Dive) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Create_NS_Dive");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Create_NS_Dive) == 0x0001B0, "Wrong size on BP_VisualEffect_Swimming_C_Create_NS_Dive");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, MaxScaleLengthToBottom) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::MaxScaleLengthToBottom' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, MaxScaleFallingVelocity) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::MaxScaleFallingVelocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, EffectScale) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::EffectScale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_GetWaterDepth_Length) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_GetWaterDepth_Length' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_GetOwnerHalfHeight_HalfHeight) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_GetOwnerHalfHeight_HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_FMax_ReturnValue) == 0x000040, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_GetWaterDepth_Length_1) == 0x000048, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_GetWaterDepth_Length_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000058, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_FClamp_ReturnValue_1) == 0x000070, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakVector_X) == 0x000078, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakVector_Y) == 0x000080, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakVector_Z) == 0x000088, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_GetVelocityLengthXY_Velocity) == 0x000090, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_GetVelocityLengthXY_Velocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_FClamp_ReturnValue_2) == 0x0000C0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000D0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Get_Effect_Transform_NewParam) == 0x0000E0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000140, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakTransform_Location) == 0x000148, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakTransform_Rotation) == 0x000160, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_BreakTransform_Scale) == 0x000178, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000190, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000198, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00019C, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Dive, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x0001A0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Dive::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create NS Splash Body
// 0x00E0 (0x00E0 - 0x0000)
struct BP_VisualEffect_Swimming_C_Create_NS_Splash_Body final
{
public:
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4705[0xF];                                     // 0x00B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue;     // 0x00C0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Create_NS_Splash_Body");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body) == 0x0000E0, "Wrong size on BP_VisualEffect_Swimming_C_Create_NS_Splash_Body");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_Get_Effect_Transform_NewParam) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000A8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Splash_Body, CallFunc_Conv_RotatorToQuaternion_ReturnValue) == 0x0000C0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Splash_Body::CallFunc_Conv_RotatorToQuaternion_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_InWater
// 0x00E0 (0x00E0 - 0x0000)
struct BP_VisualEffect_Swimming_C_Create_NS_InWater final
{
public:
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue;     // 0x00B0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Create_NS_InWater) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Create_NS_InWater");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Create_NS_InWater) == 0x0000E0, "Wrong size on BP_VisualEffect_Swimming_C_Create_NS_InWater");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_Get_Effect_Transform_NewParam) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000A8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_Conv_RotatorToQuaternion_ReturnValue) == 0x0000B0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_Conv_RotatorToQuaternion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_InWater, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_InWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_SplashFeet
// 0x00C0 (0x00C0 - 0x0000)
struct BP_VisualEffect_Swimming_C_Create_NS_SplashFeet final
{
public:
	double                                        CallFunc_GetInWaterRate_rate;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4706[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Create_NS_SplashFeet");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet) == 0x0000C0, "Wrong size on BP_VisualEffect_Swimming_C_Create_NS_SplashFeet");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_GetInWaterRate_rate) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_GetInWaterRate_rate' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_Get_Effect_Transform_NewParam) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_SplashFeet, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000B8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_SplashFeet::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_Swim
// 0x00E0 (0x00E0 - 0x0000)
struct BP_VisualEffect_Swimming_C_Create_NS_Swim final
{
public:
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4707[0xF];                                     // 0x00B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue;     // 0x00C0(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Create_NS_Swim) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Create_NS_Swim");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Create_NS_Swim) == 0x0000E0, "Wrong size on BP_VisualEffect_Swimming_C_Create_NS_Swim");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_Get_Effect_Transform_NewParam) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_BreakTransform_Scale) == 0x000090, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000A8, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Create_NS_Swim, CallFunc_Conv_RotatorToQuaternion_ReturnValue) == 0x0000C0, "Member 'BP_VisualEffect_Swimming_C_Create_NS_Swim::CallFunc_Conv_RotatorToQuaternion_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.CreateInWaterEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_VisualEffect_Swimming_C_CreateInWaterEffect final
{
public:
	bool                                          CallFunc_IsMakeDiveEffect_isFalling;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_CreateInWaterEffect) == 0x000001, "Wrong alignment on BP_VisualEffect_Swimming_C_CreateInWaterEffect");
static_assert(sizeof(BP_VisualEffect_Swimming_C_CreateInWaterEffect) == 0x000001, "Wrong size on BP_VisualEffect_Swimming_C_CreateInWaterEffect");
static_assert(offsetof(BP_VisualEffect_Swimming_C_CreateInWaterEffect, CallFunc_IsMakeDiveEffect_isFalling) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_CreateInWaterEffect::CallFunc_IsMakeDiveEffect_isFalling' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.ExecuteUbergraph_BP_VisualEffect_Swimming
// 0x0030 (0x0030 - 0x0000)
struct BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterMovementComponent*         CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4708[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Update_NS_SplashFeet_DeltaTime_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Update_NS_InWater_DeltaTime_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming");
static_assert(sizeof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming) == 0x000030, "Wrong size on BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, EntryPoint) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, K2Node_Event_DeltaTime) == 0x000004, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue_2) == 0x00001A, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue_3) == 0x00001B, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue_4) == 0x00001C, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_IsValid_ReturnValue_5) == 0x00001D, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_Update_NS_SplashFeet_DeltaTime_ImplicitCast) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_Update_NS_SplashFeet_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming, CallFunc_Update_NS_InWater_DeltaTime_ImplicitCast) == 0x000028, "Member 'BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming::CallFunc_Update_NS_InWater_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Get Effect Transform
// 0x0220 (0x0220 - 0x0000)
struct BP_VisualEffect_Swimming_C_Get_Effect_Transform final
{
public:
	double                                        OffsetDistance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUseWaterPlaneNormal;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4709[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             NewParam;                                          // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rot;                                               // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                UpVector;                                          // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterPlaneNormal_ReturnValue;          // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterPlaneLocation_ReturnValue;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Get_Effect_Transform) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Get_Effect_Transform");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Get_Effect_Transform) == 0x000220, "Wrong size on BP_VisualEffect_Swimming_C_Get_Effect_Transform");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, OffsetDistance) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::OffsetDistance' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, IsUseWaterPlaneNormal) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::IsUseWaterPlaneNormal' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, NewParam) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, Rot) == 0x000070, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::Rot' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, UpVector) == 0x000088, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::UpVector' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000A8, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000C0, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Cross_VectorVector_ReturnValue) == 0x0000F0, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Normal_ReturnValue) == 0x000108, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x000120, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000138, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000150, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_GetWaterPlaneNormal_ReturnValue) == 0x000168, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_GetWaterPlaneNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_GetWaterPlaneLocation_ReturnValue) == 0x000180, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_GetWaterPlaneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_Add_VectorVector_ReturnValue) == 0x000198, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_MakeTransform_ReturnValue) == 0x0001B0, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Get_Effect_Transform, CallFunc_IsValid_ReturnValue) == 0x000210, "Member 'BP_VisualEffect_Swimming_C_Get_Effect_Transform::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetInWaterRate
// 0x0018 (0x0018 - 0x0000)
struct BP_VisualEffect_Swimming_C_GetInWaterRate final
{
public:
	double                                        Rate;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInWaterRate_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_rate_ImplicitCast;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_GetInWaterRate) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_GetInWaterRate");
static_assert(sizeof(BP_VisualEffect_Swimming_C_GetInWaterRate) == 0x000018, "Wrong size on BP_VisualEffect_Swimming_C_GetInWaterRate");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetInWaterRate, Rate) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_GetInWaterRate::Rate' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetInWaterRate, CallFunc_GetInWaterRate_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_GetInWaterRate::CallFunc_GetInWaterRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetInWaterRate, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_VisualEffect_Swimming_C_GetInWaterRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetInWaterRate, K2Node_FunctionResult_rate_ImplicitCast) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_GetInWaterRate::K2Node_FunctionResult_rate_ImplicitCast' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetOwnerHalfHeight
// 0x0028 (0x0028 - 0x0000)
struct BP_VisualEffect_Swimming_C_GetOwnerHalfHeight final
{
public:
	double                                        HalfHeight;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_HalfHeight_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_GetOwnerHalfHeight");
static_assert(sizeof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight) == 0x000028, "Wrong size on BP_VisualEffect_Swimming_C_GetOwnerHalfHeight");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight, HalfHeight) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_GetOwnerHalfHeight::HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_GetOwnerHalfHeight::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_GetOwnerHalfHeight::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_GetOwnerHalfHeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetOwnerHalfHeight, K2Node_FunctionResult_HalfHeight_ImplicitCast) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_GetOwnerHalfHeight::K2Node_FunctionResult_HalfHeight_ImplicitCast' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetVelocityLengthXY
// 0x0060 (0x0060 - 0x0000)
struct BP_VisualEffect_Swimming_C_GetVelocityLengthXY final
{
public:
	double                                        Velocity;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_GetVelocityLengthXY");
static_assert(sizeof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY) == 0x000060, "Wrong size on BP_VisualEffect_Swimming_C_GetVelocityLengthXY");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, Velocity) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::Velocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_BreakVector_Z) == 0x000038, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetVelocityLengthXY, CallFunc_VSize_ReturnValue) == 0x000058, "Member 'BP_VisualEffect_Swimming_C_GetVelocityLengthXY::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetWaterDepth
// 0x0258 (0x0258 - 0x0000)
struct BP_VisualEffect_Swimming_C_GetWaterDepth final
{
public:
	double                                        Length;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceLength;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetWaterPlaneLocation_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWaterPlaneLocation_ReturnValue_1;      // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470D[0x1];                                     // 0x0173(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470E[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_470F[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Length_ImplicitCast;         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LengthToBottomCash_ImplicitCast; // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_GetWaterDepth) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_GetWaterDepth");
static_assert(sizeof(BP_VisualEffect_Swimming_C_GetWaterDepth) == 0x000258, "Wrong size on BP_VisualEffect_Swimming_C_GetWaterDepth");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, Length) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::Length' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, TraceLength) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, Temp_object_Variable) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_GetWaterPlaneLocation_ReturnValue) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_GetWaterPlaneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_GetWaterPlaneLocation_ReturnValue_1) == 0x000038, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_GetWaterPlaneLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakVector_Y) == 0x000058, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_LineTraceSingle_OutHit) == 0x000088, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_LineTraceSingle_ReturnValue) == 0x000170, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_bBlockingHit) == 0x000171, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_bInitialOverlap) == 0x000172, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_Time) == 0x000174, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_Distance) == 0x000178, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_Location) == 0x000180, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_ImpactPoint) == 0x000198, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_Normal) == 0x0001B0, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_ImpactNormal) == 0x0001C8, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_PhysMat) == 0x0001E0, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_HitActor) == 0x0001E8, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_HitComponent) == 0x0001F0, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_HitBoneName) == 0x0001F8, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_BoneName) == 0x000200, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_HitItem) == 0x000208, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_ElementIndex) == 0x00020C, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_FaceIndex) == 0x000210, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_TraceStart) == 0x000218, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, K2Node_FunctionResult_Length_ImplicitCast) == 0x000248, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::K2Node_FunctionResult_Length_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_GetWaterDepth, K2Node_VariableSet_LengthToBottomCash_ImplicitCast) == 0x000250, "Member 'BP_VisualEffect_Swimming_C_GetWaterDepth::K2Node_VariableSet_LengthToBottomCash_ImplicitCast' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.HasMovingVelocity
// 0x0018 (0x0018 - 0x0000)
struct BP_VisualEffect_Swimming_C_HasMovingVelocity final
{
public:
	bool                                          HasVelocity;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4710[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetVelocityLengthXY_Velocity;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_HasMovingVelocity) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_HasMovingVelocity");
static_assert(sizeof(BP_VisualEffect_Swimming_C_HasMovingVelocity) == 0x000018, "Wrong size on BP_VisualEffect_Swimming_C_HasMovingVelocity");
static_assert(offsetof(BP_VisualEffect_Swimming_C_HasMovingVelocity, HasVelocity) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_HasMovingVelocity::HasVelocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_HasMovingVelocity, CallFunc_GetVelocityLengthXY_Velocity) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_HasMovingVelocity::CallFunc_GetVelocityLengthXY_Velocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_HasMovingVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_HasMovingVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.IsMakeDiveEffect
// 0x0070 (0x0070 - 0x0000)
struct BP_VisualEffect_Swimming_C_IsMakeDiveEffect final
{
public:
	bool                                          IsFalling;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4711[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TraceLength;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WaterDepth;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetOwnerHalfHeight_HalfHeight;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWaterDepth_Length;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4712[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_IsMakeDiveEffect");
static_assert(sizeof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect) == 0x000070, "Wrong size on BP_VisualEffect_Swimming_C_IsMakeDiveEffect");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, IsFalling) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::IsFalling' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, TraceLength) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::TraceLength' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, WaterDepth) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::WaterDepth' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_GetOwnerHalfHeight_HalfHeight) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_GetOwnerHalfHeight_HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_GetWaterDepth_Length) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_GetWaterDepth_Length' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000030, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_BreakVector_X) == 0x000048, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_BreakVector_Y) == 0x000050, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_IsMakeDiveEffect, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'BP_VisualEffect_Swimming_C_IsMakeDiveEffect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.TickVisualEffect
// 0x0004 (0x0004 - 0x0000)
struct BP_VisualEffect_Swimming_C_TickVisualEffect final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_TickVisualEffect) == 0x000004, "Wrong alignment on BP_VisualEffect_Swimming_C_TickVisualEffect");
static_assert(sizeof(BP_VisualEffect_Swimming_C_TickVisualEffect) == 0x000004, "Wrong size on BP_VisualEffect_Swimming_C_TickVisualEffect");
static_assert(offsetof(BP_VisualEffect_Swimming_C_TickVisualEffect, DeltaTime) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_TickVisualEffect::DeltaTime' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update NS InWater
// 0x0020 (0x0020 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_NS_InWater final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEffectActive;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4713[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetVelocityLengthXY_Velocity;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwimming_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_NS_InWater) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_NS_InWater");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_NS_InWater) == 0x000020, "Wrong size on BP_VisualEffect_Swimming_C_Update_NS_InWater");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, DeltaTime) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, IsEffectActive) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::IsEffectActive' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_GetVelocityLengthXY_Velocity) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_GetVelocityLengthXY_Velocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_InWater, CallFunc_IsSwimming_ReturnValue) == 0x000019, "Member 'BP_VisualEffect_Swimming_C_Update_NS_InWater::CallFunc_IsSwimming_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update Water Plane Effect Transform
// 0x0230 (0x0230 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform final
{
public:
	class UNiagaraComponent*                      EffectInst;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        OffsetDistance;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Get_Effect_Transform_NewParam;            // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4714[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0120(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_4715[0x8];                                     // 0x0208(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_RotatorToQuaternion_ReturnValue;     // 0x0210(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform) == 0x000010, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform) == 0x000230, "Wrong size on BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, EffectInst) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::EffectInst' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, OffsetDistance) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::OffsetDistance' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_Get_Effect_Transform_NewParam) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_Get_Effect_Transform_NewParam' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_BreakTransform_Location) == 0x000070, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_BreakTransform_Scale) == 0x0000A0, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_MakeTransform_ReturnValue) == 0x0000C0, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000120, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform, CallFunc_Conv_RotatorToQuaternion_ReturnValue) == 0x000210, "Member 'BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform::CallFunc_Conv_RotatorToQuaternion_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_Dive
// 0x0050 (0x0050 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_NS_Dive final
{
public:
	double                                        CallFunc_GetInWaterRate_rate;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetOwnerHalfHeight_HalfHeight;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWaterDepth_Length;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4716[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_NS_Dive) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_NS_Dive");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_NS_Dive) == 0x000050, "Wrong size on BP_VisualEffect_Swimming_C_Update_NS_Dive");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_GetInWaterRate_rate) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_GetInWaterRate_rate' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_GetOwnerHalfHeight_HalfHeight) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_GetOwnerHalfHeight_HalfHeight' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_GetWaterDepth_Length) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_GetWaterDepth_Length' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_IsMovingOnGround_ReturnValue) == 0x000038, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Dive, CallFunc_BooleanOR_ReturnValue) == 0x000049, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Dive::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_SplashBody
// 0x0028 (0x0028 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_NS_SplashBody final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4717[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInWaterRate_rate;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4718[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInWaterRate_rate_1;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_NS_SplashBody");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody) == 0x000028, "Wrong size on BP_VisualEffect_Swimming_C_Update_NS_SplashBody");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_GetInWaterRate_rate) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_GetInWaterRate_rate' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_GetInWaterRate_rate_1) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_GetInWaterRate_rate_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashBody, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashBody::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_SplashFeet
// 0x0028 (0x0028 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_NS_SplashFeet final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4719[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovingVelocity_HasVelocity;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovingVelocity_HasVelocity_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_NS_SplashFeet");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet) == 0x000028, "Wrong size on BP_VisualEffect_Swimming_C_Update_NS_SplashFeet");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, DeltaTime) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_HasMovingVelocity_HasVelocity) == 0x000021, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_HasMovingVelocity_HasVelocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_SplashFeet, CallFunc_HasMovingVelocity_HasVelocity_1) == 0x000022, "Member 'BP_VisualEffect_Swimming_C_Update_NS_SplashFeet::CallFunc_HasMovingVelocity_HasVelocity_1' has a wrong offset!");

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_Swim
// 0x0028 (0x0028 - 0x0000)
struct BP_VisualEffect_Swimming_C_Update_NS_Swim final
{
public:
	bool                                          IsEffectActive;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetVelocityLengthXY_Velocity;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471B[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetInWaterRate_rate;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisualEffect_Swimming_C_Update_NS_Swim) == 0x000008, "Wrong alignment on BP_VisualEffect_Swimming_C_Update_NS_Swim");
static_assert(sizeof(BP_VisualEffect_Swimming_C_Update_NS_Swim) == 0x000028, "Wrong size on BP_VisualEffect_Swimming_C_Update_NS_Swim");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, IsEffectActive) == 0x000000, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::IsEffectActive' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_GetVelocityLengthXY_Velocity) == 0x000008, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_GetVelocityLengthXY_Velocity' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_GetInWaterRate_rate) == 0x000018, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_GetInWaterRate_rate' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisualEffect_Swimming_C_Update_NS_Swim, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000021, "Member 'BP_VisualEffect_Swimming_C_Update_NS_Swim::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

