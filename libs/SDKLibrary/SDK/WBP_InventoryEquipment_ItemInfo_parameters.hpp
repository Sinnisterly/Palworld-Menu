#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InventoryEquipment_ItemInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Pal_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"
#include "E_PalUIItemInfoWindowDIsplayType_structs.hpp"


namespace SDK::Params
{

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Change Display Mode
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode final
{
public:
	E_PalUIItemInfoWindowDIsplayType              DisplayType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C4[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0008(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode) == 0x000020, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode, DisplayType) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode::DisplayType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Change_Display_Mode::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.ConvertPassiveSkillNameToText
// 0x0070 (0x0070 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText final
{
public:
	TArray<class FName>                           PassiveSkillNameArray;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FText>                           OutTextArray;                                      // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FText>                           TmpArray;                                          // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPassiveSkillName_outName;              // 0x0048(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C6[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText) == 0x000070, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, PassiveSkillNameArray) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::PassiveSkillNameArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, OutTextArray) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::OutTextArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, TmpArray) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::TmpArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_Array_Get_Item) == 0x00003C, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_GetPassiveSkillName_outName) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_GetPassiveSkillName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'WBP_InventoryEquipment_ItemInfo_C_ConvertPassiveSkillNameToText::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo
// 0x0058 (0x0058 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0020(0x0018)()
	TDelegate<void(ECommonInputType bNewInputType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_InventoryEquipment_ItemInfo_addeffect_C*> K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo) == 0x000058, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, EntryPoint) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, CallFunc_Format_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo, K2Node_MakeArray_Array_1) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_ExecuteUbergraph_WBP_InventoryEquipment_ItemInfo::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Get Display Technology Category Name
// 0x0178 (0x0178 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name final
{
public:
	class FName                                   TechnologyName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CategoryText;                                      // 0x0008(0x0018)(Parm, OutParm)
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_BuildObjectData* CallFunc_GetBuildObjectDataTableAccess_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalTechnologyData*                     CallFunc_GetLocalTechnologyData_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalTechnologyRecipeUnlockDataTableRow CallFunc_GetRecipeTechlonogy_ReturnValue;          // 0x0038(0x0060)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C8[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemTypeAName_outName;                 // 0x00B8(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CA[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CB[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalBuildObjectData                    CallFunc_BP_FindRow_ReturnValue;                   // 0x00E0(0x0080)()
	class FText                                   CallFunc_GetBuildObjectCategoryAName_outName;      // 0x0160(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name) == 0x000178, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, TechnologyName) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::TechnologyName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CategoryText) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CategoryText' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetItemIDManager_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetBuildObjectDataTableAccess_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetBuildObjectDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetLocalTechnologyData_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetLocalTechnologyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetRecipeTechlonogy_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetRecipeTechlonogy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Array_Get_Item) == 0x00009C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetStaticItemData_ReturnValue) == 0x0000A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetItemTypeAName_outName) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetItemTypeAName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_BP_FindRow_bResult) == 0x0000DC, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_BP_FindRow_ReturnValue) == 0x0000E0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name, CallFunc_GetBuildObjectCategoryAName_outName) == 0x000160, "Member 'WBP_InventoryEquipment_ItemInfo_C_Get_Display_Technology_Category_Name::CallFunc_GetBuildObjectCategoryAName_outName' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.GetItemRegeneInfo
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRegene;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalStatusEffectFoodDataRow            FoodInfo;                                          // 0x0010(0x0028)(Parm, OutParm)
	struct FPalStatusEffectFoodDataRow            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0038(0x0028)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo) == 0x000068, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, ItemId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::ItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, IsRegene) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::IsRegene' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, FoodInfo) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::FoodInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'WBP_InventoryEquipment_ItemInfo_C_GetItemRegeneInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Is Equipable Item
// 0x0060 (0x0060 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item final
{
public:
	class UPalItemSlot*                           Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipable;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CD[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x000C(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipSlot_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CF[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item) == 0x000060, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, Param_Slot) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::Param_Slot' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, IsEquipable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::IsEquipable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, CallFunc_GetItemId_ReturnValue) == 0x00000C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, CallFunc_IsEquipSlot_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::CallFunc_IsEquipSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, CallFunc_GetItemIDManager_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, CallFunc_GetStaticItemData_ReturnValue) == 0x000050, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'WBP_InventoryEquipment_ItemInfo_C_Is_Equipable_Item::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.OnInputMethodChanged
// 0x000C (0x000C - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged final
{
public:
	ECommonInputType                              bNewInputType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D0[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged) == 0x000004, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged) == 0x00000C, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, bNewInputType) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::bNewInputType' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, CallFunc_GetStackCount_ReturnValue) == 0x000004, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnInputMethodChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.OnUpdateTargetSlot
// 0x0008 (0x0008 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot final
{
public:
	class UPalItemSlot*                           Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot) == 0x000008, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot, Param_Slot) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_OnUpdateTargetSlot::Param_Slot' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Main Param Text
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text) == 0x000018, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text, Text) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Text::Text' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Main Param Value
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value) == 0x000020, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value, Value) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value::Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Main_Param_Value::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Pal Gear Icon
// 0x0058 (0x0058 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D2[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D4[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon) == 0x000058, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, ItemId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::ItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, Temp_bool_Variable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, Temp_byte_Variable) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_Split_LeftS) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_Split_RightS) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_Split_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_Conv_StringToName_ReturnValue) == 0x00004C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000054, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, Temp_byte_Variable_1) == 0x000055, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon, K2Node_Select_Default) == 0x000056, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Pal_Gear_Icon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Simple Additional Text
// 0x0038 (0x0038 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D5[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text) == 0x000038, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, Text) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Simple_Additional_Text::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Regene
// 0x01B0 (0x01B0 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene final
{
public:
	struct FPalStatusEffectFoodDataRow            FoodData;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0028(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0108(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0158(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0180(0x0018)()
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0198(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene) == 0x0001B0, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, FoodData) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::FoodData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0000F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, K2Node_MakeArray_Array) == 0x0000F8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, K2Node_MakeStruct_FormatArgumentData_2) == 0x000108, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_Format_ReturnValue) == 0x000158, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, K2Node_MakeArray_Array_1) == 0x000170, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_Format_ReturnValue_1) == 0x000180, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000198, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Regene::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Text
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text) == 0x000018, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text, Text) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Text::Text' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Set Sub Param Value
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value) == 0x000020, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value, Value) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value::Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Set_Sub_Param_Value::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetImportanyAdditionalText
// 0x0068 (0x0068 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText final
{
public:
	TArray<class FText>                           TextArray;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D7[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D8[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D9[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InventoryEquipment_ItemInfo_addeffect_C* CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText) == 0x000068, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, TextArray) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::TextArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetImportanyAdditionalText::CallFunc_Array_Get_Item_2' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup by Technology Name
// 0x0248 (0x0248 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name final
{
public:
	class FName                                   TechnologyName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMasked;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DB[0x1];                                     // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTechnologyDescription_OutDescription;  // 0x0038(0x0018)()
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0058(0x0018)()
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x0070(0x0018)()
	class FText                                   CallFunc_SelectText_ReturnValue;                   // 0x0088(0x0018)()
	class FText                                   CallFunc_Get_Display_Technology_Category_Name_CategoryText; // 0x00A0(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DC[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalTechnologyData*                     CallFunc_GetLocalTechnologyData_ReturnValue;       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalTechnologyRecipeUnlockDataTableRow CallFunc_GetRecipeTechlonogy_ReturnValue;          // 0x00C8(0x0060)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUnlockRecipeTechnology_ReturnValue;     // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DD[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0130(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DE[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DF[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0168(0x0018)()
	bool                                          CallFunc_IsUnlockRecipeTechnology_ReturnValue_1;   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E0[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalTechnologyRecipeUnlockDataTableRow CallFunc_GetRecipeTechlonogy_ReturnValue_1;        // 0x0188(0x0060)(ConstParm)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E1[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue_1;           // 0x01F0(0x0018)()
	class FText                                   CallFunc_GetLocalizedText_ReturnValue_2;           // 0x0208(0x0018)()
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SelectText_ReturnValue_1;                 // 0x0228(0x0018)()
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name) == 0x000248, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, TechnologyName) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::TechnologyName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, IsMasked) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::IsMasked' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, IconTexture) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::IconTexture' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_name_Variable) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_name_Variable_1) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_bool_Variable) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_byte_Variable) == 0x000029, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_byte_Variable_1) == 0x00002A, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_bool_Variable_1) == 0x00002B, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_byte_Variable_2) == 0x00002C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_byte_Variable_3) == 0x00002D, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_bool_Variable_2) == 0x00002E, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_object_Variable) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetTechnologyDescription_OutDescription) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetTechnologyDescription_OutDescription' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_object_Variable_1) == 0x000050, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000058, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_SelectText_ReturnValue) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_SelectText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_Get_Display_Technology_Category_Name_CategoryText) == 0x0000A0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_Get_Display_Technology_Category_Name_CategoryText' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, Temp_bool_Variable_3) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalTechnologyData_ReturnValue) == 0x0000C0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalTechnologyData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetRecipeTechlonogy_ReturnValue) == 0x0000C8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetRecipeTechlonogy_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_IsUnlockRecipeTechnology_ReturnValue) == 0x000129, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_IsUnlockRecipeTechnology_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_Conv_IntToText_ReturnValue) == 0x000130, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, K2Node_Select_Default) == 0x000148, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, K2Node_Select_Default_1) == 0x000150, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, K2Node_Select_Default_2) == 0x000158, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000160, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalizedText_ReturnValue) == 0x000168, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_IsUnlockRecipeTechnology_ReturnValue_1) == 0x000180, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_IsUnlockRecipeTechnology_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetRecipeTechlonogy_ReturnValue_1) == 0x000188, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetRecipeTechlonogy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, K2Node_Select_Default_3) == 0x0001E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalizedText_ReturnValue_1) == 0x0001F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalizedText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_GetLocalizedText_ReturnValue_2) == 0x000208, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_GetLocalizedText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_Array_Get_Item) == 0x000220, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_SelectText_ReturnValue_1) == 0x000228, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_SelectText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name, CallFunc_Array_IsEmpty_ReturnValue) == 0x000240, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_by_Technology_Name::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Icon
// 0x0020 (0x0020 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon final
{
public:
	class FName                                   StaticItemId;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon) == 0x000020, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon, StaticItemId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon::StaticItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon, CallFunc_GetItemIDManager_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon, CallFunc_GetStaticItemData_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Icon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Name
// 0x0108 (0x0108 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name final
{
public:
	class FName                                   ItemStaticId;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E2[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemName_outName;                      // 0x0010(0x0018)()
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0048(0x0070)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E4[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemTypeAName_outName;                 // 0x00C0(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E5[0x1];                                     // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x00DC(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name) == 0x000108, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, ItemStaticId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::ItemStaticId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, Temp_bool_Variable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, Temp_byte_Variable) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, Temp_byte_Variable_1) == 0x00000A, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetItemName_outName) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetItemIDManager_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetStaticItemData_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_BP_FindRow_bResult) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_BP_FindRow_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B9, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetItemTypeAName_outName) == 0x0000C0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetItemTypeAName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_BooleanOR_ReturnValue) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, K2Node_Select_Default) == 0x0000DA, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name, CallFunc_GetItemId_ReturnValue) == 0x0000DC, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Name::CallFunc_GetItemId_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Item Weight
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E6[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E7[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E8[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0044(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E9[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPassiveBuffedItemWeight_ReturnValue;   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EA[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0098(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EB[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default_1;                           // 0x00B4(0x0014)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight) == 0x0000E0, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, Temp_byte_Variable) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, Temp_bool_Variable) == 0x000001, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, Temp_bool_Variable_1) == 0x000002, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, Temp_byte_Variable_1) == 0x00002C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetItemIDManager_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetItemId_ReturnValue) == 0x000044, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetStackCount_ReturnValue) == 0x00006C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetStaticItemData_ReturnValue) == 0x000078, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_GetPassiveBuffedItemWeight_ReturnValue) == 0x000084, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_GetPassiveBuffedItemWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000090, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000098, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, K2Node_Select_Default) == 0x0000B0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, K2Node_Select_Default_1) == 0x0000B4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Item_Weight::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Parameter
// 0x0310 (0x0310 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter final
{
public:
	class FName                                   StaticItemId;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 TmpDisplayStaticItemData;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemRegeneInfo_IsRegene;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalStatusEffectFoodDataRow            CallFunc_GetItemRegeneInfo_FoodInfo;               // 0x0018(0x0028)()
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetAllPassiveSkill_OutArray;              // 0x0048(0x0010)(ReferenceParm)
	TArray<class FText>                           CallFunc_ConvertPassiveSkillNameToText_OutTextArray; // 0x0058(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Glider_Item_Base;     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47ED[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalStaticArmorItemData*                K2Node_DynamicCast_AsPal_Static_Armor_Item_Data;   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EE[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHPValue_ReturnValue;                   // 0x0094(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue_1;    // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShieldValue_ReturnValue;               // 0x00A0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EF[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Capture_Prism;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F0[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDefenseValue_ReturnValue;              // 0x00B4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCaptureLevelBySphereType_ReturnValue;  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F1[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticConsumeItemData*              K2Node_DynamicCast_AsPal_Static_Consume_Item_Data; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F2[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRestoreSanity_ReturnValue;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F3[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRestoreSatiety_ReturnValue;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F4[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticWeaponItemData*               K2Node_DynamicCast_AsPal_Static_Weapon_Item_Data;  // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F5[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue_2;    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPal_Weapon_Base;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_2;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F6[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F7[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_outName;                      // 0x0120(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F8[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0140(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0190(0x0018)()
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value;                           // 0x01A8(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F9[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountItemNum_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FA[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_1;        // 0x01D0(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemTypeAName_outName;                 // 0x0240(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0258(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02B8(0x0018)()
	struct FDataTableRowHandle                    CallFunc_Map_Find_Value_1;                         // 0x02D0(0x0010)(NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FB[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text_2;        // 0x02E8(0x0018)()
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FTrunc_A_ImplicitCast_1;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter) == 0x000310, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, StaticItemId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::StaticItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, TmpDisplayStaticItemData) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::TmpDisplayStaticItemData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetItemRegeneInfo_IsRegene) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetItemRegeneInfo_IsRegene' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetItemRegeneInfo_FoodInfo) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetItemRegeneInfo_FoodInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetGameSetting_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetAllPassiveSkill_OutArray) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetAllPassiveSkill_OutArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_ConvertPassiveSkillNameToText_OutTextArray) == 0x000058, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_ConvertPassiveSkillNameToText_OutTextArray' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000068, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_AsBP_Glider_Item_Base) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_AsBP_Glider_Item_Base' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_bSuccess) == 0x000078, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Array_IsEmpty_ReturnValue) == 0x000079, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_FTrunc_ReturnValue) == 0x00007C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_FTrunc_ReturnValue_1) == 0x000080, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Divide_IntInt_ReturnValue) == 0x000084, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_AsPal_Static_Armor_Item_Data) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_AsPal_Static_Armor_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetHPValue_ReturnValue) == 0x000094, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetHPValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_LoadClassAsset_Blocking_ReturnValue_1) == 0x000098, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_LoadClassAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetShieldValue_ReturnValue) == 0x0000A0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetShieldValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_AsBP_Capture_Prism) == 0x0000A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_AsBP_Capture_Prism' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000B0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetDefenseValue_ReturnValue) == 0x0000B4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetDefenseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetCaptureLevelBySphereType_ReturnValue) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetCaptureLevelBySphereType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_AsPal_Static_Consume_Item_Data) == 0x0000C0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_AsPal_Static_Consume_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetRestoreSanity_ReturnValue) == 0x0000CC, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetRestoreSanity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D1, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetRestoreSatiety_ReturnValue) == 0x0000D4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetRestoreSatiety_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_AsPal_Static_Weapon_Item_Data) == 0x0000E0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_AsPal_Static_Weapon_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_LoadClassAsset_Blocking_ReturnValue_2) == 0x0000F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_LoadClassAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_AsPal_Weapon_Base) == 0x0000F8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_AsPal_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_ClassDynamicCast_bSuccess_2) == 0x000100, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_ClassDynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetItemIDManager_ReturnValue) == 0x000108, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000110, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_IsValid_ReturnValue) == 0x000111, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetStaticItemData_ReturnValue) == 0x000118, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetItemName_outName) == 0x000120, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetItemName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_IsValid_ReturnValue_1) == 0x000138, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_MakeStruct_FormatArgumentData) == 0x000140, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000190, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Map_Find_Value) == 0x0001A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Map_Find_ReturnValue) == 0x0001B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetLocalInventoryData_ReturnValue) == 0x0001C0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_CountItemNum_ReturnValue) == 0x0001C8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_CountItemNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetLocalizedTextFromHandle_Text_1) == 0x0001D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetLocalizedTextFromHandle_Text_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetItemTypeAName_outName) == 0x000240, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetItemTypeAName_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_MakeStruct_FormatArgumentData_2) == 0x000258, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, K2Node_MakeArray_Array) == 0x0002A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Format_ReturnValue) == 0x0002B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Map_Find_Value_1) == 0x0002D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_Map_Find_ReturnValue_1) == 0x0002E0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_GetLocalizedTextFromHandle_Text_2) == 0x0002E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_GetLocalizedTextFromHandle_Text_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_FTrunc_A_ImplicitCast) == 0x000300, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter, CallFunc_FTrunc_A_ImplicitCast_1) == 0x000308, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Parameter::CallFunc_FTrunc_A_ImplicitCast_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.Setup Tech Mat Details
// 0x02E0 (0x02E0 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details final
{
public:
	struct FPalTechnologyRecipeUnlockDataTableRow TechData;                                          // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsMasked;                                          // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FC[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPalStaticItemIdAndNum>         MatDetail;                                         // 0x0068(0x0010)(Edit, BlueprintVisible)
	TMap<class FName, int32>                      MaterialDetails;                                   // 0x0078(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FD[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_BuildObjectData* CallFunc_GetBuildObjectDataTableAccess_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x00F0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_BP_FindRowByMapObjectId_OutRowName;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRowByMapObjectId_bResult;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FE[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalBuildObjectData                    CallFunc_BP_FindRowByMapObjectId_ReturnValue;      // 0x0110(0x0080)()
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FF[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, int32>                      K2Node_MakeMap_Map;                                // 0x01A0(0x0050)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4800[0x3];                                     // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalStaticItemIdAndNum                 K2Node_MakeStruct_PalStaticItemIdAndNum;           // 0x01FC(0x000C)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4801[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4802[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0220(0x0070)()
	TMap<class FName, int32>                      K2Node_MakeMap_Map_1;                              // 0x0290(0x0050)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details) == 0x0002E0, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, TechData) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::TechData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, IsMasked) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::IsMasked' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, MatDetail) == 0x000068, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::MatDetail' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, MaterialDetails) == 0x000078, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::MaterialDetails' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_Get_Item) == 0x0000CC, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000D4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, Temp_int_Loop_Counter_Variable) == 0x0000E0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Add_IntInt_ReturnValue) == 0x0000E4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_GetBuildObjectDataTableAccess_ReturnValue) == 0x0000E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_GetBuildObjectDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Map_Keys_Keys) == 0x0000F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_BP_FindRowByMapObjectId_OutRowName) == 0x000100, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_BP_FindRowByMapObjectId_OutRowName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_BP_FindRowByMapObjectId_bResult) == 0x000108, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_BP_FindRowByMapObjectId_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_BP_FindRowByMapObjectId_ReturnValue) == 0x000110, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_BP_FindRowByMapObjectId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_Get_Item_2) == 0x000190, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_NotEqual_NameName_ReturnValue) == 0x000198, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, K2Node_MakeMap_Map) == 0x0001A0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Map_Find_Value) == 0x0001F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Map_Find_ReturnValue) == 0x0001F4, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_Length_ReturnValue) == 0x0001F8, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, K2Node_MakeStruct_PalStaticItemIdAndNum) == 0x0001FC, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::K2Node_MakeStruct_PalStaticItemIdAndNum' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Less_IntInt_ReturnValue) == 0x000208, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_Array_Add_ReturnValue) == 0x00020C, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000210, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_BP_FindRow_bResult) == 0x000218, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, CallFunc_BP_FindRow_ReturnValue) == 0x000220, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details, K2Node_MakeMap_Map_1) == 0x000290, "Member 'WBP_InventoryEquipment_ItemInfo_C_Setup_Tech_Mat_Details::K2Node_MakeMap_Map_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupByDisplayInfo
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo final
{
public:
	struct FPalUICommonItemInfoDisplayData        DisplayInfo;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference)
	class UPalItemIDManager*                      ItemIDManager;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4803[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0048(0x0070)()
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x00B8(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalItemSlot* Slot)>     K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo) == 0x0000F8, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, DisplayInfo) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::DisplayInfo' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, ItemIDManager) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::ItemIDManager' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_BP_FindRow_bResult) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_BP_FindRow_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_GetItemId_ReturnValue) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_BooleanAND_ReturnValue) == 0x0000F0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000F1, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_IsValid_ReturnValue) == 0x0000F2, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo, CallFunc_IsEmpty_ReturnValue) == 0x0000F3, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupByDisplayInfo::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemDescription
// 0x00E0 (0x00E0 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription final
{
public:
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0008(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4804[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0038(0x0070)()
	class FText                                   CallFunc_GetItemDescription_outName;               // 0x00A8(0x0018)()
	class FText                                   CallFunc_GetItemDescription_outName_1;             // 0x00C0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription) == 0x0000E0, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_GetItemId_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_BP_FindRow_bResult) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_BP_FindRow_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_GetItemDescription_outName) == 0x0000A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_GetItemDescription_outName' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_GetItemDescription_outName_1) == 0x0000C0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_GetItemDescription_outName_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDescription::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemDurability
// 0x0108 (0x0108 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability final
{
public:
	class UPalDynamicItemDataBase*                CallFunc_TryGetDynamicItemData_OutDynamicItemData; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGetDynamicItemData_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4805[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IPalObjectDurabilityInterface> K2Node_DynamicCast_AsPal_Object_Durability_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4806[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxDurability_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDurability_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4807[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4808[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E8(0x0018)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability) == 0x000108, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_TryGetDynamicItemData_OutDynamicItemData) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_TryGetDynamicItemData_OutDynamicItemData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_TryGetDynamicItemData_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_TryGetDynamicItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, K2Node_DynamicCast_AsPal_Object_Durability_Interface) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::K2Node_DynamicCast_AsPal_Object_Durability_Interface' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_GetMaxDurability_ReturnValue) == 0x000024, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_GetMaxDurability_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_GetDurability_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_GetDurability_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, K2Node_MakeArray_Array) == 0x0000D8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_Format_ReturnValue) == 0x0000E8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000100, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemDurability::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemNum
// 0x0018 (0x0018 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupItemNum final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupItemNum) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupItemNum");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupItemNum) == 0x000018, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupItemNum");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemNum, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemNum::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupItemRarity
// 0x0120 (0x0120 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity final
{
public:
	class FName                                   ItemStaticId;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4809[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480A[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0040(0x0018)()
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480B[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0060(0x0070)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480C[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x00D4(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480D[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity) == 0x000120, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, ItemStaticId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::ItemStaticId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_GetItemIDManager_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_GetStaticItemData_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_Min_ReturnValue) == 0x00002C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_BP_FindRow_bResult) == 0x000058, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_BP_FindRow_ReturnValue) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_GetItemId_ReturnValue) == 0x0000D4, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000100, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000108, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000110, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity, CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast) == 0x000118, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupItemRarity::CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupKeyGuide
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480E[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonInputSubsystem*                  CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECommonInputType                              CallFunc_GetCurrentInputType_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480F[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalPlayerInventoryData*                CallFunc_GetLocalInventoryData_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4810[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4811[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUILiftSlotModel*                    CallFunc_GetLiftSlotModel_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLift_ReturnValue;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4812[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0044(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Equipable_Item_IsEquipable;            // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipSlot_ReturnValue;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_Select_Default_1;                           // 0x0070(0x0010)(NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4813[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedTextFromHandle_Text;          // 0x0088(0x0018)()
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide) == 0x0000A8, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_bool_Variable) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable) == 0x000001, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_bool_Variable_1) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetCurrentInputType_ReturnValue) == 0x000011, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetCurrentInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable_2) == 0x000012, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable_3) == 0x000013, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_bool_Variable_2) == 0x000014, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable_4) == 0x000015, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetLocalInventoryData_ReturnValue) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetLocalInventoryData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_byte_Variable_5) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, Temp_bool_Variable_3) == 0x000021, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetHUDService_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetLiftSlotModel_ReturnValue) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetLiftSlotModel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_IsLift_ReturnValue) == 0x000041, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_IsLift_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetItemId_ReturnValue) == 0x000044, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, K2Node_Select_Default) == 0x00006C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_Is_Equipable_Item_IsEquipable) == 0x00006D, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_Is_Equipable_Item_IsEquipable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_IsEquipSlot_ReturnValue) == 0x00006E, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_IsEquipSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_BooleanAND_ReturnValue) == 0x00006F, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, K2Node_Select_Default_1) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, K2Node_Select_Default_2) == 0x000080, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetLocalizedTextFromHandle_Text) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetLocalizedTextFromHandle_Text' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_GetStackCount_ReturnValue) == 0x0000A0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A5, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide, K2Node_Select_Default_3) == 0x0000A6, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupKeyGuide::K2Node_Select_Default_3' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupPrice
// 0x0050 (0x0050 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupPrice final
{
public:
	class UPalGameSetting*                        CallFunc_GetGameSetting_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4814[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x000C(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FPalStaticItemIdAndNum                 K2Node_MakeStruct_PalStaticItemIdAndNum;           // 0x0034(0x000C)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4815[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcItemSellPrice_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupPrice");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice) == 0x000050, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupPrice");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_GetGameSetting_ReturnValue) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_GetGameSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_IsEmpty_ReturnValue) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_GetItemId_ReturnValue) == 0x00000C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, K2Node_MakeStruct_PalStaticItemIdAndNum) == 0x000034, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::K2Node_MakeStruct_PalStaticItemIdAndNum' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_CalcItemSellPrice_ReturnValue) == 0x000044, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_CalcItemSellPrice_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_Multiply_IntInt_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupPrice, CallFunc_SelectInt_ReturnValue) == 0x00004C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupPrice::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupSkillInfo
// 0x0178 (0x0178 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo final
{
public:
	class FName                                   ItemStaticId;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4816[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalWazaDatabase*                       CallFunc_GetWazaDatabase_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4817[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticConsumeItemData*              K2Node_DynamicCast_AsPal_Static_Consume_Item_Data; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4818[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x0048(0x0070)()
	struct FPalWazaDatabaseRaw                    CallFunc_FindWazaForBP_OutData;                    // 0x00B8(0x0050)()
	bool                                          CallFunc_FindWazaForBP_ReturnValue;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4819[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0110(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0128(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481A[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemId                             CallFunc_GetItemId_ReturnValue;                    // 0x0144(0x0028)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481B[0x2];                                     // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo) == 0x000178, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, ItemStaticId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::ItemStaticId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, Temp_byte_Variable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_GetWazaDatabase_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_GetWazaDatabase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, Temp_bool_Variable) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_GetItemIDManager_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_GetStaticItemData_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, K2Node_DynamicCast_AsPal_Static_Consume_Item_Data) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::K2Node_DynamicCast_AsPal_Static_Consume_Item_Data' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_BP_FindRow_bResult) == 0x000041, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_BP_FindRow_ReturnValue) == 0x000048, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_FindWazaForBP_OutData) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_FindWazaForBP_OutData' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_FindWazaForBP_ReturnValue) == 0x000108, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_FindWazaForBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000110, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000128, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_GetItemId_ReturnValue) == 0x000144, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_GetItemId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00016C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, K2Node_Select_Default) == 0x00016D, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x000170, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupSkillInfo::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupTechDetails
// 0x0178 (0x0178 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails final
{
public:
	TArray<struct FPalStaticItemIdAndNum>         MatDetail;                                         // 0x0000(0x0010)(Edit, BlueprintVisible)
	TMap<class FName, int32>                      MaterialDetails;                                   // 0x0010(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481C[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481D[0x2];                                     // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481E[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalStaticItemIdAndNum                 K2Node_MakeStruct_PalStaticItemIdAndNum;           // 0x0098(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalMasterDataTableAccess_ItemRecipe*   CallFunc_GetItemRecipeDataTableAccess_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_FindRow_bResult;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481F[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalItemRecipe                         CallFunc_BP_FindRow_ReturnValue;                   // 0x00B8(0x0070)()
	TMap<class FName, int32>                      K2Node_MakeMap_Map;                                // 0x0128(0x0050)()
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails) == 0x000178, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, MatDetail) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::MatDetail' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, MaterialDetails) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::MaterialDetails' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_NotEqual_NameName_ReturnValue) == 0x00008C, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Map_Find_Value) == 0x000090, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Map_Find_ReturnValue) == 0x000094, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, K2Node_MakeStruct_PalStaticItemIdAndNum) == 0x000098, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::K2Node_MakeStruct_PalStaticItemIdAndNum' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_GetItemRecipeDataTableAccess_ReturnValue) == 0x0000A8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_GetItemRecipeDataTableAccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_BP_FindRow_bResult) == 0x0000B0, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_BP_FindRow_bResult' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, CallFunc_BP_FindRow_ReturnValue) == 0x0000B8, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::CallFunc_BP_FindRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails, K2Node_MakeMap_Map) == 0x000128, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupTechDetails::K2Node_MakeMap_Map' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.SetupUseableKeyGuide_Internal
// 0x0040 (0x0040 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal final
{
public:
	class FName                                   StaticItemId;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4820[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseItemInInventory_CanUse;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4821[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalItemIDManager*                      CallFunc_GetItemIDManager_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4822[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStaticItemDataBase*                 CallFunc_GetStaticItemData_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal) == 0x000008, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal) == 0x000040, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, StaticItemId) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::StaticItemId' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, Temp_byte_Variable) == 0x000008, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, Temp_bool_Variable) == 0x00000A, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_CanUseItemInInventory_CanUse) == 0x000018, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_CanUseItemInInventory_CanUse' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_GetItemIDManager_ReturnValue) == 0x000020, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_GetItemIDManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, K2Node_Select_Default) == 0x000029, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_GetStaticItemData_ReturnValue) == 0x000030, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_GetStaticItemData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WBP_InventoryEquipment_ItemInfo_C_SetupUseableKeyGuide_Internal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_InventoryEquipment_ItemInfo.WBP_InventoryEquipment_ItemInfo_C.UnbindEvent
// 0x0014 (0x0014 - 0x0000)
struct WBP_InventoryEquipment_ItemInfo_C_UnbindEvent final
{
public:
	TDelegate<void(class UPalItemSlot* Slot)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_InventoryEquipment_ItemInfo_C_UnbindEvent) == 0x000004, "Wrong alignment on WBP_InventoryEquipment_ItemInfo_C_UnbindEvent");
static_assert(sizeof(WBP_InventoryEquipment_ItemInfo_C_UnbindEvent) == 0x000014, "Wrong size on WBP_InventoryEquipment_ItemInfo_C_UnbindEvent");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_UnbindEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_InventoryEquipment_ItemInfo_C_UnbindEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_InventoryEquipment_ItemInfo_C_UnbindEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_InventoryEquipment_ItemInfo_C_UnbindEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

