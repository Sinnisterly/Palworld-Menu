#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoupeBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_LoupeBase.WBP_LoupeBase_C
// 0x0030 (0x0488 - 0x0458)
class UWBP_LoupeBase_C : public UPalUIOffScreenLoupeBase
{
public:
	struct FVector2D                              TargetPosition;                                    // 0x0458(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NowPosition;                                       // 0x0468(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstUpdate;                                     // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInterpolationTranslate;                          // 0x0479(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3976[0x6];                                     // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        InterpolationRate;                                 // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AdjustAlpha(const struct FVector2D& FinalScreenPos, double* Alpha);
	void GetLoupeWidgetSize(struct FVector2D* Param_WidgetSize);
	void GetTranslationTarget(class UWidget** Widget);
	void RoundScreenPosition(const struct FVector2D& ScreenPosition, struct FVector2D* CalcedPosition);
	void SetFinalWidgetOpacity(double CalcedOpacity);
	void UpdateArrowImageAngle(double NewAngle);
	void UpdateLoupeTranslation();
	void UpdatePositionAndVisibility(double Dot, const struct FVector& RootLocation, const struct FVector& TargetLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_LoupeBase_C">();
	}
	static class UWBP_LoupeBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_LoupeBase_C>();
	}
};
static_assert(alignof(UWBP_LoupeBase_C) == 0x000008, "Wrong alignment on UWBP_LoupeBase_C");
static_assert(sizeof(UWBP_LoupeBase_C) == 0x000488, "Wrong size on UWBP_LoupeBase_C");
static_assert(offsetof(UWBP_LoupeBase_C, TargetPosition) == 0x000458, "Member 'UWBP_LoupeBase_C::TargetPosition' has a wrong offset!");
static_assert(offsetof(UWBP_LoupeBase_C, NowPosition) == 0x000468, "Member 'UWBP_LoupeBase_C::NowPosition' has a wrong offset!");
static_assert(offsetof(UWBP_LoupeBase_C, IsFirstUpdate) == 0x000478, "Member 'UWBP_LoupeBase_C::IsFirstUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_LoupeBase_C, IsInterpolationTranslate) == 0x000479, "Member 'UWBP_LoupeBase_C::IsInterpolationTranslate' has a wrong offset!");
static_assert(offsetof(UWBP_LoupeBase_C, InterpolationRate) == 0x000480, "Member 'UWBP_LoupeBase_C::InterpolationRate' has a wrong offset!");

}

