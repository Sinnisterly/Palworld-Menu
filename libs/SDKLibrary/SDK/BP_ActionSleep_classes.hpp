#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionSleep

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActionSleep.BP_ActionSleep_C
// 0x00E0 (0x0220 - 0x0140)
class UBP_ActionSleep_C final : public UPalActionBase
{
public:
	uint8                                         Pad_417A[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0140(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           TempMontage;                                       // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlyPal;                                          // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417B[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimeHandle;                                        // 0x0158(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          EyeCloseAble;                                      // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417C[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      Effect;                                            // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          UseMontageFacial;                                  // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417D[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalFacialComponent*                    FacialComp;                                        // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          StartMontageNotifyExist;                           // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopMontageNotifyExist;                            // 0x0181(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_417E[0x6];                                     // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAkAudioEvent>           SmallSleepSound;                                   // 0x0188(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           MiddleSleepSound;                                  // 0x01B8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAkAudioEvent>           BigSleepSound;                                     // 0x01E8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void CustomEvent(class UAnimMontage* Montage);
	void EffectPlayEvent();
	void ExecuteUbergraph_BP_ActionSleep(int32 EntryPoint);
	void OnBeginAction();
	void OnBlendOut_6BF59DE942FABEC009135FAF74D0892D(class FName NotifyName);
	void OnCompleted_6BF59DE942FABEC009135FAF74D0892D(class FName NotifyName);
	void OnEndAction();
	void OnInterrupted_6BF59DE942FABEC009135FAF74D0892D(class FName NotifyName);
	void OnLoaded_25736171428620E543B76A903CB7DDF9(class UObject* Loaded);
	void OnLoaded_49BB828F4B31C2356072F4BF56562BE4(class UObject* Loaded);
	void OnLoaded_5EEF21F14544E3FF5966AEA11A939260(class UObject* Loaded);
	void OnNotifyBegin_6BF59DE942FABEC009135FAF74D0892D(class FName NotifyName);
	void OnNotifyEnd_6BF59DE942FABEC009135FAF74D0892D(class FName NotifyName);
	void PlaySleepSound();
	void SetSleepSightFlag(bool Disable);
	void StartSleepSound(class UAnimMontage* Montage);
	void StopSleepSound();
	void TickAction(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActionSleep_C">();
	}
	static class UBP_ActionSleep_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ActionSleep_C>();
	}
};
static_assert(alignof(UBP_ActionSleep_C) == 0x000010, "Wrong alignment on UBP_ActionSleep_C");
static_assert(sizeof(UBP_ActionSleep_C) == 0x000220, "Wrong size on UBP_ActionSleep_C");
static_assert(offsetof(UBP_ActionSleep_C, UberGraphFrame) == 0x000140, "Member 'UBP_ActionSleep_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, TempMontage) == 0x000148, "Member 'UBP_ActionSleep_C::TempMontage' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, IsFlyPal) == 0x000150, "Member 'UBP_ActionSleep_C::IsFlyPal' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, TimeHandle) == 0x000158, "Member 'UBP_ActionSleep_C::TimeHandle' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, EyeCloseAble) == 0x000160, "Member 'UBP_ActionSleep_C::EyeCloseAble' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, Effect) == 0x000168, "Member 'UBP_ActionSleep_C::Effect' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, UseMontageFacial) == 0x000170, "Member 'UBP_ActionSleep_C::UseMontageFacial' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, FacialComp) == 0x000178, "Member 'UBP_ActionSleep_C::FacialComp' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, StartMontageNotifyExist) == 0x000180, "Member 'UBP_ActionSleep_C::StartMontageNotifyExist' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, LoopMontageNotifyExist) == 0x000181, "Member 'UBP_ActionSleep_C::LoopMontageNotifyExist' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, SmallSleepSound) == 0x000188, "Member 'UBP_ActionSleep_C::SmallSleepSound' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, MiddleSleepSound) == 0x0001B8, "Member 'UBP_ActionSleep_C::MiddleSleepSound' has a wrong offset!");
static_assert(offsetof(UBP_ActionSleep_C, BigSleepSound) == 0x0001E8, "Member 'UBP_ActionSleep_C::BigSleepSound' has a wrong offset!");

}

