#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_NoData

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_NoData.WBP_NoData_C
// 0x0050 (0x02C8 - 0x0278)
class UWBP_NoData_C final : public UUserWidget
{
public:
	class UBP_PalTextBlock_C*                     BP_PalTextBlock_C;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_4;                                           // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_32;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_80;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_142;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetText(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_NoData_C">();
	}
	static class UWBP_NoData_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_NoData_C>();
	}
};
static_assert(alignof(UWBP_NoData_C) == 0x000008, "Wrong alignment on UWBP_NoData_C");
static_assert(sizeof(UWBP_NoData_C) == 0x0002C8, "Wrong size on UWBP_NoData_C");
static_assert(offsetof(UWBP_NoData_C, BP_PalTextBlock_C) == 0x000278, "Member 'UWBP_NoData_C::BP_PalTextBlock_C' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image) == 0x000280, "Member 'UWBP_NoData_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_1) == 0x000288, "Member 'UWBP_NoData_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_2) == 0x000290, "Member 'UWBP_NoData_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_3) == 0x000298, "Member 'UWBP_NoData_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_4) == 0x0002A0, "Member 'UWBP_NoData_C::Image_4' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_5) == 0x0002A8, "Member 'UWBP_NoData_C::Image_5' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_32) == 0x0002B0, "Member 'UWBP_NoData_C::Image_32' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_80) == 0x0002B8, "Member 'UWBP_NoData_C::Image_80' has a wrong offset!");
static_assert(offsetof(UWBP_NoData_C, Image_142) == 0x0002C0, "Member 'UWBP_NoData_C::Image_142' has a wrong offset!");

}

