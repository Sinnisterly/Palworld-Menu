#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NormalStationaryLauncherBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.CalcShootBlurRotator
// 0x0070 (0x0070 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator final
{
public:
	double                                        BlurAngle;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BlurRotator;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Blur;                                              // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator) == 0x000070, "Wrong size on BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, BlurAngle) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::BlurAngle' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, BlurRotator) == 0x000008, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::BlurRotator' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, Blur) == 0x000020, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::Blur' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_RandomFloatInRange_ReturnValue) == 0x000040, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000048, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000068, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00006C, "Member 'BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.EjectAmmo
// 0x0080 (0x0080 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_EjectAmmo final
{
public:
	struct FTransform                             CallFunc_GeyEjectionPortTransform_Transform;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_UseEjectionPort_isUse;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A1[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Ammo_C*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_EjectAmmo) == 0x000010, "Wrong alignment on BP_NormalStationaryLauncherBase_C_EjectAmmo");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_EjectAmmo) == 0x000080, "Wrong size on BP_NormalStationaryLauncherBase_C_EjectAmmo");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_EjectAmmo, CallFunc_GeyEjectionPortTransform_Transform) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_EjectAmmo::CallFunc_GeyEjectionPortTransform_Transform' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_EjectAmmo, CallFunc_Is_UseEjectionPort_isUse) == 0x000060, "Member 'BP_NormalStationaryLauncherBase_C_EjectAmmo::CallFunc_Is_UseEjectionPort_isUse' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_EjectAmmo, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000068, "Member 'BP_NormalStationaryLauncherBase_C_EjectAmmo::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_EjectAmmo, CallFunc_FinishSpawningActor_ReturnValue) == 0x000070, "Member 'BP_NormalStationaryLauncherBase_C_EjectAmmo::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ExecuteUbergraph_BP_NormalStationaryLauncherBase
// 0x0108 (0x0108 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShootInterval_Time;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetInitializeInterval_Time;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShootNumMax_ShootNumMax;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A3[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A4[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetPullTriggerInterval_PullTriggerInterval; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A5[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPullTriggerInterval_PullTriggerInterval_1; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A6[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_3;        // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A7[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A8[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase) == 0x000108, "Wrong size on BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, EntryPoint) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetShootInterval_Time) == 0x000018, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetShootInterval_Time' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetInitializeInterval_Time) == 0x000020, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetInitializeInterval_Time' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetShootNumMax_ShootNumMax) == 0x000030, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetShootNumMax_ShootNumMax' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000034, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00003C, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000040, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000048, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000050, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000060, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000090, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000098, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetPullTriggerInterval_PullTriggerInterval) == 0x0000C0, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetPullTriggerInterval_PullTriggerInterval' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x0000C8, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GetPullTriggerInterval_PullTriggerInterval_1) == 0x0000D0, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GetPullTriggerInterval_PullTriggerInterval_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Conv_DoubleToString_ReturnValue_3) == 0x0000E0, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Conv_DoubleToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000F1, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000F4, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast) == 0x0000F8, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000100, "Member 'BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetAttackableAngle
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetAttackableAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetAttackableAngle) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetAttackableAngle");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetAttackableAngle) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_GetAttackableAngle");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetAttackableAngle, ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetAttackableAngle::ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetAttackableDistance
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetAttackableDistance final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetAttackableDistance) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetAttackableDistance");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetAttackableDistance) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_GetAttackableDistance");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetAttackableDistance, ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetAttackableDistance::ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetBlurAngle
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetBlurAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetBlurAngle) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetBlurAngle");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetBlurAngle) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetBlurAngle");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetBlurAngle, Angle) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetBlurAngle::Angle' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetBulletClass
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetBulletClass final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetBulletClass) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetBulletClass");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetBulletClass) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetBulletClass");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetBulletClass, NewParam) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetBulletClass::NewParam' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetInitializeInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetInitializeInterval final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetInitializeInterval) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetInitializeInterval");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetInitializeInterval) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetInitializeInterval");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetInitializeInterval, Time) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetInitializeInterval::Time' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetMuzzleEffect final
{
public:
	class UNiagaraSystem*                         NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffect) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetMuzzleEffect");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffect) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetMuzzleEffect");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffect, NewParam) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetMuzzleEffect::NewParam' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleEffectParticle
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle final
{
public:
	class UParticleSystem*                        Particle_System;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle, Particle_System) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle::Particle_System' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetMuzzleLocation final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetMuzzleLocation) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetMuzzleLocation");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetMuzzleLocation) == 0x000018, "Wrong size on BP_NormalStationaryLauncherBase_C_GetMuzzleLocation");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetMuzzleLocation, MuzzleLocation) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetMuzzleLocation::MuzzleLocation' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleRotateLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation final
{
public:
	struct FVector                                RotateLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation) == 0x000018, "Wrong size on BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation, RotateLocation) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation::RotateLocation' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleRotator
// 0x0018 (0x0018 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetMuzzleRotator final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotator) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetMuzzleRotator");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotator) == 0x000018, "Wrong size on BP_NormalStationaryLauncherBase_C_GetMuzzleRotator");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetMuzzleRotator, Rotator) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetMuzzleRotator::Rotator' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetOwnerCharacter
// 0x0020 (0x0020 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetOwnerCharacter final
{
public:
	class APalCharacter*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetOwnerCharacter");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter) == 0x000020, "Wrong size on BP_NormalStationaryLauncherBase_C_GetOwnerCharacter");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter, ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetOwnerCharacter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'BP_NormalStationaryLauncherBase_C_GetOwnerCharacter::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter, K2Node_DynamicCast_AsPal_Character) == 0x000010, "Member 'BP_NormalStationaryLauncherBase_C_GetOwnerCharacter::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetOwnerCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_NormalStationaryLauncherBase_C_GetOwnerCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetPullTriggerInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval final
{
public:
	double                                        PullTriggerInterval;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval, PullTriggerInterval) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval::PullTriggerInterval' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetRotateMuzzleRef
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef final
{
public:
	class UStaticMeshComponent*                   Muzzle;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef, Muzzle) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef::Muzzle' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetShootInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetShootInterval final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetShootInterval) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetShootInterval");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetShootInterval) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_GetShootInterval");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetShootInterval, Time) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetShootInterval::Time' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetShootNumMax
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetShootNumMax final
{
public:
	int32                                         ShootNumMax;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetShootNumMax) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetShootNumMax");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetShootNumMax) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_GetShootNumMax");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetShootNumMax, ShootNumMax) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetShootNumMax::ShootNumMax' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GeyEjectionPortTransform
// 0x0060 (0x0060 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform) == 0x000010, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform) == 0x000060, "Wrong size on BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform, Transform) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform::Transform' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.Is UseEjectionPort
// 0x0001 (0x0001 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort) == 0x000001, "Wrong alignment on BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort) == 0x000001, "Wrong size on BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort, IsUse) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort::IsUse' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnShoot
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_OnShoot final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_OnShoot) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_OnShoot");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_OnShoot) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_OnShoot");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_OnShoot, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_OnShoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnSpawnedBullet
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_OnSpawnedBullet final
{
public:
	class APalBullet*                             Bullet;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_OnSpawnedBullet) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_OnSpawnedBullet");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_OnSpawnedBullet) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_OnSpawnedBullet");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_OnSpawnedBullet, Bullet) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_OnSpawnedBullet::Bullet' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.PlayMuzzleEffectParticle
// 0x0050 (0x0050 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle final
{
public:
	class UParticleSystem*                        CallFunc_GetMuzzleEffectParticle_Particle_System;  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        CallFunc_GetMuzzleEffectParticle_Particle_System_1; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetMuzzleRotator_Rotator;                 // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMuzzleLocation_MuzzleLocation;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle) == 0x000050, "Wrong size on BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_GetMuzzleEffectParticle_Particle_System) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_GetMuzzleEffectParticle_Particle_System' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_GetMuzzleEffectParticle_Particle_System_1) == 0x000008, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_GetMuzzleEffectParticle_Particle_System_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_GetMuzzleRotator_Rotator) == 0x000010, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_GetMuzzleRotator_Rotator' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_GetMuzzleLocation_MuzzleLocation) == 0x000030, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_GetMuzzleLocation_MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000048, "Member 'BP_NormalStationaryLauncherBase_C_PlayMuzzleEffectParticle::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.PlayShootEffect
// 0x0050 (0x0050 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_PlayShootEffect final
{
public:
	class UNiagaraSystem*                         CallFunc_GetMuzzleEffect_NewParam;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetMuzzleRotator_Rotator;                 // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMuzzleLocation_MuzzleLocation;         // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_GetMuzzleEffect_NewParam_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_PlayShootEffect) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_PlayShootEffect");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_PlayShootEffect) == 0x000050, "Wrong size on BP_NormalStationaryLauncherBase_C_PlayShootEffect");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_GetMuzzleEffect_NewParam) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_GetMuzzleEffect_NewParam' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_GetMuzzleRotator_Rotator) == 0x000008, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_GetMuzzleRotator_Rotator' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_GetMuzzleLocation_MuzzleLocation) == 0x000028, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_GetMuzzleLocation_MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_GetMuzzleEffect_NewParam_1) == 0x000040, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_GetMuzzleEffect_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_PlayShootEffect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000048, "Member 'BP_NormalStationaryLauncherBase_C_PlayShootEffect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_ReceiveTick");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_ReceiveTick");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.RotatePitchToTarget
// 0x0028 (0x0028 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_RotatePitchToTarget final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LerpSpeed;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_RotatePitchToTarget) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_RotatePitchToTarget");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_RotatePitchToTarget) == 0x000028, "Wrong size on BP_NormalStationaryLauncherBase_C_RotatePitchToTarget");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_RotatePitchToTarget, TargetLocation) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_RotatePitchToTarget::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_RotatePitchToTarget, LerpSpeed) == 0x000018, "Member 'BP_NormalStationaryLauncherBase_C_RotatePitchToTarget::LerpSpeed' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_RotatePitchToTarget, DeltaTime) == 0x000020, "Member 'BP_NormalStationaryLauncherBase_C_RotatePitchToTarget::DeltaTime' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetAttackTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_SetAttackTarget final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_SetAttackTarget) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_SetAttackTarget");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_SetAttackTarget) == 0x000008, "Wrong size on BP_NormalStationaryLauncherBase_C_SetAttackTarget");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_SetAttackTarget, Target) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_SetAttackTarget::Target' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetEnableLauncher
// 0x0002 (0x0002 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_SetEnableLauncher final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_SetEnableLauncher) == 0x000001, "Wrong alignment on BP_NormalStationaryLauncherBase_C_SetEnableLauncher");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_SetEnableLauncher) == 0x000002, "Wrong size on BP_NormalStationaryLauncherBase_C_SetEnableLauncher");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_SetEnableLauncher, Enable) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_SetEnableLauncher::Enable' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_SetEnableLauncher, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'BP_NormalStationaryLauncherBase_C_SetEnableLauncher::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetOwnerCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_SetOwnerCharacter final
{
public:
	TSoftObjectPtr<class APalCharacter>           Param_OwnerCharacter;                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_SetOwnerCharacter) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_SetOwnerCharacter");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_SetOwnerCharacter) == 0x000030, "Wrong size on BP_NormalStationaryLauncherBase_C_SetOwnerCharacter");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_SetOwnerCharacter, Param_OwnerCharacter) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_SetOwnerCharacter::Param_OwnerCharacter' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ShootBullet
// 0x0010 (0x0010 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_ShootBullet final
{
public:
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShootNumMax_ShootNumMax;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_ShootBullet) == 0x000008, "Wrong alignment on BP_NormalStationaryLauncherBase_C_ShootBullet");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_ShootBullet) == 0x000010, "Wrong size on BP_NormalStationaryLauncherBase_C_ShootBullet");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBullet, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_ShootBullet::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBullet, CallFunc_GetShootNumMax_ShootNumMax) == 0x000008, "Member 'BP_NormalStationaryLauncherBase_C_ShootBullet::CallFunc_GetShootNumMax_ShootNumMax' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBullet, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_NormalStationaryLauncherBase_C_ShootBullet::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBullet, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000D, "Member 'BP_NormalStationaryLauncherBase_C_ShootBullet::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ShootBulletInternal
// 0x0120 (0x0120 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_ShootBulletInternal final
{
public:
	struct FRotator                               Blur;                                              // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Local_SocketTransform;                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetOwnerCharacter_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponDamage_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetMuzzleRotator_Rotator;                 // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetBulletClass_NewParam;                  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBlurAngle_Angle;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_CalcShootBlurRotator_BlurRotator;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetMuzzleLocation_MuzzleLocation;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalBullet*                             CallFunc_FinishSpawningActor_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal) == 0x000010, "Wrong alignment on BP_NormalStationaryLauncherBase_C_ShootBulletInternal");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal) == 0x000120, "Wrong size on BP_NormalStationaryLauncherBase_C_ShootBulletInternal");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, Blur) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::Blur' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, Local_SocketTransform) == 0x000018, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::Local_SocketTransform' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetOwnerCharacter_ReturnValue) == 0x000030, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetOwnerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetWeaponDamage_ReturnValue) == 0x000038, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetWeaponDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetMuzzleRotator_Rotator) == 0x000040, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetMuzzleRotator_Rotator' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetBulletClass_NewParam) == 0x000058, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetBulletClass_NewParam' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetBlurAngle_Angle) == 0x000060, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetBlurAngle_Angle' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_CalcShootBlurRotator_BlurRotator) == 0x000068, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_CalcShootBlurRotator_BlurRotator' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_GetMuzzleLocation_MuzzleLocation) == 0x000080, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_GetMuzzleLocation_MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_ComposeRotators_ReturnValue) == 0x000098, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_ShootBulletInternal, CallFunc_FinishSpawningActor_ReturnValue) == 0x000118, "Member 'BP_NormalStationaryLauncherBase_C_ShootBulletInternal::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetWeaponDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_NormalStationaryLauncherBase_C_GetWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NormalStationaryLauncherBase_C_GetWeaponDamage) == 0x000004, "Wrong alignment on BP_NormalStationaryLauncherBase_C_GetWeaponDamage");
static_assert(sizeof(BP_NormalStationaryLauncherBase_C_GetWeaponDamage) == 0x000004, "Wrong size on BP_NormalStationaryLauncherBase_C_GetWeaponDamage");
static_assert(offsetof(BP_NormalStationaryLauncherBase_C_GetWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_NormalStationaryLauncherBase_C_GetWeaponDamage::ReturnValue' has a wrong offset!");

}

