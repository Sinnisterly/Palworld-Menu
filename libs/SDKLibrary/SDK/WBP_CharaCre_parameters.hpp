#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharaCre

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Pal_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_UICharacterMakeCategory_structs.hpp"


namespace SDK::Params
{

// Function WBP_CharaCre.WBP_CharaCre_C.ApplyMakeInfo
// 0x0094 (0x0094 - 0x0000)
struct WBP_CharaCre_C_ApplyMakeInfo final
{
public:
	struct FPalPlayerDataCharacterMakeInfo        MakeInfo;                                          // 0x0000(0x0094)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(WBP_CharaCre_C_ApplyMakeInfo) == 0x000004, "Wrong alignment on WBP_CharaCre_C_ApplyMakeInfo");
static_assert(sizeof(WBP_CharaCre_C_ApplyMakeInfo) == 0x000094, "Wrong size on WBP_CharaCre_C_ApplyMakeInfo");
static_assert(offsetof(WBP_CharaCre_C_ApplyMakeInfo, MakeInfo) == 0x000000, "Member 'WBP_CharaCre_C_ApplyMakeInfo::MakeInfo' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_1_K2Node_ComponentBoundEvent_7_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_2_K2Node_ComponentBoundEvent_8_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_InGame_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Finish_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_K2Node_ComponentBoundEvent_6_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Preset_K2Node_ComponentBoundEvent_2_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_CharaCre_C_BndEvt__WBP_CharaCre_WBP_CharaCre_MenuButton_Voice_K2Node_ComponentBoundEvent_3_OnClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.ChangeMakeCategory
// 0x0001 (0x0001 - 0x0000)
struct WBP_CharaCre_C_ChangeMakeCategory final
{
public:
	E_UICharacterMakeCategory                     NewCategory;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_ChangeMakeCategory) == 0x000001, "Wrong alignment on WBP_CharaCre_C_ChangeMakeCategory");
static_assert(sizeof(WBP_CharaCre_C_ChangeMakeCategory) == 0x000001, "Wrong size on WBP_CharaCre_C_ChangeMakeCategory");
static_assert(offsetof(WBP_CharaCre_C_ChangeMakeCategory, NewCategory) == 0x000000, "Member 'WBP_CharaCre_C_ChangeMakeCategory::NewCategory' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.CustomNavi_ToCategoryTop
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_CustomNavi_ToCategoryTop final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4583[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_CustomNavi_ToCategoryTop) == 0x000008, "Wrong alignment on WBP_CharaCre_C_CustomNavi_ToCategoryTop");
static_assert(sizeof(WBP_CharaCre_C_CustomNavi_ToCategoryTop) == 0x000010, "Wrong size on WBP_CharaCre_C_CustomNavi_ToCategoryTop");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToCategoryTop, Param_Navigation) == 0x000000, "Member 'WBP_CharaCre_C_CustomNavi_ToCategoryTop::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToCategoryTop, ReturnValue) == 0x000008, "Member 'WBP_CharaCre_C_CustomNavi_ToCategoryTop::ReturnValue' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.CustomNavi_ToNameChange
// 0x0030 (0x0030 - 0x0000)
struct WBP_CharaCre_C_CustomNavi_ToNameChange final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4584[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4585[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4586[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_CustomNavi_ToNameChange) == 0x000008, "Wrong alignment on WBP_CharaCre_C_CustomNavi_ToNameChange");
static_assert(sizeof(WBP_CharaCre_C_CustomNavi_ToNameChange) == 0x000030, "Wrong size on WBP_CharaCre_C_CustomNavi_ToNameChange");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, Param_Navigation) == 0x000000, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, ReturnValue) == 0x000008, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, Temp_bool_Variable) == 0x000010, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, Temp_object_Variable) == 0x000018, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, CallFunc_IsVisible_ReturnValue) == 0x000020, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_CustomNavi_ToNameChange, K2Node_Select_Default) == 0x000028, "Member 'WBP_CharaCre_C_CustomNavi_ToNameChange::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.ExecuteUbergraph_WBP_CharaCre
// 0x0070 (0x0070 - 0x0000)
struct WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4587[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_ScrollBoxContentSet_C*    CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_6;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_5;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_4;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_3;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_2;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button_1;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_MenuButton_C*             K2Node_ComponentBoundEvent_Button;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre) == 0x000008, "Wrong alignment on WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre");
static_assert(sizeof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre) == 0x000070, "Wrong size on WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, EntryPoint) == 0x000000, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_6) == 0x000018, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_6' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_5) == 0x000020, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_5' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_4) == 0x000028, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_4' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_3) == 0x000050, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_3' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_2) == 0x000058, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button_1) == 0x000060, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre, K2Node_ComponentBoundEvent_Button) == 0x000068, "Member 'WBP_CharaCre_C_ExecuteUbergraph_WBP_CharaCre::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.GetCategoryButtonByCategory
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharaCre_C_GetCategoryButtonByCategory final
{
public:
	E_UICharacterMakeCategory                     CategoryType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4588[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_GetCategoryButtonByCategory) == 0x000008, "Wrong alignment on WBP_CharaCre_C_GetCategoryButtonByCategory");
static_assert(sizeof(WBP_CharaCre_C_GetCategoryButtonByCategory) == 0x000018, "Wrong size on WBP_CharaCre_C_GetCategoryButtonByCategory");
static_assert(offsetof(WBP_CharaCre_C_GetCategoryButtonByCategory, CategoryType) == 0x000000, "Member 'WBP_CharaCre_C_GetCategoryButtonByCategory::CategoryType' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetCategoryButtonByCategory, Button) == 0x000008, "Member 'WBP_CharaCre_C_GetCategoryButtonByCategory::Button' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetCategoryButtonByCategory, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WBP_CharaCre_C_GetCategoryButtonByCategory::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.GetRestoreFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharaCre_C_GetRestoreFocusTarget final
{
public:
	E_UICharacterMakeCategory                     CategoryType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4589[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetRestoreFocusTarget_Widget;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_GetRestoreFocusTarget) == 0x000008, "Wrong alignment on WBP_CharaCre_C_GetRestoreFocusTarget");
static_assert(sizeof(WBP_CharaCre_C_GetRestoreFocusTarget) == 0x000018, "Wrong size on WBP_CharaCre_C_GetRestoreFocusTarget");
static_assert(offsetof(WBP_CharaCre_C_GetRestoreFocusTarget, CategoryType) == 0x000000, "Member 'WBP_CharaCre_C_GetRestoreFocusTarget::CategoryType' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetRestoreFocusTarget, Widget) == 0x000008, "Member 'WBP_CharaCre_C_GetRestoreFocusTarget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetRestoreFocusTarget, CallFunc_GetRestoreFocusTarget_Widget) == 0x000010, "Member 'WBP_CharaCre_C_GetRestoreFocusTarget::CallFunc_GetRestoreFocusTarget_Widget' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.GetSelectedEyeHSV
// 0x0020 (0x0020 - 0x0000)
struct WBP_CharaCre_C_GetSelectedEyeHSV final
{
public:
	struct FLinearColor                           HSV;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetSelectedEyeHSV_HSV;                    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_GetSelectedEyeHSV) == 0x000004, "Wrong alignment on WBP_CharaCre_C_GetSelectedEyeHSV");
static_assert(sizeof(WBP_CharaCre_C_GetSelectedEyeHSV) == 0x000020, "Wrong size on WBP_CharaCre_C_GetSelectedEyeHSV");
static_assert(offsetof(WBP_CharaCre_C_GetSelectedEyeHSV, HSV) == 0x000000, "Member 'WBP_CharaCre_C_GetSelectedEyeHSV::HSV' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetSelectedEyeHSV, CallFunc_GetSelectedEyeHSV_HSV) == 0x000010, "Member 'WBP_CharaCre_C_GetSelectedEyeHSV::CallFunc_GetSelectedEyeHSV_HSV' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.GetTopFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharaCre_C_GetTopFocusTarget final
{
public:
	E_UICharacterMakeCategory                     NewCategory;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTopFocusTarget_Widget;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_GetTopFocusTarget) == 0x000008, "Wrong alignment on WBP_CharaCre_C_GetTopFocusTarget");
static_assert(sizeof(WBP_CharaCre_C_GetTopFocusTarget) == 0x000018, "Wrong size on WBP_CharaCre_C_GetTopFocusTarget");
static_assert(offsetof(WBP_CharaCre_C_GetTopFocusTarget, NewCategory) == 0x000000, "Member 'WBP_CharaCre_C_GetTopFocusTarget::NewCategory' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetTopFocusTarget, Widget) == 0x000008, "Member 'WBP_CharaCre_C_GetTopFocusTarget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_GetTopFocusTarget, CallFunc_GetTopFocusTarget_Widget) == 0x000010, "Member 'WBP_CharaCre_C_GetTopFocusTarget::CallFunc_GetTopFocusTarget_Widget' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedArmSize__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedArmSize__DelegateSignature final
{
public:
	double                                        Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedArmSize__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedArmSize__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedArmSize__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedArmSize__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedArmSize__DelegateSignature, Size) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedArmSize__DelegateSignature::Size' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedArmSize_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedArmSize_Internal final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_458B[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CallDelegate_Size_ImplicitCast;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedArmSize_Internal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedArmSize_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedArmSize_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedArmSize_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedArmSize_Internal, Value) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedArmSize_Internal::Value' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnChangedArmSize_Internal, K2Node_CallDelegate_Size_ImplicitCast) == 0x000008, "Member 'WBP_CharaCre_C_OnChangedArmSize_Internal::K2Node_CallDelegate_Size_ImplicitCast' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedArmSizeInternal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedArmSizeInternal final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedArmSizeInternal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedArmSizeInternal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedArmSizeInternal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedArmSizeInternal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedArmSizeInternal, Value) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedArmSizeInternal::Value' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedBrowColor__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedBrowColor__DelegateSignature::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedBrowColor_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedBrowColor_Internal final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedBrowColor_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedBrowColor_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedBrowColor_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedBrowColor_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedBrowColor_Internal, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedBrowColor_Internal::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedEyeColor__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedEyeColor__DelegateSignature::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedEyeColor_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedEyeColor_Internal final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedEyeColor_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedEyeColor_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedEyeColor_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedEyeColor_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedEyeColor_Internal, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedEyeColor_Internal::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedHairColor__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedHairColor__DelegateSignature final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedHairColor__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedHairColor__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedHairColor__DelegateSignature) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedHairColor__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedHairColor__DelegateSignature, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedHairColor__DelegateSignature::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedHairColor_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedHairColor_Internal final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedHairColor_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedHairColor_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedHairColor_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedHairColor_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedHairColor_Internal, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedHairColor_Internal::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedLegSize__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedLegSize__DelegateSignature final
{
public:
	double                                        Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedLegSize__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedLegSize__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedLegSize__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedLegSize__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedLegSize__DelegateSignature, Size) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedLegSize__DelegateSignature::Size' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedLegSize_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedLegSize_Internal final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedLegSize_Internal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedLegSize_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedLegSize_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedLegSize_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedLegSize_Internal, Value) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedLegSize_Internal::Value' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedSkinColor__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedSkinColor__DelegateSignature::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedSkinColor_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnChangedSkinColor_Internal final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedSkinColor_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedSkinColor_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedSkinColor_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnChangedSkinColor_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedSkinColor_Internal, Color) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedSkinColor_Internal::Color' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedTab__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedTab__DelegateSignature final
{
public:
	class UWBP_CharaCre_Tab_C*                    TabWidget;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedTab__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedTab__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedTab__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedTab__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab__DelegateSignature, TabWidget) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedTab__DelegateSignature::TabWidget' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedTab_Internal
// 0x0020 (0x0020 - 0x0000)
struct WBP_CharaCre_C_OnChangedTab_Internal final
{
public:
	int32                                         OldIndex;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                FocusTargetWidget;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharaCre_Tab_C*                    K2Node_DynamicCast_AsWBP_Chara_Cre_Tab;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedTab_Internal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedTab_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedTab_Internal) == 0x000020, "Wrong size on WBP_CharaCre_C_OnChangedTab_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab_Internal, OldIndex) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedTab_Internal::OldIndex' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab_Internal, NewIndex) == 0x000004, "Member 'WBP_CharaCre_C_OnChangedTab_Internal::NewIndex' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab_Internal, FocusTargetWidget) == 0x000008, "Member 'WBP_CharaCre_C_OnChangedTab_Internal::FocusTargetWidget' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab_Internal, K2Node_DynamicCast_AsWBP_Chara_Cre_Tab) == 0x000010, "Member 'WBP_CharaCre_C_OnChangedTab_Internal::K2Node_DynamicCast_AsWBP_Chara_Cre_Tab' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTab_Internal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_CharaCre_C_OnChangedTab_Internal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedTorsoSize__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature final
{
public:
	double                                        Size;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature, Size) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedTorsoSize__DelegateSignature::Size' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedTorsoSize_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnChangedTorsoSize_Internal final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedTorsoSize_Internal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnChangedTorsoSize_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnChangedTorsoSize_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnChangedTorsoSize_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnChangedTorsoSize_Internal, Value) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedTorsoSize_Internal::Value' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnChangedVoiceID__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature final
{
public:
	int32                                         VoiceID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature) == 0x000004, "Wrong size on WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature, VoiceID) == 0x000000, "Member 'WBP_CharaCre_C_OnChangedVoiceID__DelegateSignature::VoiceID' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnClickedBodyMesh_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnClickedBodyMesh_Internal final
{
public:
	class FName                                   BindedName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnClickedBodyMesh_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnClickedBodyMesh_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnClickedBodyMesh_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnClickedBodyMesh_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnClickedBodyMesh_Internal, BindedName) == 0x000000, "Member 'WBP_CharaCre_C_OnClickedBodyMesh_Internal::BindedName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnClickedCategoryButton__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature final
{
public:
	E_UICharacterMakeCategory                     CategoryType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature) == 0x000001, "Wrong alignment on WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature) == 0x000001, "Wrong size on WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature, CategoryType) == 0x000000, "Member 'WBP_CharaCre_C_OnClickedCategoryButton__DelegateSignature::CategoryType' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnClickedCategoryButton_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_CharaCre_C_OnClickedCategoryButton_Internal final
{
public:
	class UWBP_CharaCre_MenuButton_C*             Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_UICharacterMakeCategory                     CallFunc_GetBindedCategory_CategoryType;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnClickedCategoryButton_Internal) == 0x000008, "Wrong alignment on WBP_CharaCre_C_OnClickedCategoryButton_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnClickedCategoryButton_Internal) == 0x000010, "Wrong size on WBP_CharaCre_C_OnClickedCategoryButton_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnClickedCategoryButton_Internal, Button) == 0x000000, "Member 'WBP_CharaCre_C_OnClickedCategoryButton_Internal::Button' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnClickedCategoryButton_Internal, CallFunc_GetBindedCategory_CategoryType) == 0x000008, "Member 'WBP_CharaCre_C_OnClickedCategoryButton_Internal::CallFunc_GetBindedCategory_CategoryType' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_OnClickedCategoryButton_Internal, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_CharaCre_C_OnClickedCategoryButton_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnClickedHairMesh_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnClickedHairMesh_Internal final
{
public:
	class FName                                   BindedName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnClickedHairMesh_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnClickedHairMesh_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnClickedHairMesh_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnClickedHairMesh_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnClickedHairMesh_Internal, BindedName) == 0x000000, "Member 'WBP_CharaCre_C_OnClickedHairMesh_Internal::BindedName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnClickedHeadMesh_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnClickedHeadMesh_Internal final
{
public:
	class FName                                   BindedName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnClickedHeadMesh_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnClickedHeadMesh_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnClickedHeadMesh_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnClickedHeadMesh_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnClickedHeadMesh_Internal, BindedName) == 0x000000, "Member 'WBP_CharaCre_C_OnClickedHeadMesh_Internal::BindedName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedBodyMesh__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature final
{
public:
	class FName                                   MeshPresetRowName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature, MeshPresetRowName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedBodyMesh__DelegateSignature::MeshPresetRowName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelecteddHeadMesh__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature final
{
public:
	class FName                                   MeshPresetRowName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature, MeshPresetRowName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelecteddHeadMesh__DelegateSignature::MeshPresetRowName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedEyeMaterial__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature final
{
public:
	class FName                                   EyeMaterialName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature, EyeMaterialName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedEyeMaterial__DelegateSignature::EyeMaterialName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedEyeMaterial_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedEyeMaterial_Internal final
{
public:
	class FName                                   BindedName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedEyeMaterial_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedEyeMaterial_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedEyeMaterial_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedEyeMaterial_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedEyeMaterial_Internal, BindedName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedEyeMaterial_Internal::BindedName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedHairMesh__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature final
{
public:
	class FName                                   MeshPresetRowName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature, MeshPresetRowName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedHairMesh__DelegateSignature::MeshPresetRowName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedPreset__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedPreset__DelegateSignature final
{
public:
	class FName                                   PresetName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedPreset__DelegateSignature) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedPreset__DelegateSignature");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedPreset__DelegateSignature) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedPreset__DelegateSignature");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedPreset__DelegateSignature, PresetName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedPreset__DelegateSignature::PresetName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedPreset_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_CharaCre_C_OnSelectedPreset_Internal final
{
public:
	class FName                                   PresetName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedPreset_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedPreset_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedPreset_Internal) == 0x000008, "Wrong size on WBP_CharaCre_C_OnSelectedPreset_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedPreset_Internal, PresetName) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedPreset_Internal::PresetName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.OnSelectedVoiceID_Internal
// 0x0004 (0x0004 - 0x0000)
struct WBP_CharaCre_C_OnSelectedVoiceID_Internal final
{
public:
	int32                                         VoiceID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_OnSelectedVoiceID_Internal) == 0x000004, "Wrong alignment on WBP_CharaCre_C_OnSelectedVoiceID_Internal");
static_assert(sizeof(WBP_CharaCre_C_OnSelectedVoiceID_Internal) == 0x000004, "Wrong size on WBP_CharaCre_C_OnSelectedVoiceID_Internal");
static_assert(offsetof(WBP_CharaCre_C_OnSelectedVoiceID_Internal, VoiceID) == 0x000000, "Member 'WBP_CharaCre_C_OnSelectedVoiceID_Internal::VoiceID' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.RequestPlaySampleVoice
// 0x0004 (0x0004 - 0x0000)
struct WBP_CharaCre_C_RequestPlaySampleVoice final
{
public:
	int32                                         VoiceID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_RequestPlaySampleVoice) == 0x000004, "Wrong alignment on WBP_CharaCre_C_RequestPlaySampleVoice");
static_assert(sizeof(WBP_CharaCre_C_RequestPlaySampleVoice) == 0x000004, "Wrong size on WBP_CharaCre_C_RequestPlaySampleVoice");
static_assert(offsetof(WBP_CharaCre_C_RequestPlaySampleVoice, VoiceID) == 0x000000, "Member 'WBP_CharaCre_C_RequestPlaySampleVoice::VoiceID' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.SetEnableNameEdit
// 0x0005 (0x0005 - 0x0000)
struct WBP_CharaCre_C_SetEnableNameEdit final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_SetEnableNameEdit) == 0x000001, "Wrong alignment on WBP_CharaCre_C_SetEnableNameEdit");
static_assert(sizeof(WBP_CharaCre_C_SetEnableNameEdit) == 0x000005, "Wrong size on WBP_CharaCre_C_SetEnableNameEdit");
static_assert(offsetof(WBP_CharaCre_C_SetEnableNameEdit, IsEnable) == 0x000000, "Member 'WBP_CharaCre_C_SetEnableNameEdit::IsEnable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableNameEdit, Temp_bool_Variable) == 0x000001, "Member 'WBP_CharaCre_C_SetEnableNameEdit::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableNameEdit, Temp_byte_Variable) == 0x000002, "Member 'WBP_CharaCre_C_SetEnableNameEdit::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableNameEdit, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CharaCre_C_SetEnableNameEdit::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableNameEdit, K2Node_Select_Default) == 0x000004, "Member 'WBP_CharaCre_C_SetEnableNameEdit::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.SetEnableSettingScrollList
// 0x0005 (0x0005 - 0x0000)
struct WBP_CharaCre_C_SetEnableSettingScrollList final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_SetEnableSettingScrollList) == 0x000001, "Wrong alignment on WBP_CharaCre_C_SetEnableSettingScrollList");
static_assert(sizeof(WBP_CharaCre_C_SetEnableSettingScrollList) == 0x000005, "Wrong size on WBP_CharaCre_C_SetEnableSettingScrollList");
static_assert(offsetof(WBP_CharaCre_C_SetEnableSettingScrollList, IsEnable) == 0x000000, "Member 'WBP_CharaCre_C_SetEnableSettingScrollList::IsEnable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableSettingScrollList, Temp_bool_Variable) == 0x000001, "Member 'WBP_CharaCre_C_SetEnableSettingScrollList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableSettingScrollList, Temp_byte_Variable) == 0x000002, "Member 'WBP_CharaCre_C_SetEnableSettingScrollList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableSettingScrollList, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CharaCre_C_SetEnableSettingScrollList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetEnableSettingScrollList, K2Node_Select_Default) == 0x000004, "Member 'WBP_CharaCre_C_SetEnableSettingScrollList::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.SetIsNewGame
// 0x0009 (0x0009 - 0x0000)
struct WBP_CharaCre_C_SetIsNewGame final
{
public:
	bool                                          IsNewGame;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_SetIsNewGame) == 0x000001, "Wrong alignment on WBP_CharaCre_C_SetIsNewGame");
static_assert(sizeof(WBP_CharaCre_C_SetIsNewGame) == 0x000009, "Wrong size on WBP_CharaCre_C_SetIsNewGame");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, IsNewGame) == 0x000000, "Member 'WBP_CharaCre_C_SetIsNewGame::IsNewGame' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_bool_Variable) == 0x000001, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_byte_Variable) == 0x000002, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_bool_Variable_1) == 0x000004, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, K2Node_Select_Default) == 0x000005, "Member 'WBP_CharaCre_C_SetIsNewGame::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_byte_Variable_2) == 0x000006, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, Temp_byte_Variable_3) == 0x000007, "Member 'WBP_CharaCre_C_SetIsNewGame::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_SetIsNewGame, K2Node_Select_Default_1) == 0x000008, "Member 'WBP_CharaCre_C_SetIsNewGame::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.SetPlayerName
// 0x0018 (0x0018 - 0x0000)
struct WBP_CharaCre_C_SetPlayerName final
{
public:
	class FText                                   NewName;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CharaCre_C_SetPlayerName) == 0x000008, "Wrong alignment on WBP_CharaCre_C_SetPlayerName");
static_assert(sizeof(WBP_CharaCre_C_SetPlayerName) == 0x000018, "Wrong size on WBP_CharaCre_C_SetPlayerName");
static_assert(offsetof(WBP_CharaCre_C_SetPlayerName, NewName) == 0x000000, "Member 'WBP_CharaCre_C_SetPlayerName::NewName' has a wrong offset!");

// Function WBP_CharaCre.WBP_CharaCre_C.Setup
// 0x00D0 (0x00D0 - 0x0000)
struct WBP_CharaCre_C_Setup final
{
public:
	TDelegate<void(class FName PresetName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName BindedName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName BindedName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName BindedName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& HSV)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& Color)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& Color)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName PresetName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 K2Node_CreateDelegate_OutputDelegate_8;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 K2Node_CreateDelegate_OutputDelegate_9;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 K2Node_CreateDelegate_OutputDelegate_10;           // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 VoiceID)>                K2Node_CreateDelegate_OutputDelegate_11;           // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FLinearColor& Color)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CharaCre_C_Setup) == 0x000004, "Wrong alignment on WBP_CharaCre_C_Setup");
static_assert(sizeof(WBP_CharaCre_C_Setup) == 0x0000D0, "Wrong size on WBP_CharaCre_C_Setup");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_5) == 0x000050, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_6) == 0x000060, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_7) == 0x000070, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_8) == 0x000080, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_9) == 0x000090, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_10) == 0x0000A0, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_11) == 0x0000B0, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(WBP_CharaCre_C_Setup, K2Node_CreateDelegate_OutputDelegate_12) == 0x0000C0, "Member 'WBP_CharaCre_C_Setup::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");

}

