#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalDamageCanvas_StackDamage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.AddDamageTextEvent
// 0x00D8 (0x00D8 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent final
{
public:
	struct FPalDamageInfo                         DamageInfo;                                        // 0x0000(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 Defender;                                          // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent) == 0x0000D8, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent, DamageInfo) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent::DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent, Defender) == 0x0000D0, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent::Defender' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.AddNewDamageText
// 0x0160 (0x0160 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText final
{
public:
	struct FPalDamageInfo                         DamageInfo;                                        // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Defender;                                          // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalUIDamageTextBase* SelfWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00E8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_location;              // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcDamage_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalDamageTextType                            CallFunc_CalcDamageTextType_textType;              // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F1[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUIDamageTextBase*                   CallFunc_CreateDamageWidget_createdWdiget;         // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalDamageText_C*                   K2Node_DynamicCast_AsWBP_Pal_Damage_Text;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F2[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_StartDisplay_inDisplayTime_ImplicitCast;  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText) == 0x000160, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, DamageInfo) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, Defender) == 0x0000D0, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::Defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, K2Node_CreateDelegate_OutputDelegate) == 0x0000D8, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000E8, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_CalcTargetLocation_location) == 0x000118, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_CalcTargetLocation_location' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_CalcDamage_ReturnValue) == 0x000130, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_CalcDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_CalcDamageTextType_textType) == 0x000134, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_CalcDamageTextType_textType' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_CreateDamageWidget_createdWdiget) == 0x000138, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_CreateDamageWidget_createdWdiget' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, K2Node_DynamicCast_AsWBP_Pal_Damage_Text) == 0x000140, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::K2Node_DynamicCast_AsWBP_Pal_Damage_Text' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000150, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText, CallFunc_StartDisplay_inDisplayTime_ImplicitCast) == 0x000158, "Member 'WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText::CallFunc_StartDisplay_inDisplayTime_ImplicitCast' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CalcDamageTextType
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType final
{
public:
	struct FPalDamageInfo                         DamageInfo;                                        // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Defender;                                          // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalDamageTextType                            TextType;                                          // 0x00D8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F3[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F4[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeakCount_ForUI_ReturnValue;           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType) == 0x0000F8, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, DamageInfo) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, Defender) == 0x0000D0, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::Defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, TextType) == 0x0000D8, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::TextType' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E0, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, CallFunc_GetWeakCount_ForUI_ReturnValue) == 0x0000EC, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::CallFunc_GetWeakCount_ForUI_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType, K2Node_SwitchInteger_CmpSuccess) == 0x0000F0, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CalcTargetLocation
// 0x0158 (0x0158 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation final
{
public:
	struct FPalDamageInfo                         DamageInfo;                                        // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Defender;                                          // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x00D8(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation) == 0x000158, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, DamageInfo) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, Defender) == 0x0000D0, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::Defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, Location) == 0x0000D8, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_X) == 0x000108, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_Y) == 0x000110, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_Z) == 0x000118, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_X_1) == 0x000120, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_FMax_ReturnValue) == 0x000138, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation, CallFunc_MakeVector_ReturnValue) == 0x000140, "Member 'WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CleanUpMap
// 0x0078 (0x0078 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_CleanUpMap final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AActor>>          CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F6[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0028(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F7[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_DynamicCast_AsActor;                        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_CleanUpMap");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap) == 0x000078, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_CleanUpMap");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000060, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, K2Node_DynamicCast_AsActor) == 0x000068, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::K2Node_DynamicCast_AsActor' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Map_Remove_ReturnValue) == 0x000071, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_IsDead_ReturnValue) == 0x000072, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_Map_Remove_ReturnValue_1) == 0x000073, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CleanUpMap, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000074, "Member 'WBP_PalDamageCanvas_StackDamage_C_CleanUpMap::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CreateDamageWidget
// 0x0020 (0x0020 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget final
{
public:
	class UPalUIDamageTextBase*                   CreatedWdiget;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalDamageText_C*                   CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget) == 0x000020, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget, CreatedWdiget) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget::CreatedWdiget' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000008, "Member 'WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget, CallFunc_Create_ReturnValue) == 0x000010, "Member 'WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget, CallFunc_AddChildToCanvas_ReturnValue) == 0x000018, "Member 'WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage
// 0x0120 (0x0120 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalDamagePopUpManager*                 CallFunc_GetDamagePopUpManager_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamagePopUpManager*                 CallFunc_GetDamagePopUpManager_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44F9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FPalDamageInfo& DamageInfo, class AActor* Defender)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FA[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalDamageInfo                         K2Node_CustomEvent_DamageInfo;                     // 0x0030(0x00D0)(ConstParm)
	class AActor*                                 K2Node_CustomEvent_defender;                       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistDamageText_isExist;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FB[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExistDamageText_isExist_1;              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage) == 0x000120, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, EntryPoint) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_GetDamagePopUpManager_ReturnValue) == 0x000008, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_GetDamagePopUpManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_GetDamagePopUpManager_ReturnValue_1) == 0x000010, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_GetDamagePopUpManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, K2Node_CustomEvent_DamageInfo) == 0x000030, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::K2Node_CustomEvent_DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, K2Node_CustomEvent_defender) == 0x000100, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::K2Node_CustomEvent_defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_IsExistDamageText_isExist) == 0x000108, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_IsExistDamageText_isExist' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, K2Node_DynamicCast_AsPal_Character) == 0x000110, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_IsDead_ReturnValue) == 0x000119, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage, CallFunc_IsExistDamageText_isExist_1) == 0x00011A, "Member 'WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage::CallFunc_IsExistDamageText_isExist_1' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.IsExistDamageText
// 0x0050 (0x0050 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText final
{
public:
	class AActor*                                 Defender;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0010(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UPalUIDamageTextBase*                   CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText) == 0x000050, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText, Defender) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText::Defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText, IsExist) == 0x000008, "Member 'WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText::IsExist' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000010, "Member 'WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText, CallFunc_Map_Find_Value) == 0x000040, "Member 'WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.OnRequestedCloseWidget
// 0x0078 (0x0078 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget final
{
public:
	class UPalUIDamageTextBase*                   SelfWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class AActor>>          CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FE[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class AActor>                  CallFunc_Array_Get_Item;                           // 0x0030(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44FF[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalUIDamageTextBase*                   CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget) == 0x000078, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, SelfWidget) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::SelfWidget' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Map_Remove_ReturnValue) == 0x000061, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Map_Find_Value) == 0x000068, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000071, "Member 'WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.UpdateDamageText
// 0x0140 (0x0140 - 0x0000)
struct WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText final
{
public:
	struct FPalDamageInfo                         DamageInfo;                                        // 0x0000(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Defender;                                          // 0x00D0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AActor>                  CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcTargetLocation_location;              // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalUIDamageTextBase*                   CallFunc_Map_Find_Value;                           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4500[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CalcDamage_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalDamageText_C*                   K2Node_DynamicCast_AsWBP_Pal_Damage_Text;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalDamageTextType                            CallFunc_CalcDamageTextType_textType;              // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText) == 0x000008, "Wrong alignment on WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText");
static_assert(sizeof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText) == 0x000140, "Wrong size on WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, DamageInfo) == 0x000000, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::DamageInfo' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, Defender) == 0x0000D0, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::Defender' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D8, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_CalcTargetLocation_location) == 0x000108, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_CalcTargetLocation_location' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_Map_Find_Value) == 0x000120, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_Map_Find_ReturnValue) == 0x000128, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_CalcDamage_ReturnValue) == 0x00012C, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_CalcDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, K2Node_DynamicCast_AsWBP_Pal_Damage_Text) == 0x000130, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::K2Node_DynamicCast_AsWBP_Pal_Damage_Text' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText, CallFunc_CalcDamageTextType_textType) == 0x000139, "Member 'WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText::CallFunc_CalcDamageTextType_textType' has a wrong offset!");

}

