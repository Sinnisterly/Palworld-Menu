#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VisualEffect_Swimming

#include "Basic.hpp"

#include "BP_VisualEffect_Swimming_classes.hpp"
#include "BP_VisualEffect_Swimming_parameters.hpp"


namespace SDK
{

// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create NS Dive
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Create_NS_Dive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Create NS Dive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create NS Splash Body
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Create_NS_Splash_Body()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Create NS Splash Body");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_InWater
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Create_NS_InWater()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Create_NS_InWater");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_SplashFeet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Create_NS_SplashFeet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Create_NS_SplashFeet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Create_NS_Swim
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Create_NS_Swim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Create_NS_Swim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.CreateInWaterEffect
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::CreateInWaterEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "CreateInWaterEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.ExecuteUbergraph_BP_VisualEffect_Swimming
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::ExecuteUbergraph_BP_VisualEffect_Swimming(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "ExecuteUbergraph_BP_VisualEffect_Swimming");

	Params::BP_VisualEffect_Swimming_C_ExecuteUbergraph_BP_VisualEffect_Swimming Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Get Effect Transform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  OffsetDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUseWaterPlaneNormal                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       NewParam                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::Get_Effect_Transform(double OffsetDistance, bool IsUseWaterPlaneNormal, struct FTransform* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Get Effect Transform");

	Params::BP_VisualEffect_Swimming_C_Get_Effect_Transform Parms{};

	Parms.OffsetDistance = OffsetDistance;
	Parms.IsUseWaterPlaneNormal = IsUseWaterPlaneNormal;

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetInWaterRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Rate                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::GetInWaterRate(double* Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "GetInWaterRate");

	Params::BP_VisualEffect_Swimming_C_GetInWaterRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rate != nullptr)
		*Rate = Parms.Rate;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetOwnerHalfHeight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  HalfHeight                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::GetOwnerHalfHeight(double* HalfHeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "GetOwnerHalfHeight");

	Params::BP_VisualEffect_Swimming_C_GetOwnerHalfHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HalfHeight != nullptr)
		*HalfHeight = Parms.HalfHeight;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetVelocityLengthXY
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::GetVelocityLengthXY(double* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "GetVelocityLengthXY");

	Params::BP_VisualEffect_Swimming_C_GetVelocityLengthXY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = Parms.Velocity;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.GetWaterDepth
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Length                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::GetWaterDepth(double* Length)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "GetWaterDepth");

	Params::BP_VisualEffect_Swimming_C_GetWaterDepth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Length != nullptr)
		*Length = Parms.Length;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.HasMovingVelocity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    HasVelocity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::HasMovingVelocity(bool* HasVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "HasMovingVelocity");

	Params::BP_VisualEffect_Swimming_C_HasMovingVelocity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasVelocity != nullptr)
		*HasVelocity = Parms.HasVelocity;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.IsMakeDiveEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsFalling                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::IsMakeDiveEffect(bool* IsFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "IsMakeDiveEffect");

	Params::BP_VisualEffect_Swimming_C_IsMakeDiveEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsFalling != nullptr)
		*IsFalling = Parms.IsFalling;
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.OnBeginVisualEffect
// (Event, Public, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::OnBeginVisualEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "OnBeginVisualEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.OnEndVisualEffect
// (Event, Public, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::OnEndVisualEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "OnEndVisualEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.TickVisualEffect
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::TickVisualEffect(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "TickVisualEffect");

	Params::BP_VisualEffect_Swimming_C_TickVisualEffect Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update NS InWater
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::Update_NS_InWater(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update NS InWater");

	Params::BP_VisualEffect_Swimming_C_Update_NS_InWater Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update Water Plane Effect Transform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                EffectInst                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  OffsetDistance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::Update_Water_Plane_Effect_Transform(class UNiagaraComponent* EffectInst, double OffsetDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update Water Plane Effect Transform");

	Params::BP_VisualEffect_Swimming_C_Update_Water_Plane_Effect_Transform Parms{};

	Parms.EffectInst = EffectInst;
	Parms.OffsetDistance = OffsetDistance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_Dive
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Update_NS_Dive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update_NS_Dive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_SplashBody
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Update_NS_SplashBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update_NS_SplashBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_SplashFeet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_VisualEffect_Swimming_C::Update_NS_SplashFeet(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update_NS_SplashFeet");

	Params::BP_VisualEffect_Swimming_C_Update_NS_SplashFeet Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VisualEffect_Swimming.BP_VisualEffect_Swimming_C.Update_NS_Swim
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_VisualEffect_Swimming_C::Update_NS_Swim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VisualEffect_Swimming_C", "Update_NS_Swim");

	UObject::ProcessEvent(Func, nullptr);
}

}

