#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NormalStationaryLauncherBase

#include "Basic.hpp"

#include "BP_NormalStationaryLauncherBase_classes.hpp"
#include "BP_NormalStationaryLauncherBase_parameters.hpp"


namespace SDK
{

// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.CalcShootBlurRotator
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  BlurAngle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         BlurRotator                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NormalStationaryLauncherBase_C::CalcShootBlurRotator(double BlurAngle, struct FRotator* BlurRotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "CalcShootBlurRotator");

	Params::BP_NormalStationaryLauncherBase_C_CalcShootBlurRotator Parms{};

	Parms.BlurAngle = BlurAngle;

	UObject::ProcessEvent(Func, &Parms);

	if (BlurRotator != nullptr)
		*BlurRotator = std::move(Parms.BlurRotator);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.EjectAmmo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::EjectAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "EjectAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ExecuteUbergraph_BP_NormalStationaryLauncherBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::ExecuteUbergraph_BP_NormalStationaryLauncherBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "ExecuteUbergraph_BP_NormalStationaryLauncherBase");

	Params::BP_NormalStationaryLauncherBase_C_ExecuteUbergraph_BP_NormalStationaryLauncherBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetAttackableAngle
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_NormalStationaryLauncherBase_C::GetAttackableAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetAttackableAngle");

	Params::BP_NormalStationaryLauncherBase_C_GetAttackableAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetAttackableDistance
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_NormalStationaryLauncherBase_C::GetAttackableDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetAttackableDistance");

	Params::BP_NormalStationaryLauncherBase_C_GetAttackableDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetBlurAngle
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Angle                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetBlurAngle(double* Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetBlurAngle");

	Params::BP_NormalStationaryLauncherBase_C_GetBlurAngle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Angle != nullptr)
		*Angle = Parms.Angle;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetBulletClass
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           NewParam                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetBulletClass(class UClass** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetBulletClass");

	Params::BP_NormalStationaryLauncherBase_C_GetBulletClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetInitializeInterval
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetInitializeInterval(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetInitializeInterval");

	Params::BP_NormalStationaryLauncherBase_C_GetInitializeInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleEffect
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UNiagaraSystem*                   NewParam                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetMuzzleEffect(class UNiagaraSystem** NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetMuzzleEffect");

	Params::BP_NormalStationaryLauncherBase_C_GetMuzzleEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleEffectParticle
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UParticleSystem*                  Particle_System                                        (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetMuzzleEffectParticle(class UParticleSystem** Particle_System)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetMuzzleEffectParticle");

	Params::BP_NormalStationaryLauncherBase_C_GetMuzzleEffectParticle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Particle_System != nullptr)
		*Particle_System = Parms.Particle_System;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleLocation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          MuzzleLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetMuzzleLocation(struct FVector* MuzzleLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetMuzzleLocation");

	Params::BP_NormalStationaryLauncherBase_C_GetMuzzleLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MuzzleLocation != nullptr)
		*MuzzleLocation = std::move(Parms.MuzzleLocation);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleRotateLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          RotateLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetMuzzleRotateLocation(struct FVector* RotateLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetMuzzleRotateLocation");

	Params::BP_NormalStationaryLauncherBase_C_GetMuzzleRotateLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotateLocation != nullptr)
		*RotateLocation = std::move(Parms.RotateLocation);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetMuzzleRotator
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Rotator                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NormalStationaryLauncherBase_C::GetMuzzleRotator(struct FRotator* Rotator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetMuzzleRotator");

	Params::BP_NormalStationaryLauncherBase_C_GetMuzzleRotator Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Rotator != nullptr)
		*Rotator = std::move(Parms.Rotator);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetOwnerCharacter
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APalCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class APalCharacter* ABP_NormalStationaryLauncherBase_C::GetOwnerCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetOwnerCharacter");

	Params::BP_NormalStationaryLauncherBase_C_GetOwnerCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetPullTriggerInterval
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  PullTriggerInterval                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetPullTriggerInterval(double* PullTriggerInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetPullTriggerInterval");

	Params::BP_NormalStationaryLauncherBase_C_GetPullTriggerInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PullTriggerInterval != nullptr)
		*PullTriggerInterval = Parms.PullTriggerInterval;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetRotateMuzzleRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*             Muzzle                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetRotateMuzzleRef(class UStaticMeshComponent** Muzzle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetRotateMuzzleRef");

	Params::BP_NormalStationaryLauncherBase_C_GetRotateMuzzleRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Muzzle != nullptr)
		*Muzzle = Parms.Muzzle;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetShootInterval
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetShootInterval(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetShootInterval");

	Params::BP_NormalStationaryLauncherBase_C_GetShootInterval Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetShootNumMax
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ShootNumMax                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GetShootNumMax(int32* ShootNumMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetShootNumMax");

	Params::BP_NormalStationaryLauncherBase_C_GetShootNumMax Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShootNumMax != nullptr)
		*ShootNumMax = Parms.ShootNumMax;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetShotAnimation
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::GetShotAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetShotAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GeyEjectionPortTransform
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::GeyEjectionPortTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GeyEjectionPortTransform");

	Params::BP_NormalStationaryLauncherBase_C_GeyEjectionPortTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.Is UseEjectionPort
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsUse                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::Is_UseEjectionPort(bool* IsUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "Is UseEjectionPort");

	Params::BP_NormalStationaryLauncherBase_C_Is_UseEjectionPort Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsUse != nullptr)
		*IsUse = Parms.IsUse;
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnPullTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::OnPullTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "OnPullTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnReleaseTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::OnReleaseTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "OnReleaseTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnRep_EnableLauncher
// (BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::OnRep_EnableLauncher()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "OnRep_EnableLauncher");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnShoot
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::OnShoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "OnShoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.OnSpawnedBullet
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalBullet*                       Bullet                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::OnSpawnedBullet(class APalBullet* Bullet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "OnSpawnedBullet");

	Params::BP_NormalStationaryLauncherBase_C_OnSpawnedBullet Parms{};

	Parms.Bullet = Bullet;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.PlayMuzzleEffectParticle
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::PlayMuzzleEffectParticle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "PlayMuzzleEffectParticle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.PlayShootEffect
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::PlayShootEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "PlayShootEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "ReceiveTick");

	Params::BP_NormalStationaryLauncherBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.RotatePitchToTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LerpSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::RotatePitchToTarget(const struct FVector& TargetLocation, double LerpSpeed, double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "RotatePitchToTarget");

	Params::BP_NormalStationaryLauncherBase_C_RotatePitchToTarget Parms{};

	Parms.TargetLocation = std::move(TargetLocation);
	Parms.LerpSpeed = LerpSpeed;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetAttackTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::SetAttackTarget(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "SetAttackTarget");

	Params::BP_NormalStationaryLauncherBase_C_SetAttackTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetEnableLauncher
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enable                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::SetEnableLauncher(bool Enable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "SetEnableLauncher");

	Params::BP_NormalStationaryLauncherBase_C_SetEnableLauncher Parms{};

	Parms.Enable = Enable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.SetOwnerCharacter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class APalCharacter>     Param_OwnerCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_NormalStationaryLauncherBase_C::SetOwnerCharacter(TSoftObjectPtr<class APalCharacter> Param_OwnerCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "SetOwnerCharacter");

	Params::BP_NormalStationaryLauncherBase_C_SetOwnerCharacter Parms{};

	Parms.Param_OwnerCharacter = Param_OwnerCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ShootBullet
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::ShootBullet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "ShootBullet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.ShootBulletInternal
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NormalStationaryLauncherBase_C::ShootBulletInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "ShootBulletInternal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NormalStationaryLauncherBase.BP_NormalStationaryLauncherBase_C.GetWeaponDamage
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 ABP_NormalStationaryLauncherBase_C::GetWeaponDamage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NormalStationaryLauncherBase_C", "GetWeaponDamage");

	Params::BP_NormalStationaryLauncherBase_C_GetWeaponDamage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

