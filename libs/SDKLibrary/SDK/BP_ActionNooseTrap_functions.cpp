#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionNooseTrap

#include "Basic.hpp"

#include "BP_ActionNooseTrap_classes.hpp"
#include "BP_ActionNooseTrap_parameters.hpp"


namespace SDK
{

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcAngleVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::CalcAngleVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "CalcAngleVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcAngularAcceleration_Swing
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  AngleAccel                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::CalcAngularAcceleration_Swing(double* AngleAccel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "CalcAngularAcceleration_Swing");

	Params::BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AngleAccel != nullptr)
		*AngleAccel = Parms.AngleAccel;
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcDamageToSpeed
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::CalcDamageToSpeed(int32 Damage, double* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "CalcDamageToSpeed");

	Params::BP_ActionNooseTrap_C_CalcDamageToSpeed Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.ChangeFacial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPalFacialEyeType                       Facial                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::ChangeFacial(EPalFacialEyeType Facial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "ChangeFacial");

	Params::BP_ActionNooseTrap_C_ChangeFacial Parms{};

	Parms.Facial = Facial;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.ExecuteUbergraph_BP_ActionNooseTrap
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::ExecuteUbergraph_BP_ActionNooseTrap(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "ExecuteUbergraph_BP_ActionNooseTrap");

	Params::BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.FindMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::FindMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "FindMontage");

	Params::BP_ActionNooseTrap_C_FindMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.FixCharacterToRopePos
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::FixCharacterToRopePos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "FixCharacterToRopePos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.GetWorldVelocity_ByDeadEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::GetWorldVelocity_ByDeadEnd(struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "GetWorldVelocity_ByDeadEnd");

	Params::BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.LerpSwingDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::LerpSwingDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "LerpSwingDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnBeginAction
// (Event, Public, BlueprintEvent)

void UBP_ActionNooseTrap_C::OnBeginAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnBeginAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageResult                 Info                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_ActionNooseTrap_C::OnDamage(const struct FPalDamageResult& Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnDamage");

	Params::BP_ActionNooseTrap_C_OnDamage Parms{};

	Parms.Info = std::move(Info);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnDead
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     DeadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_ActionNooseTrap_C::OnDead(const struct FPalDeadInfo& DeadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnDead");

	Params::BP_ActionNooseTrap_C_OnDead Parms{};

	Parms.DeadInfo = std::move(DeadInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnEndAction
// (Event, Public, BlueprintEvent)

void UBP_ActionNooseTrap_C::OnEndAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnEndAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnFinishAcion
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::OnFinishAcion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnFinishAcion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnStatusAdd
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalStatusComponent*              StatusComponent                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// EPalStatusID                            StatusId                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalStatusBase*                   Status                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::OnStatusAdd(const class UPalStatusComponent* StatusComponent, EPalStatusID StatusId, class UPalStatusBase* Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "OnStatusAdd");

	Params::BP_ActionNooseTrap_C_OnStatusAdd Parms{};

	Parms.StatusComponent = StatusComponent;
	Parms.StatusId = StatusId;
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.ReturnDefaultFacial
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::ReturnDefaultFacial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "ReturnDefaultFacial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.TickAction
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ActionNooseTrap_C::TickAction(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "TickAction");

	Params::BP_ActionNooseTrap_C_TickAction Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateAngle_Swing
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::UpdateAngle_Swing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "UpdateAngle_Swing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateRopePos_Swing
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::UpdateRopePos_Swing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "UpdateRopePos_Swing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateRopePosToUp
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ActionNooseTrap_C::UpdateRopePosToUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ActionNooseTrap_C", "UpdateRopePosToUp");

	UObject::ProcessEvent(Func, nullptr);
}

}

