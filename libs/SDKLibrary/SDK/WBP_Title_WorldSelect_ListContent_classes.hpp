#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Title_WorldSelect_ListContent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Title_WorldSelect_ListContent.WBP_Title_WorldSelect_ListContent_C
// 0x0280 (0x04F8 - 0x0278)
class UWBP_Title_WorldSelect_ListContent_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Select;                                        // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_NormalToFocus;                                 // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_WorldDetail_ForLocal;                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_WorldDetail_ForServer;                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_1;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LockWorld;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      Ping_CircularThrobber;                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_MultiPlay_LocalWorld;                         // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Ping_Server;                                  // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlayDay_LocalWorld;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlayDay_Server;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlayerLevel_LocalWorld;                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlayerName_LocalWorld;                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_PlayerNum_Server;                             // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_ServerName;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_TimeStamp;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_Version_Server;                               // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_WorldName;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FString                                 BindedSaveDirectoryName;                           // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FPalUIServerDisplayData                CachedServerDisplayData;                           // 0x0338(0x01A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 World_Name;                                        // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FDataTableRowHandle                    BrokenWorldNameMsgID;                              // 0x04E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void SetupByServerDisplayData(const struct FPalUIServerDisplayData& DisplayData);
	void Setup_By_Local_World_Display_Data(const class FString& SaveDirectoryName, const struct FPalUILocalWorldDisplayData& DisplayData);
	void OnCompletePing(class UPingIP* PingOperation, const class FString& HostName, int32 TimeMS);
	void OnClicked__DelegateSignature(class UWBP_Title_WorldSelect_ListContent_C* Widget);
	void GetBindedServerDisplayData(struct FPalUIServerDisplayData* DisplayData);
	void GetBindedSaveDirectoryName(class FString* DirectoryName);
	void ExecuteUbergraph_WBP_Title_WorldSelect_ListContent(int32 EntryPoint);
	void BndEvt__WBP_Title_WorldSelect_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Title_WorldSelect_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void BndEvt__WBP_Title_WorldSelect_ListContent_WBP_PalInvisibleButton_K2Node_ComponentBoundEvent_0_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void AnmEvent_Unselect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Title_WorldSelect_ListContent_C">();
	}
	static class UWBP_Title_WorldSelect_ListContent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Title_WorldSelect_ListContent_C>();
	}
};
static_assert(alignof(UWBP_Title_WorldSelect_ListContent_C) == 0x000008, "Wrong alignment on UWBP_Title_WorldSelect_ListContent_C");
static_assert(sizeof(UWBP_Title_WorldSelect_ListContent_C) == 0x0004F8, "Wrong size on UWBP_Title_WorldSelect_ListContent_C");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Title_WorldSelect_ListContent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Anm_Select) == 0x000280, "Member 'UWBP_Title_WorldSelect_ListContent_C::Anm_Select' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Anm_NormalToFocus) == 0x000288, "Member 'UWBP_Title_WorldSelect_ListContent_C::Anm_NormalToFocus' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Canvas_WorldDetail_ForLocal) == 0x000290, "Member 'UWBP_Title_WorldSelect_ListContent_C::Canvas_WorldDetail_ForLocal' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Canvas_WorldDetail_ForServer) == 0x000298, "Member 'UWBP_Title_WorldSelect_ListContent_C::Canvas_WorldDetail_ForServer' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, CanvasPanel_1) == 0x0002A0, "Member 'UWBP_Title_WorldSelect_ListContent_C::CanvasPanel_1' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Image_LockWorld) == 0x0002A8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Image_LockWorld' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Ping_CircularThrobber) == 0x0002B0, "Member 'UWBP_Title_WorldSelect_ListContent_C::Ping_CircularThrobber' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_MultiPlay_LocalWorld) == 0x0002B8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_MultiPlay_LocalWorld' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_Ping_Server) == 0x0002C0, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_Ping_Server' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_PlayDay_LocalWorld) == 0x0002C8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_PlayDay_LocalWorld' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_PlayDay_Server) == 0x0002D0, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_PlayDay_Server' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_PlayerLevel_LocalWorld) == 0x0002D8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_PlayerLevel_LocalWorld' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_PlayerName_LocalWorld) == 0x0002E0, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_PlayerName_LocalWorld' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_PlayerNum_Server) == 0x0002E8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_PlayerNum_Server' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_ServerName) == 0x0002F0, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_ServerName' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_TimeStamp) == 0x0002F8, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_TimeStamp' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_Version_Server) == 0x000300, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_Version_Server' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, Text_WorldName) == 0x000308, "Member 'UWBP_Title_WorldSelect_ListContent_C::Text_WorldName' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, WBP_PalInvisibleButton) == 0x000310, "Member 'UWBP_Title_WorldSelect_ListContent_C::WBP_PalInvisibleButton' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, OnClicked) == 0x000318, "Member 'UWBP_Title_WorldSelect_ListContent_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, BindedSaveDirectoryName) == 0x000328, "Member 'UWBP_Title_WorldSelect_ListContent_C::BindedSaveDirectoryName' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, CachedServerDisplayData) == 0x000338, "Member 'UWBP_Title_WorldSelect_ListContent_C::CachedServerDisplayData' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, World_Name) == 0x0004D8, "Member 'UWBP_Title_WorldSelect_ListContent_C::World_Name' has a wrong offset!");
static_assert(offsetof(UWBP_Title_WorldSelect_ListContent_C, BrokenWorldNameMsgID) == 0x0004E8, "Member 'UWBP_Title_WorldSelect_ListContent_C::BrokenWorldNameMsgID' has a wrong offset!");

}

