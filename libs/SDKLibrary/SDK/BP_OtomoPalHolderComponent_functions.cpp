#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OtomoPalHolderComponent

#include "Basic.hpp"

#include "BP_OtomoPalHolderComponent_classes.hpp"
#include "BP_OtomoPalHolderComponent_parameters.hpp"


namespace SDK
{

// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateAllPalInArena
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTransform>               SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_OtomoPalHolderComponent_C::ActivateAllPalInArena(TArray<struct FTransform>& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateAllPalInArena");

	Params::BP_OtomoPalHolderComponent_C_ActivateAllPalInArena Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	SpawnTransform = std::move(Parms.SpawnTransform);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::ActivateCurrentOtomo(const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateCurrentOtomo");

	Params::BP_OtomoPalHolderComponent_C_ActivateCurrentOtomo Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoFromBall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       BallTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           BallHitActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ActivateCurrentOtomoFromBall(const struct FTransform& BallTransform, class AActor* BallHitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateCurrentOtomoFromBall");

	Params::BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall Parms{};

	Parms.BallTransform = std::move(BallTransform);
	Parms.BallHitActor = BallHitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoFromBall_ToServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       BallTransform                                          (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ActivateCurrentOtomoFromBall_ToServer(const struct FTransform& BallTransform, class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateCurrentOtomoFromBall_ToServer");

	Params::BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoFromBall_ToServer Parms{};

	Parms.BallTransform = std::move(BallTransform);
	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateCurrentOtomoNearThePlayer
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::ActivateCurrentOtomoNearThePlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateCurrentOtomoNearThePlayer");

	Params::BP_OtomoPalHolderComponent_C_ActivateCurrentOtomoNearThePlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActivateOtomo
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       StartTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ActivateOtomo(int32 SlotID, const struct FTransform& StartTransform, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActivateOtomo");

	Params::BP_OtomoPalHolderComponent_C_ActivateOtomo Parms{};

	Parms.SlotID = SlotID;
	Parms.StartTransform = std::move(StartTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ActiveAndAttackCurrentPal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ActiveAndAttackCurrentPal(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ActiveAndAttackCurrentPal");

	Params::BP_OtomoPalHolderComponent_C_ActiveAndAttackCurrentPal Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Add Otomo Down Log
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_OtomoPalHolderComponent_C::Add_Otomo_Down_Log(const struct FPalDeadInfo& Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Add Otomo Down Log");

	Params::BP_OtomoPalHolderComponent_C_Add_Otomo_Down_Log Parms{};

	Parms.Actor = std::move(Actor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CallCancelCommand
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::CallCancelCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "CallCancelCommand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CallOnActivateOtomo_ToALL
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::CallOnActivateOtomo_ToALL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "CallOnActivateOtomo_ToALL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CallOnInactivateOtomo_ToALL
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::CallOnInactivateOtomo_ToALL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "CallOnInactivateOtomo_ToALL");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.CoopCallCommand
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::CoopCallCommand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "CoopCallCommand");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.DecrementSelectOtomoID_Internal
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::DecrementSelectOtomoID_Internal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "DecrementSelectOtomoID_Internal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.DelayAddOtomoForReserverList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    Otomo                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::DelayAddOtomoForReserverList(class APalCharacter* Otomo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "DelayAddOtomoForReserverList");

	Params::BP_OtomoPalHolderComponent_C_DelayAddOtomoForReserverList Parms{};

	Parms.Otomo = Otomo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Dummy Despawn Callback
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalInstanceID                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Dummy_Despawn_Callback(const struct FPalInstanceID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Dummy Despawn Callback");

	Params::BP_OtomoPalHolderComponent_C_Dummy_Despawn_Callback Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ExecuteUbergraph_BP_OtomoPalHolderComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ExecuteUbergraph_BP_OtomoPalHolderComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ExecuteUbergraph_BP_OtomoPalHolderComponent");

	Params::BP_OtomoPalHolderComponent_C_ExecuteUbergraph_BP_OtomoPalHolderComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.FindNearstEnemy
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::FindNearstEnemy(const struct FVector& Location, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "FindNearstEnemy");

	Params::BP_OtomoPalHolderComponent_C_FindNearstEnemy Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.FindSlotByIndividualID
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPalInstanceID                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// int32                                   SlotID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::FindSlotByIndividualID(const struct FPalInstanceID& ID, int32* SlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "FindSlotByIndividualID");

	Params::BP_OtomoPalHolderComponent_C_FindSlotByIndividualID Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);

	if (SlotID != nullptr)
		*SlotID = Parms.SlotID;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetNextOtomoSlotID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_OtomoPalHolderComponent_C::GetNextOtomoSlotID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetNextOtomoSlotID");

	Params::BP_OtomoPalHolderComponent_C_GetNextOtomoSlotID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetNextValidSlotIndex
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::GetNextValidSlotIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetNextValidSlotIndex");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetOwnerCharacter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APalCharacter*                    Character                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::GetOwnerCharacter(class APalCharacter** Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetOwnerCharacter");

	Params::BP_OtomoPalHolderComponent_C_GetOwnerCharacter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Character != nullptr)
		*Character = Parms.Character;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetPreviousOtomoSlotID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_OtomoPalHolderComponent_C::GetPreviousOtomoSlotID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetPreviousOtomoSlotID");

	Params::BP_OtomoPalHolderComponent_C_GetPreviousOtomoSlotID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Inactivate Otomo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Inactivate_Otomo(bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Inactivate Otomo");

	Params::BP_OtomoPalHolderComponent_C_Inactivate_Otomo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Inactivate Otomo By Handle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalIndividualCharacterHandle*    IndividualHandle                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Inactivate_Otomo_By_Handle(class UPalIndividualCharacterHandle* IndividualHandle, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Inactivate Otomo By Handle");

	Params::BP_OtomoPalHolderComponent_C_Inactivate_Otomo_By_Handle Parms{};

	Parms.IndividualHandle = IndividualHandle;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InactivateAllPalInArena
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::InactivateAllPalInArena()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "InactivateAllPalInArena");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InactivateCurrentOtomo
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::InactivateCurrentOtomo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "InactivateCurrentOtomo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InactiveActor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    StayVisible                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSuccess                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::InactiveActor(class APalCharacter* Actor, bool StayVisible, bool* IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "InactiveActor");

	Params::BP_OtomoPalHolderComponent_C_InactiveActor Parms{};

	Parms.Actor = Actor;
	Parms.StayVisible = StayVisible;

	UObject::ProcessEvent(Func, &Parms);

	if (IsSuccess != nullptr)
		*IsSuccess = Parms.IsSuccess;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IncrementActiveOtomoCount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalPlayerRecordData*             PlayerRecordData                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             CharacterID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::IncrementActiveOtomoCount(class UPalPlayerRecordData* PlayerRecordData, class FName CharacterID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IncrementActiveOtomoCount");

	Params::BP_OtomoPalHolderComponent_C_IncrementActiveOtomoCount Parms{};

	Parms.PlayerRecordData = PlayerRecordData;
	Parms.CharacterID = CharacterID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IncrementSelectOtomoID_Internal
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::IncrementSelectOtomoID_Internal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IncrementSelectOtomoID_Internal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.InitializeSlot
// (Private, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::InitializeSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "InitializeSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsActivatedSelectOtomo
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::IsActivatedSelectOtomo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IsActivatedSelectOtomo");

	Params::BP_OtomoPalHolderComponent_C_IsActivatedSelectOtomo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingBySelectSlotID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::IsRidingBySelectSlotID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IsRidingBySelectSlotID");

	Params::BP_OtomoPalHolderComponent_C_IsRidingBySelectSlotID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingBySpawnSlotID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::IsRidingBySpawnSlotID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IsRidingBySpawnSlotID");

	Params::BP_OtomoPalHolderComponent_C_IsRidingBySpawnSlotID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsValidCurrentSelectPalActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_OtomoPalHolderComponent_C::IsValidCurrentSelectPalActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IsValidCurrentSelectPalActor");

	Params::BP_OtomoPalHolderComponent_C_IsValidCurrentSelectPalActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.OnActivateOtomo__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::OnActivateOtomo__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "OnActivateOtomo__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.OnChangedSelectOtomoIndexEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::OnChangedSelectOtomoIndexEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "OnChangedSelectOtomoIndexEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.OnInactiveOtomoEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::OnInactiveOtomoEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "OnInactiveOtomoEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.OnUsedActiveSkill__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::OnUsedActiveSkill__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "OnUsedActiveSkill__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Otomo_DeathEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     DeadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_OtomoPalHolderComponent_C::Otomo_DeathEvent(const struct FPalDeadInfo& DeadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Otomo_DeathEvent");

	Params::BP_OtomoPalHolderComponent_C_Otomo_DeathEvent Parms{};

	Parms.DeadInfo = std::move(DeadInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ReceiveEndPlay");

	Params::BP_OtomoPalHolderComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "ReceiveTick");

	Params::BP_OtomoPalHolderComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.RemovePalFromParty
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalIndividualCharacterHandle*    RemoveHandle                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::RemovePalFromParty(class UPalIndividualCharacterHandle* RemoveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "RemovePalFromParty");

	Params::BP_OtomoPalHolderComponent_C_RemovePalFromParty Parms{};

	Parms.RemoveHandle = RemoveHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetActivateOtomoID_ToALL
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SetActivateOtomoID_ToALL(int32 ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SetActivateOtomoID_ToALL");

	Params::BP_OtomoPalHolderComponent_C_SetActivateOtomoID_ToALL Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetLocationOtomoForActive_ToAll
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Otomo                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       TF                                                     (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SetLocationOtomoForActive_ToAll(class AActor* Otomo, const struct FTransform& TF)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SetLocationOtomoForActive_ToAll");

	Params::BP_OtomoPalHolderComponent_C_SetLocationOtomoForActive_ToAll Parms{};

	Parms.Otomo = Otomo;
	Parms.TF = std::move(TF);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetOtomoInvokerDisable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Otomo                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDisable                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SetOtomoInvokerDisable(class AActor* Otomo, bool IsDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SetOtomoInvokerDisable");

	Params::BP_OtomoPalHolderComponent_C_SetOtomoInvokerDisable Parms{};

	Parms.Otomo = Otomo;
	Parms.IsDisable = IsDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetSelectOtomoID_Internal
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SetSelectOtomoID_Internal(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SetSelectOtomoID_Internal");

	Params::BP_OtomoPalHolderComponent_C_SetSelectOtomoID_Internal Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SetTrainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SetTrainer(class APalCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SetTrainer");

	Params::BP_OtomoPalHolderComponent_C_SetTrainer Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Setup
// (BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::Setup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Setup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Setup_ToServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_OtomoPalHolderComponent_C::Setup_ToServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Setup_ToServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnCharacterCallback
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalInstanceID                   ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SpawnCharacterCallback(const struct FPalInstanceID& ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SpawnCharacterCallback");

	Params::BP_OtomoPalHolderComponent_C_SpawnCharacterCallback Parms{};

	Parms.ID = std::move(ID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnOtomo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SpawnOtomo(int32 SlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SpawnOtomo");

	Params::BP_OtomoPalHolderComponent_C_SpawnOtomo Parms{};

	Parms.SlotID = SlotID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.SpawnOtomoByLoad
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::SpawnOtomoByLoad(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "SpawnOtomoByLoad");

	Params::BP_OtomoPalHolderComponent_C_SpawnOtomoByLoad Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Try Get Current Active Pal Actor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    Otomo                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Try_Get_Current_Active_Pal_Actor(class APalCharacter** Otomo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Try Get Current Active Pal Actor");

	Params::BP_OtomoPalHolderComponent_C_Try_Get_Current_Active_Pal_Actor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Otomo != nullptr)
		*Otomo = Parms.Otomo;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.TryFixAssignNearestWorkSelectedOtomo
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::TryFixAssignNearestWorkSelectedOtomo(const class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "TryFixAssignNearestWorkSelectedOtomo");

	Params::BP_OtomoPalHolderComponent_C_TryFixAssignNearestWorkSelectedOtomo Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.TryGetCurrentSelectPalActor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APalCharacter*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class APalCharacter* UBP_OtomoPalHolderComponent_C::TryGetCurrentSelectPalActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "TryGetCurrentSelectPalActor");

	Params::BP_OtomoPalHolderComponent_C_TryGetCurrentSelectPalActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Otomo Slot in Local
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    LastHandle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Update_Otomo_Slot_in_Local(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Update Otomo Slot in Local");

	Params::BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_in_Local Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.LastHandle = LastHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Otomo Slot In Server
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    LastHandle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Update_Otomo_Slot_In_Server(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Update Otomo Slot In Server");

	Params::BP_OtomoPalHolderComponent_C_Update_Otomo_Slot_In_Server Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.LastHandle = LastHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.Update Reserve Pal Location
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::Update_Reserve_Pal_Location(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "Update Reserve Pal Location");

	Params::BP_OtomoPalHolderComponent_C_Update_Reserve_Pal_Location Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.UpdateSlot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    LastHandle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::UpdateSlot(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "UpdateSlot");

	Params::BP_OtomoPalHolderComponent_C_UpdateSlot Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.LastHandle = LastHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.UpdateSlotInServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPalIndividualCharacterHandle*    LastHandle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::UpdateSlotInServer(int32 SlotIndex, class UPalIndividualCharacterHandle* LastHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "UpdateSlotInServer");

	Params::BP_OtomoPalHolderComponent_C_UpdateSlotInServer Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.LastHandle = LastHandle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetMaxOtomoNum
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_OtomoPalHolderComponent_C::GetMaxOtomoNum() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetMaxOtomoNum");

	Params::BP_OtomoPalHolderComponent_C_GetMaxOtomoNum Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetSelectedOtomoID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_OtomoPalHolderComponent_C::GetSelectedOtomoID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetSelectedOtomoID");

	Params::BP_OtomoPalHolderComponent_C_GetSelectedOtomoID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.GetSpawnedOtomoID
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_OtomoPalHolderComponent_C::GetSpawnedOtomoID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "GetSpawnedOtomoID");

	Params::BP_OtomoPalHolderComponent_C_GetSpawnedOtomoID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OtomoPalHolderComponent.BP_OtomoPalHolderComponent_C.IsRidingByOtomoSlotID
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   SlotID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRiding                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_OtomoPalHolderComponent_C::IsRidingByOtomoSlotID(int32 SlotID, bool* IsRiding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OtomoPalHolderComponent_C", "IsRidingByOtomoSlotID");

	Params::BP_OtomoPalHolderComponent_C_IsRidingByOtomoSlotID Parms{};

	Parms.SlotID = SlotID;

	UObject::ProcessEvent(Func, &Parms);

	if (IsRiding != nullptr)
		*IsRiding = Parms.IsRiding;
}

}

