#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionNooseTrap

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcAngleVelocity
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionNooseTrap_C_CalcAngleVelocity final
{
public:
	double                                        Sin;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_En;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalcAngularAcceleration_Swing_AngleAccel; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_CalcAngleVelocity) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_CalcAngleVelocity");
static_assert(sizeof(BP_ActionNooseTrap_C_CalcAngleVelocity) == 0x000028, "Wrong size on BP_ActionNooseTrap_C_CalcAngleVelocity");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngleVelocity, Sin) == 0x000000, "Member 'BP_ActionNooseTrap_C_CalcAngleVelocity::Sin' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngleVelocity, Temp_En) == 0x000008, "Member 'BP_ActionNooseTrap_C_CalcAngleVelocity::Temp_En' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngleVelocity, CallFunc_CalcAngularAcceleration_Swing_AngleAccel) == 0x000010, "Member 'BP_ActionNooseTrap_C_CalcAngleVelocity::CallFunc_CalcAngularAcceleration_Swing_AngleAccel' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngleVelocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_CalcAngleVelocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngleVelocity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ActionNooseTrap_C_CalcAngleVelocity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcAngularAcceleration_Swing
// 0x0038 (0x0038 - 0x0000)
struct BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing final
{
public:
	double                                        AngleAccel;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing");
static_assert(sizeof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing) == 0x000038, "Wrong size on BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, AngleAccel) == 0x000000, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::AngleAccel' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Sin_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_ActionNooseTrap_C_CalcAngularAcceleration_Swing::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.CalcDamageToSpeed
// 0x0058 (0x0058 - 0x0000)
struct BP_ActionNooseTrap_C_CalcDamageToSpeed final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFixedPoint64                          CallFunc_Convert_IntToFixedPoint64_ReturnValue;    // 0x0018(0x0008)(NoDestructor)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFixedPoint64                          CallFunc_GetMaxHP_ReturnValue;                     // 0x0028(0x0008)(NoDestructor)
	struct FFixedPoint64                          CallFunc_Divide_FixedPoint64FixedPoint64_ReturnValue; // 0x0030(0x0008)(NoDestructor)
	float                                         CallFunc_Convert_FixedPoint64ToFloat_ReturnValue;  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB5[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_CalcDamageToSpeed) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_CalcDamageToSpeed");
static_assert(sizeof(BP_ActionNooseTrap_C_CalcDamageToSpeed) == 0x000058, "Wrong size on BP_ActionNooseTrap_C_CalcDamageToSpeed");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, Damage) == 0x000000, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::Damage' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, Speed) == 0x000008, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_GetActionCharacter_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_Convert_IntToFixedPoint64_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_Convert_IntToFixedPoint64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_GetMaxHP_ReturnValue) == 0x000028, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_GetMaxHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_Divide_FixedPoint64FixedPoint64_ReturnValue) == 0x000030, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_Divide_FixedPoint64FixedPoint64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_Convert_FixedPoint64ToFloat_ReturnValue) == 0x000038, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_Convert_FixedPoint64ToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_CalcDamageToSpeed, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'BP_ActionNooseTrap_C_CalcDamageToSpeed::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.ChangeFacial
// 0x0018 (0x0018 - 0x0000)
struct BP_ActionNooseTrap_C_ChangeFacial final
{
public:
	EPalFacialEyeType                             Facial;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB6[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalFacialComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_ChangeFacial) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_ChangeFacial");
static_assert(sizeof(BP_ActionNooseTrap_C_ChangeFacial) == 0x000018, "Wrong size on BP_ActionNooseTrap_C_ChangeFacial");
static_assert(offsetof(BP_ActionNooseTrap_C_ChangeFacial, Facial) == 0x000000, "Member 'BP_ActionNooseTrap_C_ChangeFacial::Facial' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ChangeFacial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_ActionNooseTrap_C_ChangeFacial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ChangeFacial, CallFunc_GetActionCharacter_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_ChangeFacial::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ChangeFacial, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_ChangeFacial::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.ExecuteUbergraph_BP_ActionNooseTrap
// 0x01B8 (0x01B8 - 0x0000)
struct BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalSkeletalMeshComponent*              CallFunc_GetMainMesh_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetPhysicsRootBoneName_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_2;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_3;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_4;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_5;         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDamageResult& DamageResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB8[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_6;         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalStatusComponent* StatusComponent, EPalStatusID StatusId, class UPalStatusBase* Status)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStatusComponent*                    CallFunc_GetComponentByClass_ReturnValue_2;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CB9[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActionVelocity_ReturnValue;            // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBA[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue_2;            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBB[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FPalDeadInfo& DeadInfo)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBC[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_7;         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_8;         // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBD[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_9;         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBE[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_10;        // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CallFunc_GetComponentByClass_ReturnValue_3;        // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CBF[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGeneralPurposeIndex_ReturnValue;       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC0[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_temp_DeltaTime_ImplicitCast;    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap");
static_assert(sizeof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap) == 0x0001B8, "Wrong size on BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, EntryPoint) == 0x000000, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetMainMesh_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetMainMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetPhysicsRootBoneName_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetPhysicsRootBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_1) == 0x000020, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_2) == 0x000040, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_3) == 0x000048, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_4) == 0x000068, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_5) == 0x000078, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000090, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionTarget_ReturnValue) == 0x000098, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActorRightVector_ReturnValue) == 0x0000A0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, K2Node_Event_DeltaTime) == 0x0000B8, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_6) == 0x0000C8, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0000E0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsServer_ReturnValue) == 0x0000E8, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionTarget_ReturnValue_1) == 0x0000F0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionVelocity_ReturnValue) == 0x0000F8, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionTarget_ReturnValue_2) == 0x000118, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionTarget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_FindMontage_Montage) == 0x000128, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_PlayAnimMontage_ReturnValue) == 0x000130, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, K2Node_CreateDelegate_OutputDelegate_2) == 0x000134, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_7) == 0x000148, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_8) == 0x000158, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsServer_ReturnValue_1) == 0x000168, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_9) == 0x000170, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsServer_ReturnValue_2) == 0x000178, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetActionCharacter_ReturnValue_10) == 0x000180, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetActionCharacter_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetComponentByClass_ReturnValue_3) == 0x000188, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_IsDead_ReturnValue) == 0x000190, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_GetGeneralPurposeIndex_ReturnValue) == 0x000194, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_GetGeneralPurposeIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000198, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, K2Node_VariableSet_temp_DeltaTime_ImplicitCast) == 0x0001A0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::K2Node_VariableSet_temp_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001B0, "Member 'BP_ActionNooseTrap_C_ExecuteUbergraph_BP_ActionNooseTrap::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.FindMontage
// 0x0030 (0x0030 - 0x0000)
struct BP_ActionNooseTrap_C_FindMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalActionType                                Temp_byte_Variable;                                // 0x0008(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStaticCharacterParameterComponent*  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_FindMontage) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_FindMontage");
static_assert(sizeof(BP_ActionNooseTrap_C_FindMontage) == 0x000030, "Wrong size on BP_ActionNooseTrap_C_FindMontage");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, Montage) == 0x000000, "Member 'BP_ActionNooseTrap_C_FindMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, Temp_byte_Variable) == 0x000008, "Member 'BP_ActionNooseTrap_C_FindMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, CallFunc_GetActionCharacter_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_FindMontage::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_FindMontage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, CallFunc_Map_Find_Value) == 0x000020, "Member 'BP_ActionNooseTrap_C_FindMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FindMontage, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'BP_ActionNooseTrap_C_FindMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.FixCharacterToRopePos
// 0x0160 (0x0160 - 0x0000)
struct BP_ActionNooseTrap_C_FixCharacterToRopePos final
{
public:
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC2[0x8];                                     // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0070(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_FixCharacterToRopePos) == 0x000010, "Wrong alignment on BP_ActionNooseTrap_C_FixCharacterToRopePos");
static_assert(sizeof(BP_ActionNooseTrap_C_FixCharacterToRopePos) == 0x000160, "Wrong size on BP_ActionNooseTrap_C_FixCharacterToRopePos");
static_assert(offsetof(BP_ActionNooseTrap_C_FixCharacterToRopePos, CallFunc_GetActionCharacter_ReturnValue) == 0x000000, "Member 'BP_ActionNooseTrap_C_FixCharacterToRopePos::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FixCharacterToRopePos, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_FixCharacterToRopePos::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FixCharacterToRopePos, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000070, "Member 'BP_ActionNooseTrap_C_FixCharacterToRopePos::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_FixCharacterToRopePos, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000158, "Member 'BP_ActionNooseTrap_C_FixCharacterToRopePos::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.GetWorldVelocity_ByDeadEnd
// 0x0060 (0x0060 - 0x0000)
struct BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd");
static_assert(sizeof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd) == 0x000060, "Wrong size on BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd");
static_assert(offsetof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd, Velocity) == 0x000000, "Member 'BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd::Velocity' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd, CallFunc_Divide_VectorVector_ReturnValue) == 0x000048, "Member 'BP_ActionNooseTrap_C_GetWorldVelocity_ByDeadEnd::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.LerpSwingDirection
// 0x0028 (0x0028 - 0x0000)
struct BP_ActionNooseTrap_C_LerpSwingDirection final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_LerpSwingDirection) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_LerpSwingDirection");
static_assert(sizeof(BP_ActionNooseTrap_C_LerpSwingDirection) == 0x000028, "Wrong size on BP_ActionNooseTrap_C_LerpSwingDirection");
static_assert(offsetof(BP_ActionNooseTrap_C_LerpSwingDirection, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_ActionNooseTrap_C_LerpSwingDirection::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_LerpSwingDirection, CallFunc_VLerp_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_LerpSwingDirection::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_LerpSwingDirection, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000020, "Member 'BP_ActionNooseTrap_C_LerpSwingDirection::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnDamage
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ActionNooseTrap_C_OnDamage final
{
public:
	struct FPalDamageResult                       Info;                                              // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FVector                                NextVelocity;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageVelocity;                                    // 0x0068(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentVelocity;                                   // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DamageDirection;                                   // 0x0098(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalcDamageToSpeed_Speed;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_1;            // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_OnDamage) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_OnDamage");
static_assert(sizeof(BP_ActionNooseTrap_C_OnDamage) == 0x0001C0, "Wrong size on BP_ActionNooseTrap_C_OnDamage");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, Info) == 0x000000, "Member 'BP_ActionNooseTrap_C_OnDamage::Info' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, NextVelocity) == 0x000050, "Member 'BP_ActionNooseTrap_C_OnDamage::NextVelocity' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, DamageVelocity) == 0x000068, "Member 'BP_ActionNooseTrap_C_OnDamage::DamageVelocity' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CurrentVelocity) == 0x000080, "Member 'BP_ActionNooseTrap_C_OnDamage::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, DamageDirection) == 0x000098, "Member 'BP_ActionNooseTrap_C_OnDamage::DamageDirection' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_CalcDamageToSpeed_Speed) == 0x0000B0, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_CalcDamageToSpeed_Speed' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_VSize_ReturnValue) == 0x0000B8, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000C0, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Vector_Normal2D_ReturnValue) == 0x0000E0, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, K2Node_CreateDelegate_OutputDelegate) == 0x0000F8, "Member 'BP_ActionNooseTrap_C_OnDamage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000108, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000128, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000140, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_GetActionCharacter_ReturnValue) == 0x000158, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000160, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Vector_Normal2D_ReturnValue_1) == 0x000190, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Vector_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDamage, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001A8, "Member 'BP_ActionNooseTrap_C_OnDamage::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnDead
// 0x0060 (0x0060 - 0x0000)
struct BP_ActionNooseTrap_C_OnDead final
{
public:
	struct FPalDeadInfo                           DeadInfo;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_OnDead) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_OnDead");
static_assert(sizeof(BP_ActionNooseTrap_C_OnDead) == 0x000060, "Wrong size on BP_ActionNooseTrap_C_OnDead");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDead, DeadInfo) == 0x000000, "Member 'BP_ActionNooseTrap_C_OnDead::DeadInfo' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDead, CallFunc_FindMontage_Montage) == 0x000050, "Member 'BP_ActionNooseTrap_C_OnDead::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnDead, CallFunc_GetActionCharacter_ReturnValue) == 0x000058, "Member 'BP_ActionNooseTrap_C_OnDead::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnFinishAcion
// 0x0068 (0x0068 - 0x0000)
struct BP_ActionNooseTrap_C_OnFinishAcion final
{
public:
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_1;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APalCharacter*                          CallFunc_GetActionCharacter_ReturnValue_2;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_OnFinishAcion) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_OnFinishAcion");
static_assert(sizeof(BP_ActionNooseTrap_C_OnFinishAcion) == 0x000068, "Wrong size on BP_ActionNooseTrap_C_OnFinishAcion");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_GetActionCharacter_ReturnValue) == 0x000000, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_GetActionCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_FindMontage_Montage) == 0x000008, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000010, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_GetActionCharacter_ReturnValue_1) == 0x000028, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_GetActionCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_GetActionCharacter_ReturnValue_2) == 0x000058, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_GetActionCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnFinishAcion, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000060, "Member 'BP_ActionNooseTrap_C_OnFinishAcion::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.OnStatusAdd
// 0x0020 (0x0020 - 0x0000)
struct BP_ActionNooseTrap_C_OnStatusAdd final
{
public:
	const class UPalStatusComponent*              StatusComponent;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalStatusID                                  StatusId;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalStatusBase*                         Status;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_OnStatusAdd) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_OnStatusAdd");
static_assert(sizeof(BP_ActionNooseTrap_C_OnStatusAdd) == 0x000020, "Wrong size on BP_ActionNooseTrap_C_OnStatusAdd");
static_assert(offsetof(BP_ActionNooseTrap_C_OnStatusAdd, StatusComponent) == 0x000000, "Member 'BP_ActionNooseTrap_C_OnStatusAdd::StatusComponent' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnStatusAdd, StatusId) == 0x000008, "Member 'BP_ActionNooseTrap_C_OnStatusAdd::StatusId' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnStatusAdd, Status) == 0x000010, "Member 'BP_ActionNooseTrap_C_OnStatusAdd::Status' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_OnStatusAdd, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_OnStatusAdd::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.TickAction
// 0x0004 (0x0004 - 0x0000)
struct BP_ActionNooseTrap_C_TickAction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_TickAction) == 0x000004, "Wrong alignment on BP_ActionNooseTrap_C_TickAction");
static_assert(sizeof(BP_ActionNooseTrap_C_TickAction) == 0x000004, "Wrong size on BP_ActionNooseTrap_C_TickAction");
static_assert(offsetof(BP_ActionNooseTrap_C_TickAction, DeltaTime) == 0x000000, "Member 'BP_ActionNooseTrap_C_TickAction::DeltaTime' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateAngle_Swing
// 0x0010 (0x0010 - 0x0000)
struct BP_ActionNooseTrap_C_UpdateAngle_Swing final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_UpdateAngle_Swing) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_UpdateAngle_Swing");
static_assert(sizeof(BP_ActionNooseTrap_C_UpdateAngle_Swing) == 0x000010, "Wrong size on BP_ActionNooseTrap_C_UpdateAngle_Swing");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateAngle_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_ActionNooseTrap_C_UpdateAngle_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateAngle_Swing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_UpdateAngle_Swing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateRopePos_Swing
// 0x01D8 (0x01D8 - 0x0000)
struct BP_ActionNooseTrap_C_UpdateRopePos_Swing final
{
public:
	struct FVector                                CenterPos;                                         // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC5[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cos_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sin_ReturnValue;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_UpdateRopePos_Swing) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_UpdateRopePos_Swing");
static_assert(sizeof(BP_ActionNooseTrap_C_UpdateRopePos_Swing) == 0x0001D8, "Wrong size on BP_ActionNooseTrap_C_UpdateRopePos_Swing");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CenterPos) == 0x000000, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CenterPos' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_GetActionTarget_ReturnValue) == 0x000018, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_GetActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_RadiansToDegrees_ReturnValue) == 0x000068, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Cos_ReturnValue) == 0x000078, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Cos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Sin_ReturnValue) == 0x000088, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Sin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000098, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeRotator_ReturnValue) == 0x0000C0, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_RLerp_ReturnValue) == 0x0000D8, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000F8, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000100, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeVector_ReturnValue) == 0x000130, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000148, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_X_1) == 0x000160, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_Y_1) == 0x000168, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_BreakVector_Z_1) == 0x000170, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeVector_ReturnValue_1) == 0x000190, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A8, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001C0, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001C8, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0001CC, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePos_Swing, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0001D0, "Member 'BP_ActionNooseTrap_C_UpdateRopePos_Swing::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function BP_ActionNooseTrap.BP_ActionNooseTrap_C.UpdateRopePosToUp
// 0x00D0 (0x00D0 - 0x0000)
struct BP_ActionNooseTrap_C_UpdateRopePosToUp final
{
public:
	class AActor*                                 CallFunc_GetActionTarget_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CC6[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ActionNooseTrap_C_UpdateRopePosToUp) == 0x000008, "Wrong alignment on BP_ActionNooseTrap_C_UpdateRopePosToUp");
static_assert(sizeof(BP_ActionNooseTrap_C_UpdateRopePosToUp) == 0x0000D0, "Wrong size on BP_ActionNooseTrap_C_UpdateRopePosToUp");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_GetActionTarget_ReturnValue) == 0x000000, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_GetActionTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00002C, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_RLerp_ReturnValue) == 0x000068, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_VLerp_ReturnValue) == 0x0000A0, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000C0, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_RLerp_Alpha_ImplicitCast) == 0x0000C4, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ActionNooseTrap_C_UpdateRopePosToUp, CallFunc_VLerp_Alpha_ImplicitCast) == 0x0000C8, "Member 'BP_ActionNooseTrap_C_UpdateRopePosToUp::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

}

