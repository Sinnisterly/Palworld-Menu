#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_LoupeBase

#include "Basic.hpp"

#include "WBP_LoupeBase_classes.hpp"
#include "WBP_LoupeBase_parameters.hpp"


namespace SDK
{

// Function WBP_LoupeBase.WBP_LoupeBase_C.AdjustAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        FinalScreenPos                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Alpha                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::AdjustAlpha(const struct FVector2D& FinalScreenPos, double* Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "AdjustAlpha");

	Params::WBP_LoupeBase_C_AdjustAlpha Parms{};

	Parms.FinalScreenPos = std::move(FinalScreenPos);

	UObject::ProcessEvent(Func, &Parms);

	if (Alpha != nullptr)
		*Alpha = Parms.Alpha;
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.GetLoupeWidgetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Param_WidgetSize                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::GetLoupeWidgetSize(struct FVector2D* Param_WidgetSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "GetLoupeWidgetSize");

	Params::WBP_LoupeBase_C_GetLoupeWidgetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_WidgetSize != nullptr)
		*Param_WidgetSize = std::move(Parms.Param_WidgetSize);
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.GetTranslationTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWidget*                          Widget                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::GetTranslationTarget(class UWidget** Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "GetTranslationTarget");

	Params::WBP_LoupeBase_C_GetTranslationTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Widget != nullptr)
		*Widget = Parms.Widget;
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.RoundScreenPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        CalcedPosition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::RoundScreenPosition(const struct FVector2D& ScreenPosition, struct FVector2D* CalcedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "RoundScreenPosition");

	Params::WBP_LoupeBase_C_RoundScreenPosition Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (CalcedPosition != nullptr)
		*CalcedPosition = std::move(Parms.CalcedPosition);
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.SetFinalWidgetOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CalcedOpacity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::SetFinalWidgetOpacity(double CalcedOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "SetFinalWidgetOpacity");

	Params::WBP_LoupeBase_C_SetFinalWidgetOpacity Parms{};

	Parms.CalcedOpacity = CalcedOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdateArrowImageAngle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  NewAngle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::UpdateArrowImageAngle(double NewAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "UpdateArrowImageAngle");

	Params::WBP_LoupeBase_C_UpdateArrowImageAngle Parms{};

	Parms.NewAngle = NewAngle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdateLoupeTranslation
// (Private, BlueprintCallable, BlueprintEvent)

void UWBP_LoupeBase_C::UpdateLoupeTranslation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "UpdateLoupeTranslation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_LoupeBase.WBP_LoupeBase_C.UpdatePositionAndVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Dot                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          RootLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          TargetLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_LoupeBase_C::UpdatePositionAndVisibility(double Dot, const struct FVector& RootLocation, const struct FVector& TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_LoupeBase_C", "UpdatePositionAndVisibility");

	Params::WBP_LoupeBase_C_UpdatePositionAndVisibility Parms{};

	Parms.Dot = Dot;
	Parms.RootLocation = std::move(RootLocation);
	Parms.TargetLocation = std::move(TargetLocation);

	UObject::ProcessEvent(Func, &Parms);
}

}

