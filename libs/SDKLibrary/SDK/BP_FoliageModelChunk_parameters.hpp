#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FoliageModelChunk

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FoliageModelChunk.BP_FoliageModelChunk_C.ExecuteUbergraph_BP_FoliageModelChunk
// 0x0030 (0x0030 - 0x0000)
struct BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NewChunkGridSize;                     // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk) == 0x000008, "Wrong alignment on BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk");
static_assert(sizeof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk) == 0x000030, "Wrong size on BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, EntryPoint) == 0x000000, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, K2Node_Event_NewChunkGridSize) == 0x000004, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::K2Node_Event_NewChunkGridSize' has a wrong offset!");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, CallFunc_Divide_IntInt_ReturnValue) == 0x000008, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_FoliageModelChunk_C_ExecuteUbergraph_BP_FoliageModelChunk::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_FoliageModelChunk.BP_FoliageModelChunk_C.OnReceivedChunkGridSize
// 0x0004 (0x0004 - 0x0000)
struct BP_FoliageModelChunk_C_OnReceivedChunkGridSize final
{
public:
	int32                                         NewChunkGridSize;                                  // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FoliageModelChunk_C_OnReceivedChunkGridSize) == 0x000004, "Wrong alignment on BP_FoliageModelChunk_C_OnReceivedChunkGridSize");
static_assert(sizeof(BP_FoliageModelChunk_C_OnReceivedChunkGridSize) == 0x000004, "Wrong size on BP_FoliageModelChunk_C_OnReceivedChunkGridSize");
static_assert(offsetof(BP_FoliageModelChunk_C_OnReceivedChunkGridSize, NewChunkGridSize) == 0x000000, "Member 'BP_FoliageModelChunk_C_OnReceivedChunkGridSize::NewChunkGridSize' has a wrong offset!");

}

