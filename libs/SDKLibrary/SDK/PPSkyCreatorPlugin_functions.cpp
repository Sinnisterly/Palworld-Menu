#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PPSkyCreatorPlugin

#include "Basic.hpp"

#include "PPSkyCreatorPlugin_classes.hpp"
#include "PPSkyCreatorPlugin_parameters.hpp"


namespace SDK
{

// Function PPSkyCreatorPlugin.PPSkyCreator.FindLightningPosition
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool APPSkyCreator::FindLightningPosition(const struct FVector& Position, struct FVector* OutPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "FindLightningPosition");

	Params::PPSkyCreator_FindLightningPosition Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetCloudDensityAtPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APPSkyCreator::GetCloudDensityAtPosition(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetCloudDensityAtPosition");

	Params::PPSkyCreator_GetCloudDensityAtPosition Parms{};

	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetLastLightningPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector APPSkyCreator::GetLastLightningPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetLastLightningPosition");

	Params::PPSkyCreator_GetLastLightningPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetMoonPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator APPSkyCreator::GetMoonPosition(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetMoonPosition");

	Params::PPSkyCreator_GetMoonPosition Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetSunPosition
// (Final, Native, Public, HasDefaults)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator APPSkyCreator::GetSunPosition(float Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetSunPosition");

	Params::PPSkyCreator_GetSunPosition Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpBackgroundCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettingsA                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettingsB                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpBackgroundCloudSettings(const struct FPPSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettingsA, const struct FPPSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpBackgroundCloudSettings");

	Params::PPSkyCreator_LerpBackgroundCloudSettings Parms{};

	Parms.InBackgroundCloudSettingsA = std::move(InBackgroundCloudSettingsA);
	Parms.InBackgroundCloudSettingsB = std::move(InBackgroundCloudSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpExponentialHeightFogSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettingsA                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettingsB                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpExponentialHeightFogSettings(const struct FPPSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettingsA, const struct FPPSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpExponentialHeightFogSettings");

	Params::PPSkyCreator_LerpExponentialHeightFogSettings Parms{};

	Parms.InExponentialHeightFogSettingsA = std::move(InExponentialHeightFogSettingsA);
	Parms.InExponentialHeightFogSettingsB = std::move(InExponentialHeightFogSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpMoonLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorMoonLightSettings   InMoonLightSettingsA                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorMoonLightSettings   InMoonLightSettingsB                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpMoonLightSettings(const struct FPPSkyCreatorMoonLightSettings& InMoonLightSettingsA, const struct FPPSkyCreatorMoonLightSettings& InMoonLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpMoonLightSettings");

	Params::PPSkyCreator_LerpMoonLightSettings Parms{};

	Parms.InMoonLightSettingsA = std::move(InMoonLightSettingsA);
	Parms.InMoonLightSettingsB = std::move(InMoonLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpPostProcessSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorPostProcessSettings InPostProcessSettingsA                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorPostProcessSettings InPostProcessSettingsB                                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpPostProcessSettings(const struct FPPSkyCreatorPostProcessSettings& InPostProcessSettingsA, const struct FPPSkyCreatorPostProcessSettings& InPostProcessSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpPostProcessSettings");

	Params::PPSkyCreator_LerpPostProcessSettings Parms{};

	Parms.InPostProcessSettingsA = std::move(InPostProcessSettingsA);
	Parms.InPostProcessSettingsB = std::move(InPostProcessSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpPuddlesAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   PuddlesAmountA                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PuddlesAmountB                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpPuddlesAmount(float PuddlesAmountA, float PuddlesAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpPuddlesAmount");

	Params::PPSkyCreator_LerpPuddlesAmount Parms{};

	Parms.PuddlesAmountA = PuddlesAmountA;
	Parms.PuddlesAmountB = PuddlesAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpSkyAtmosphereSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSkyAtmosphereSettingsInSkyAtmosphereSettingsA                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorSkyAtmosphereSettingsInSkyAtmosphereSettingsB                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpSkyAtmosphereSettings(const struct FPPSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettingsA, const struct FPPSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpSkyAtmosphereSettings");

	Params::PPSkyCreator_LerpSkyAtmosphereSettings Parms{};

	Parms.InSkyAtmosphereSettingsA = std::move(InSkyAtmosphereSettingsA);
	Parms.InSkyAtmosphereSettingsB = std::move(InSkyAtmosphereSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpSkyLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSkyLightSettings    InSkyLightSettingsA                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorSkyLightSettings    InSkyLightSettingsB                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpSkyLightSettings(const struct FPPSkyCreatorSkyLightSettings& InSkyLightSettingsA, const struct FPPSkyCreatorSkyLightSettings& InSkyLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpSkyLightSettings");

	Params::PPSkyCreator_LerpSkyLightSettings Parms{};

	Parms.InSkyLightSettingsA = std::move(InSkyLightSettingsA);
	Parms.InSkyLightSettingsB = std::move(InSkyLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpSnowAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   SnowAmountA                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SnowAmountB                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpSnowAmount(float SnowAmountA, float SnowAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpSnowAmount");

	Params::PPSkyCreator_LerpSnowAmount Parms{};

	Parms.SnowAmountA = SnowAmountA;
	Parms.SnowAmountB = SnowAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpStarMapSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorStarMapSettings     InStarMapSettingsA                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorStarMapSettings     InStarMapSettingsB                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpStarMapSettings(const struct FPPSkyCreatorStarMapSettings& InStarMapSettingsA, const struct FPPSkyCreatorStarMapSettings& InStarMapSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpStarMapSettings");

	Params::PPSkyCreator_LerpStarMapSettings Parms{};

	Parms.InStarMapSettingsA = std::move(InStarMapSettingsA);
	Parms.InStarMapSettingsB = std::move(InStarMapSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpSunLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSunLightSettings    InSunLightSettingsA                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorSunLightSettings    InSunLightSettingsB                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpSunLightSettings(const struct FPPSkyCreatorSunLightSettings& InSunLightSettingsA, const struct FPPSkyCreatorSunLightSettings& InSunLightSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpSunLightSettings");

	Params::PPSkyCreator_LerpSunLightSettings Parms{};

	Parms.InSunLightSettingsA = std::move(InSunLightSettingsA);
	Parms.InSunLightSettingsB = std::move(InSunLightSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpVolumetricCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettingsA                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettingsB                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpVolumetricCloudSettings(const struct FPPSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettingsA, const struct FPPSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpVolumetricCloudSettings");

	Params::PPSkyCreator_LerpVolumetricCloudSettings Parms{};

	Parms.InVolumetricCloudSettingsA = std::move(InVolumetricCloudSettingsA);
	Parms.InVolumetricCloudSettingsB = std::move(InVolumetricCloudSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWeatherFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherFXSettings   InWeatherFXSettingsA                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorWeatherFXSettings   InWeatherFXSettingsB                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWeatherFXSettings(const struct FPPSkyCreatorWeatherFXSettings& InWeatherFXSettingsA, const struct FPPSkyCreatorWeatherFXSettings& InWeatherFXSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWeatherFXSettings");

	Params::PPSkyCreator_LerpWeatherFXSettings Parms{};

	Parms.InWeatherFXSettingsA = std::move(InWeatherFXSettingsA);
	Parms.InWeatherFXSettingsB = std::move(InWeatherFXSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWeatherMaterialFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettingsA                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettingsB                           (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWeatherMaterialFXSettings(const struct FPPSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettingsA, const struct FPPSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWeatherMaterialFXSettings");

	Params::PPSkyCreator_LerpWeatherMaterialFXSettings Parms{};

	Parms.InWeatherMaterialFXSettingsA = std::move(InWeatherMaterialFXSettingsA);
	Parms.InWeatherMaterialFXSettingsB = std::move(InWeatherMaterialFXSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWeatherSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherSettings     InWeatherSettingsA                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorWeatherSettings     InWeatherSettingsB                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWeatherSettings(const struct FPPSkyCreatorWeatherSettings& InWeatherSettingsA, const struct FPPSkyCreatorWeatherSettings& InWeatherSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWeatherSettings");

	Params::PPSkyCreator_LerpWeatherSettings Parms{};

	Parms.InWeatherSettingsA = std::move(InWeatherSettingsA);
	Parms.InWeatherSettingsB = std::move(InWeatherSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWetnessAmount
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   WetnessAmountA                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WetnessAmountB                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWetnessAmount(float WetnessAmountA, float WetnessAmountB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWetnessAmount");

	Params::PPSkyCreator_LerpWetnessAmount Parms{};

	Parms.WetnessAmountA = WetnessAmountA;
	Parms.WetnessAmountB = WetnessAmountB;
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWindIndependentSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWindSettings        InWindSettingsA                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorWindSettings        InWindSettingsB                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWindIndependentSettings(const struct FPPSkyCreatorWindSettings& InWindSettingsA, const struct FPPSkyCreatorWindSettings& InWindSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWindIndependentSettings");

	Params::PPSkyCreator_LerpWindIndependentSettings Parms{};

	Parms.InWindSettingsA = std::move(InWindSettingsA);
	Parms.InWindSettingsB = std::move(InWindSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.LerpWindSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWindSettings        InWindSettingsA                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FPPSkyCreatorWindSettings        InWindSettingsB                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Alpha                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::LerpWindSettings(const struct FPPSkyCreatorWindSettings& InWindSettingsA, const struct FPPSkyCreatorWindSettings& InWindSettingsB, float Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "LerpWindSettings");

	Params::PPSkyCreator_LerpWindSettings Parms{};

	Parms.InWindSettingsA = std::move(InWindSettingsA);
	Parms.InWindSettingsB = std::move(InWindSettingsB);
	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.OnRep_UpdateTime
// (Final, Native, Private)

void APPSkyCreator::OnRep_UpdateTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "OnRep_UpdateTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.OnRep_UpdateWeather
// (Final, Native, Private)

void APPSkyCreator::OnRep_UpdateWeather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "OnRep_UpdateWeather");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.RealtimeTimeOfDay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DayCycleDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::RealtimeTimeOfDay(float DeltaSeconds, float DayCycleDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "RealtimeTimeOfDay");

	Params::PPSkyCreator_RealtimeTimeOfDay Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.DayCycleDuration = DayCycleDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetBackgroundCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorBackgroundCloudSettingsInBackgroundCloudSettings                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetBackgroundCloudSettings(const struct FPPSkyCreatorBackgroundCloudSettings& InBackgroundCloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetBackgroundCloudSettings");

	Params::PPSkyCreator_SetBackgroundCloudSettings Parms{};

	Parms.InBackgroundCloudSettings = std::move(InBackgroundCloudSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetbDaylightSavingTime
// (Final, Native, Public)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetbDaylightSavingTime(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetbDaylightSavingTime");

	Params::PPSkyCreator_SetbDaylightSavingTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetCloudMapOffset
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector2D                        NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetCloudMapOffset(const struct FVector2D& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetCloudMapOffset");

	Params::PPSkyCreator_SetCloudMapOffset Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetDay
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetDay(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetDay");

	Params::PPSkyCreator_SetDay Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetEditorTimeOfDay
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetEditorTimeOfDay(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetEditorTimeOfDay");

	Params::PPSkyCreator_SetEditorTimeOfDay Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetEditorWeatherPreset
// (Final, Native, Public)
// Parameters:
// class UPPSkyCreatorWeatherPreset*       NewValue                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetEditorWeatherPreset(class UPPSkyCreatorWeatherPreset* NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetEditorWeatherPreset");

	Params::PPSkyCreator_SetEditorWeatherPreset Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetEditorWeatherSettings
// (Final, Native, Public)
// Parameters:
// struct FPPSkyCreatorWeatherSettings     NewValue                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetEditorWeatherSettings(const struct FPPSkyCreatorWeatherSettings& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetEditorWeatherSettings");

	Params::PPSkyCreator_SetEditorWeatherSettings Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetExponentialHeightFogSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorExponentialHeightFogSettingsInExponentialHeightFogSettings                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetExponentialHeightFogSettings(const struct FPPSkyCreatorExponentialHeightFogSettings& InExponentialHeightFogSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetExponentialHeightFogSettings");

	Params::PPSkyCreator_SetExponentialHeightFogSettings Parms{};

	Parms.InExponentialHeightFogSettings = std::move(InExponentialHeightFogSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetLatitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetLatitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetLatitude");

	Params::PPSkyCreator_SetLatitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetLayerBottomAltitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetLayerBottomAltitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetLayerBottomAltitude");

	Params::PPSkyCreator_SetLayerBottomAltitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetLayerHeight
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetLayerHeight(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetLayerHeight");

	Params::PPSkyCreator_SetLayerHeight Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetLongitude
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetLongitude(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetLongitude");

	Params::PPSkyCreator_SetLongitude Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMonth
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMonth(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMonth");

	Params::PPSkyCreator_SetMonth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonAtmosphereDiskColorScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FLinearColor                     NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonAtmosphereDiskColorScale(const struct FLinearColor& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonAtmosphereDiskColorScale");

	Params::PPSkyCreator_SetMoonAtmosphereDiskColorScale Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonAzimuth
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonAzimuth(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonAzimuth");

	Params::PPSkyCreator_SetMoonAzimuth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonDiskSize
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonDiskSize(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonDiskSize");

	Params::PPSkyCreator_SetMoonDiskSize Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonElevation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonElevation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonElevation");

	Params::PPSkyCreator_SetMoonElevation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonIntensity
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonIntensity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonIntensity");

	Params::PPSkyCreator_SetMoonIntensity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorMoonLightSettings   InMoonLightSettings                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonLightSettings(const struct FPPSkyCreatorMoonLightSettings& InMoonLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonLightSettings");

	Params::PPSkyCreator_SetMoonLightSettings Parms{};

	Parms.InMoonLightSettings = std::move(InMoonLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonPhase
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonPhase(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonPhase");

	Params::PPSkyCreator_SetMoonPhase Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonriseTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonriseTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonriseTime");

	Params::PPSkyCreator_SetMoonriseTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonRotation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonRotation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonRotation");

	Params::PPSkyCreator_SetMoonRotation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonsetTime");

	Params::PPSkyCreator_SetMoonsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetMoonSimplePositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMoonriseTime                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonsetTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonElevation                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InMoonAzimuth                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetMoonSimplePositionSettings(const float InMoonriseTime, const float InMoonsetTime, const float InMoonElevation, const float InMoonAzimuth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetMoonSimplePositionSettings");

	Params::PPSkyCreator_SetMoonSimplePositionSettings Parms{};

	Parms.InMoonriseTime = InMoonriseTime;
	Parms.InMoonsetTime = InMoonsetTime;
	Parms.InMoonElevation = InMoonElevation;
	Parms.InMoonAzimuth = InMoonAzimuth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetPostProcessSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorPostProcessSettings InPostProcessSettings                                  (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetPostProcessSettings(const struct FPPSkyCreatorPostProcessSettings& InPostProcessSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetPostProcessSettings");

	Params::PPSkyCreator_SetPostProcessSettings Parms{};

	Parms.InPostProcessSettings = std::move(InPostProcessSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetRealPositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InLatitude                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InLongitude                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTimeZone                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InbDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InYear                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InMonth                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InDay                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetRealPositionSettings(const float InLatitude, const float InLongitude, const float InTimeZone, const bool InbDaylightSavingTime, const int32 InYear, const int32 InMonth, const int32 InDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetRealPositionSettings");

	Params::PPSkyCreator_SetRealPositionSettings Parms{};

	Parms.InLatitude = InLatitude;
	Parms.InLongitude = InLongitude;
	Parms.InTimeZone = InTimeZone;
	Parms.InbDaylightSavingTime = InbDaylightSavingTime;
	Parms.InYear = InYear;
	Parms.InMonth = InMonth;
	Parms.InDay = InDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSkyAtmosphereSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSkyAtmosphereSettingsInSkyAtmosphereSettings                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSkyAtmosphereSettings(const struct FPPSkyCreatorSkyAtmosphereSettings& InSkyAtmosphereSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSkyAtmosphereSettings");

	Params::PPSkyCreator_SetSkyAtmosphereSettings Parms{};

	Parms.InSkyAtmosphereSettings = std::move(InSkyAtmosphereSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSkyLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSkyLightSettings    InSkyLightSettings                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSkyLightSettings(const struct FPPSkyCreatorSkyLightSettings& InSkyLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSkyLightSettings");

	Params::PPSkyCreator_SetSkyLightSettings Parms{};

	Parms.InSkyLightSettings = std::move(InSkyLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetStarMapAdditionalRotation
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FVector                          NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetStarMapAdditionalRotation(const struct FVector& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetStarMapAdditionalRotation");

	Params::PPSkyCreator_SetStarMapAdditionalRotation Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetStarMapSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorStarMapSettings     InStarMapSettings                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetStarMapSettings(const struct FPPSkyCreatorStarMapSettings& InStarMapSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetStarMapSettings");

	Params::PPSkyCreator_SetStarMapSettings Parms{};

	Parms.InStarMapSettings = std::move(InStarMapSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunAtmosphereDiskColorScale
// (Final, Native, Public, HasDefaults)
// Parameters:
// struct FLinearColor                     NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunAtmosphereDiskColorScale(const struct FLinearColor& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunAtmosphereDiskColorScale");

	Params::PPSkyCreator_SetSunAtmosphereDiskColorScale Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunAzimuth
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunAzimuth(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunAzimuth");

	Params::PPSkyCreator_SetSunAzimuth Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunDawnOffsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunDawnOffsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunDawnOffsetTime");

	Params::PPSkyCreator_SetSunDawnOffsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunDiskSize
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunDiskSize(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunDiskSize");

	Params::PPSkyCreator_SetSunDiskSize Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunDuskOffsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunDuskOffsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunDuskOffsetTime");

	Params::PPSkyCreator_SetSunDuskOffsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunElevation
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunElevation(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunElevation");

	Params::PPSkyCreator_SetSunElevation Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunIntensity
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunIntensity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunIntensity");

	Params::PPSkyCreator_SetSunIntensity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunLightSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorSunLightSettings    InSunLightSettings                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunLightSettings(const struct FPPSkyCreatorSunLightSettings& InSunLightSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunLightSettings");

	Params::PPSkyCreator_SetSunLightSettings Parms{};

	Parms.InSunLightSettings = std::move(InSunLightSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunMinAngleAtDawnDusk
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunMinAngleAtDawnDusk(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunMinAngleAtDawnDusk");

	Params::PPSkyCreator_SetSunMinAngleAtDawnDusk Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunriseTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunriseTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunriseTime");

	Params::PPSkyCreator_SetSunriseTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunsetTime
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunsetTime(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunsetTime");

	Params::PPSkyCreator_SetSunsetTime Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetSunSimplePositionSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InSunriseTime                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunsetTime                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunElevation                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSunAzimuth                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetSunSimplePositionSettings(const float InSunriseTime, const float InSunsetTime, const float InSunElevation, const float InSunAzimuth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetSunSimplePositionSettings");

	Params::PPSkyCreator_SetSunSimplePositionSettings Parms{};

	Parms.InSunriseTime = InSunriseTime;
	Parms.InSunsetTime = InSunsetTime;
	Parms.InSunElevation = InSunElevation;
	Parms.InSunAzimuth = InSunAzimuth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetTime(float InTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetTime");

	Params::PPSkyCreator_SetTime Parms{};

	Parms.InTime = InTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetTimeZone
// (Final, Native, Public)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetTimeZone(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetTimeZone");

	Params::PPSkyCreator_SetTimeZone Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetVolumetricCloudSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorVolumetricCloudSettingsInVolumetricCloudSettings                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetVolumetricCloudSettings(const struct FPPSkyCreatorVolumetricCloudSettings& InVolumetricCloudSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetVolumetricCloudSettings");

	Params::PPSkyCreator_SetVolumetricCloudSettings Parms{};

	Parms.InVolumetricCloudSettings = std::move(InVolumetricCloudSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetWeatherFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherFXSettings   InWeatherFXSettings                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetWeatherFXSettings(const struct FPPSkyCreatorWeatherFXSettings& InWeatherFXSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetWeatherFXSettings");

	Params::PPSkyCreator_SetWeatherFXSettings Parms{};

	Parms.InWeatherFXSettings = std::move(InWeatherFXSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetWeatherMaterialFXSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherMaterialFXSettingsInWeatherMaterialFXSettings                            (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetWeatherMaterialFXSettings(const struct FPPSkyCreatorWeatherMaterialFXSettings& InWeatherMaterialFXSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetWeatherMaterialFXSettings");

	Params::PPSkyCreator_SetWeatherMaterialFXSettings Parms{};

	Parms.InWeatherMaterialFXSettings = std::move(InWeatherMaterialFXSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetWeatherSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWeatherSettings     InWeatherSettings                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetWeatherSettings(const struct FPPSkyCreatorWeatherSettings& InWeatherSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetWeatherSettings");

	Params::PPSkyCreator_SetWeatherSettings Parms{};

	Parms.InWeatherSettings = std::move(InWeatherSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetWindIndependentSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWindSettings        InWindSettings                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetWindIndependentSettings(const struct FPPSkyCreatorWindSettings& InWindSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetWindIndependentSettings");

	Params::PPSkyCreator_SetWindIndependentSettings Parms{};

	Parms.InWindSettings = std::move(InWindSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetWindSettings
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FPPSkyCreatorWindSettings        InWindSettings                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void APPSkyCreator::SetWindSettings(const struct FPPSkyCreatorWindSettings& InWindSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetWindSettings");

	Params::PPSkyCreator_SetWindSettings Parms{};

	Parms.InWindSettings = std::move(InWindSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SetYear
// (Final, Native, Public)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SetYear(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SetYear");

	Params::PPSkyCreator_SetYear Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.SpawnLightningStrike
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LightningPosition                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APPSkyCreator::SpawnLightningStrike(const struct FVector& LightningPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "SpawnLightningStrike");

	Params::PPSkyCreator_SpawnLightningStrike Parms{};

	Parms.LightningPosition = std::move(LightningPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.UpdateSettingsSequencer
// (Final, Native, Public)

void APPSkyCreator::UpdateSettingsSequencer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "UpdateSettingsSequencer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetBackgroundCloudSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorBackgroundCloudSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorBackgroundCloudSettings APPSkyCreator::GetBackgroundCloudSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetBackgroundCloudSettings");

	Params::PPSkyCreator_GetBackgroundCloudSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetExponentialHeightFogSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorExponentialHeightFogSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorExponentialHeightFogSettings APPSkyCreator::GetExponentialHeightFogSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetExponentialHeightFogSettings");

	Params::PPSkyCreator_GetExponentialHeightFogSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetMoonLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorMoonLightSettings   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorMoonLightSettings APPSkyCreator::GetMoonLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetMoonLightSettings");

	Params::PPSkyCreator_GetMoonLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetMoonPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APPSkyCreator::GetMoonPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetMoonPhase");

	Params::PPSkyCreator_GetMoonPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetPostProcessSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorPostProcessSettings ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorPostProcessSettings APPSkyCreator::GetPostProcessSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetPostProcessSettings");

	Params::PPSkyCreator_GetPostProcessSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetSkyAtmosphereSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorSkyAtmosphereSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorSkyAtmosphereSettings APPSkyCreator::GetSkyAtmosphereSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetSkyAtmosphereSettings");

	Params::PPSkyCreator_GetSkyAtmosphereSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetSkyLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorSkyLightSettings    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorSkyLightSettings APPSkyCreator::GetSkyLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetSkyLightSettings");

	Params::PPSkyCreator_GetSkyLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetStarMapRotation
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator APPSkyCreator::GetStarMapRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetStarMapRotation");

	Params::PPSkyCreator_GetStarMapRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetStarMapSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorStarMapSettings     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorStarMapSettings APPSkyCreator::GetStarMapSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetStarMapSettings");

	Params::PPSkyCreator_GetStarMapSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetSunLightSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorSunLightSettings    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorSunLightSettings APPSkyCreator::GetSunLightSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetSunLightSettings");

	Params::PPSkyCreator_GetSunLightSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float APPSkyCreator::GetTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetTime");

	Params::PPSkyCreator_GetTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetVolumetricCloudSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorVolumetricCloudSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorVolumetricCloudSettings APPSkyCreator::GetVolumetricCloudSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetVolumetricCloudSettings");

	Params::PPSkyCreator_GetVolumetricCloudSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetWeatherFXSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorWeatherFXSettings   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorWeatherFXSettings APPSkyCreator::GetWeatherFXSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetWeatherFXSettings");

	Params::PPSkyCreator_GetWeatherFXSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetWeatherMaterialFXSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorWeatherMaterialFXSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorWeatherMaterialFXSettings APPSkyCreator::GetWeatherMaterialFXSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetWeatherMaterialFXSettings");

	Params::PPSkyCreator_GetWeatherMaterialFXSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetWeatherSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorWeatherSettings     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorWeatherSettings APPSkyCreator::GetWeatherSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetWeatherSettings");

	Params::PPSkyCreator_GetWeatherSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreator.GetWindSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FPPSkyCreatorWindSettings        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorWindSettings APPSkyCreator::GetWindSettings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreator", "GetWindSettings");

	Params::PPSkyCreator_GetWindSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.CentimetersToKilometers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPPSkyCreatorFunctionLibrary::CentimetersToKilometers(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "CentimetersToKilometers");

	Params::PPSkyCreatorFunctionLibrary_CentimetersToKilometers Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.CheckCloudDensityAtPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPPSkyCreatorFunctionLibrary::CheckCloudDensityAtPosition(class UObject* WorldContextObject, const struct FVector& Position, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "CheckCloudDensityAtPosition");

	Params::PPSkyCreatorFunctionLibrary_CheckCloudDensityAtPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.ConvertRenderTargetToTexture2D
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPPSkyCreatorFunctionLibrary::ConvertRenderTargetToTexture2D(class UTextureRenderTarget2D* RenderTarget, class UTexture2D** Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "ConvertRenderTargetToTexture2D");

	Params::PPSkyCreatorFunctionLibrary_ConvertRenderTargetToTexture2D Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Texture != nullptr)
		*Texture = Parms.Texture;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.CreateAndAssignMID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               InMaterial                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         InMID                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPPSkyCreatorFunctionLibrary::CreateAndAssignMID(class UObject* WorldContextObject, class UMaterialInterface* InMaterial, class UMaterialInstanceDynamic** InMID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "CreateAndAssignMID");

	Params::PPSkyCreatorFunctionLibrary_CreateAndAssignMID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMaterial = InMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InMID != nullptr)
		*InMID = Parms.InMID;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.ElevationRefraction
// (Final, Native, Static, Private)
// Parameters:
// double                                  F                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UPPSkyCreatorFunctionLibrary::ElevationRefraction(double F)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "ElevationRefraction");

	Params::PPSkyCreatorFunctionLibrary_ElevationRefraction Parms{};

	Parms.F = F;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.FindLightningPosition
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSampleCloudDensity                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Samples                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InnerRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OuterRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxHeight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DensityThreshold                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutPosition                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPPSkyCreatorFunctionLibrary::FindLightningPosition(class UObject* WorldContextObject, bool bSampleCloudDensity, int32 Samples, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget, const struct FVector& Position, float InnerRadius, float OuterRadius, float MinHeight, float MaxHeight, float DensityThreshold, struct FVector* OutPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "FindLightningPosition");

	Params::PPSkyCreatorFunctionLibrary_FindLightningPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bSampleCloudDensity = bSampleCloudDensity;
	Parms.Samples = Samples;
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;
	Parms.Position = std::move(Position);
	Parms.InnerRadius = InnerRadius;
	Parms.OuterRadius = OuterRadius;
	Parms.MinHeight = MinHeight;
	Parms.MaxHeight = MaxHeight;
	Parms.DensityThreshold = DensityThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPosition != nullptr)
		*OutPosition = std::move(Parms.OutPosition);

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.GetCloudDensityAtPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialParameterCollection*     ParameterCollection                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*               Material                                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPPSkyCreatorFunctionLibrary::GetCloudDensityAtPosition(class UObject* WorldContextObject, const struct FVector& Position, class UMaterialParameterCollection* ParameterCollection, class UMaterialInterface* Material, class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "GetCloudDensityAtPosition");

	Params::PPSkyCreatorFunctionLibrary_GetCloudDensityAtPosition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);
	Parms.ParameterCollection = ParameterCollection;
	Parms.Material = Material;
	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.GetRealMoonPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Latitude                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeZone                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        DateTime                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPPCelestialPositionData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPCelestialPositionData UPPSkyCreatorFunctionLibrary::GetRealMoonPosition(const float Latitude, const float Longitude, const float TimeZone, const bool bIsDaylightSavingTime, const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "GetRealMoonPosition");

	Params::PPSkyCreatorFunctionLibrary_GetRealMoonPosition Parms{};

	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.TimeZone = TimeZone;
	Parms.bIsDaylightSavingTime = bIsDaylightSavingTime;
	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.GetRealSunPosition
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Latitude                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Longitude                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeZone                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDaylightSavingTime                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        DateTime                                               (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPPCelestialPositionData         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPCelestialPositionData UPPSkyCreatorFunctionLibrary::GetRealSunPosition(const float Latitude, const float Longitude, const float TimeZone, const bool bIsDaylightSavingTime, const struct FDateTime& DateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "GetRealSunPosition");

	Params::PPSkyCreatorFunctionLibrary_GetRealSunPosition Parms{};

	Parms.Latitude = Latitude;
	Parms.Longitude = Longitude;
	Parms.TimeZone = TimeZone;
	Parms.bIsDaylightSavingTime = bIsDaylightSavingTime;
	Parms.DateTime = std::move(DateTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.IsApplicationForegroundNow
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPPSkyCreatorFunctionLibrary::IsApplicationForegroundNow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "IsApplicationForegroundNow");

	Params::PPSkyCreatorFunctionLibrary_IsApplicationForegroundNow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.KilometersToCentimeters
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   Value                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPPSkyCreatorFunctionLibrary::KilometersToCentimeters(const float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PPSkyCreatorFunctionLibrary", "KilometersToCentimeters");

	Params::PPSkyCreatorFunctionLibrary_KilometersToCentimeters Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorFunctionLibrary.DynamicConvertRenderTargetToTexture2D
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UTextureRenderTarget2D*           RenderTarget                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UPPSkyCreatorFunctionLibrary::DynamicConvertRenderTargetToTexture2D(class UTextureRenderTarget2D* RenderTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreatorFunctionLibrary", "DynamicConvertRenderTargetToTexture2D");

	Params::PPSkyCreatorFunctionLibrary_DynamicConvertRenderTargetToTexture2D Parms{};

	Parms.RenderTarget = RenderTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function PPSkyCreatorPlugin.PPSkyCreatorWeatherPreset.GetWeatherPresetSettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FPPSkyCreatorWeatherSettings     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FPPSkyCreatorWeatherSettings UPPSkyCreatorWeatherPreset::GetWeatherPresetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PPSkyCreatorWeatherPreset", "GetWeatherPresetSettings");

	Params::PPSkyCreatorWeatherPreset_GetWeatherPresetSettings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

