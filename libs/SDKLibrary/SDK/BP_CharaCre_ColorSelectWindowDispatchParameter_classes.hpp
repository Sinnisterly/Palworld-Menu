#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CharaCre_ColorSelectWindowDispatchParameter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CharaCre_ColorSelectWindowDispatchParameter.BP_CharaCre_ColorSelectWindowDispatchParameter_C
// 0x0048 (0x0080 - 0x0038)
class UBP_CharaCre_ColorSelectWindowDispatchParameter_C final : public UPalHUDDispatchParameterBase
{
public:
	struct FLinearColor                           SelectedColor;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   PresetColorArray;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           DefaultColor;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnChangedColor;                                    // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWidget*                                RelativePositionWidget;                            // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void OnChangedColor__DelegateSignature(const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CharaCre_ColorSelectWindowDispatchParameter_C">();
	}
	static class UBP_CharaCre_ColorSelectWindowDispatchParameter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CharaCre_ColorSelectWindowDispatchParameter_C>();
	}
};
static_assert(alignof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C) == 0x000008, "Wrong alignment on UBP_CharaCre_ColorSelectWindowDispatchParameter_C");
static_assert(sizeof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C) == 0x000080, "Wrong size on UBP_CharaCre_ColorSelectWindowDispatchParameter_C");
static_assert(offsetof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C, SelectedColor) == 0x000038, "Member 'UBP_CharaCre_ColorSelectWindowDispatchParameter_C::SelectedColor' has a wrong offset!");
static_assert(offsetof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C, PresetColorArray) == 0x000048, "Member 'UBP_CharaCre_ColorSelectWindowDispatchParameter_C::PresetColorArray' has a wrong offset!");
static_assert(offsetof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C, DefaultColor) == 0x000058, "Member 'UBP_CharaCre_ColorSelectWindowDispatchParameter_C::DefaultColor' has a wrong offset!");
static_assert(offsetof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C, OnChangedColor) == 0x000068, "Member 'UBP_CharaCre_ColorSelectWindowDispatchParameter_C::OnChangedColor' has a wrong offset!");
static_assert(offsetof(UBP_CharaCre_ColorSelectWindowDispatchParameter_C, RelativePositionWidget) == 0x000078, "Member 'UBP_CharaCre_ColorSelectWindowDispatchParameter_C::RelativePositionWidget' has a wrong offset!");

}

