#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AIAction_NPC_CombatBase

#include "Basic.hpp"

#include "BP_AIAction_NPC_CombatBase_classes.hpp"
#include "BP_AIAction_NPC_CombatBase_parameters.hpp"


namespace SDK
{

// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionAbort
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ActionAbort(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ActionAbort");

	Params::BP_AIAction_NPC_CombatBase_C_ActionAbort Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionFinished
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPawnActionResult                       WithResult                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ActionFinished(class APawn* ControlledPawn, EPawnActionResult WithResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ActionFinished");

	Params::BP_AIAction_NPC_CombatBase_C_ActionFinished Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.WithResult = WithResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionPause
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ActionPause(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ActionPause");

	Params::BP_AIAction_NPC_CombatBase_C_ActionPause Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionStart
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ActionStart(class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ActionStart");

	Params::BP_AIAction_NPC_CombatBase_C_ActionStart Parms{};

	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ActionTick
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ActionTick(class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ActionTick");

	Params::BP_AIAction_NPC_CombatBase_C_ActionTick Parms{};

	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.AddCombatState
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::AddCombatState(class UClass* Param_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "AddCombatState");

	Params::BP_AIAction_NPC_CombatBase_C_AddCombatState Parms{};

	Parms.Param_Class = Param_Class;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ChangeReturnMode
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ChangeSuccess                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ChangeReturnMode(bool* ChangeSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ChangeReturnMode");

	Params::BP_AIAction_NPC_CombatBase_C_ChangeReturnMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeSuccess != nullptr)
		*ChangeSuccess = Parms.ChangeSuccess;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.DamageResponseForCombat
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageResult                 DmgResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_AIAction_NPC_CombatBase_C::DamageResponseForCombat(const struct FPalDamageResult& DmgResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "DamageResponseForCombat");

	Params::BP_AIAction_NPC_CombatBase_C_DamageResponseForCombat Parms{};

	Parms.DmgResult = std::move(DmgResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.Event_OnDead
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     DeadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UBP_AIAction_NPC_CombatBase_C::Event_OnDead(const struct FPalDeadInfo& DeadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "Event_OnDead");

	Params::BP_AIAction_NPC_CombatBase_C_Event_OnDead Parms{};

	Parms.DeadInfo = std::move(DeadInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.ExecuteUbergraph_BP_AIAction_NPC_CombatBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::ExecuteUbergraph_BP_AIAction_NPC_CombatBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "ExecuteUbergraph_BP_AIAction_NPC_CombatBase");

	Params::BP_AIAction_NPC_CombatBase_C_ExecuteUbergraph_BP_AIAction_NPC_CombatBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.FindTargetNearPoint
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FVector>                  PointList                                              (Parm, OutParm)

void UBP_AIAction_NPC_CombatBase_C::FindTargetNearPoint(TArray<struct FVector>* PointList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "FindTargetNearPoint");

	Params::BP_AIAction_NPC_CombatBase_C_FindTargetNearPoint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PointList != nullptr)
		*PointList = std::move(Parms.PointList);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetBodyActionComponentRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPalActionComponent*              ActionComp                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::GetBodyActionComponentRef(class UPalActionComponent** ActionComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "GetBodyActionComponentRef");

	Params::BP_AIAction_NPC_CombatBase_C_GetBodyActionComponentRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionComp != nullptr)
		*ActionComp = Parms.ActionComp;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetControllerRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_NPCAIController_C*            NPCAICon                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::GetControllerRef(class ABP_NPCAIController_C** NPCAICon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "GetControllerRef");

	Params::BP_AIAction_NPC_CombatBase_C_GetControllerRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NPCAICon != nullptr)
		*NPCAICon = Parms.NPCAICon;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetLeaderBB
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_PalAIBlackboard_Common_C*     LeaderBB                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::GetLeaderBB(class UBP_PalAIBlackboard_Common_C** LeaderBB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "GetLeaderBB");

	Params::BP_AIAction_NPC_CombatBase_C_GetLeaderBB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeaderBB != nullptr)
		*LeaderBB = Parms.LeaderBB;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetMovementComponentRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPalCharacterMovementComponent*   Movement                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::GetMovementComponentRef(class UPalCharacterMovementComponent** Movement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "GetMovementComponentRef");

	Params::BP_AIAction_NPC_CombatBase_C_GetMovementComponentRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Movement != nullptr)
		*Movement = Parms.Movement;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.GetWeaponHandleRef
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPalNPCAIWeaponHandle*            WeaponHandle                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::GetWeaponHandleRef(class UPalNPCAIWeaponHandle** WeaponHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "GetWeaponHandleRef");

	Params::BP_AIAction_NPC_CombatBase_C_GetWeaponHandleRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponHandle != nullptr)
		*WeaponHandle = Parms.WeaponHandle;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.Is Alive Target Actor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Alive                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::Is_Alive_Target_Actor(bool* Alive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "Is Alive Target Actor");

	Params::BP_AIAction_NPC_CombatBase_C_Is_Alive_Target_Actor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Alive != nullptr)
		*Alive = Parms.Alive;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.IsEndCurrentState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnd                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::IsEndCurrentState(bool* IsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "IsEndCurrentState");

	Params::BP_AIAction_NPC_CombatBase_C_IsEndCurrentState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnd != nullptr)
		*IsEnd = Parms.IsEnd;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.IsNearTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreHeight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Near                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::IsNearTarget(double Distance, bool IgnoreHeight, bool* Near)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "IsNearTarget");

	Params::BP_AIAction_NPC_CombatBase_C_IsNearTarget Parms{};

	Parms.Distance = Distance;
	Parms.IgnoreHeight = IgnoreHeight;

	UObject::ProcessEvent(Func, &Parms);

	if (Near != nullptr)
		*Near = Parms.Near;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.LineTraceTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    HitToTarget                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::LineTraceTarget(bool* HitToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "LineTraceTarget");

	Params::BP_AIAction_NPC_CombatBase_C_LineTraceTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HitToTarget != nullptr)
		*HitToTarget = Parms.HitToTarget;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.MoveToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsNearTarget                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::MoveToTarget(bool* Param_IsNearTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "MoveToTarget");

	Params::BP_AIAction_NPC_CombatBase_C_MoveToTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsNearTarget != nullptr)
		*Param_IsNearTarget = Parms.Param_IsNearTarget;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.SightCheckAndResponseForCombat
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ChangeNextAction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::SightCheckAndResponseForCombat(bool* ChangeNextAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "SightCheckAndResponseForCombat");

	Params::BP_AIAction_NPC_CombatBase_C_SightCheckAndResponseForCombat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ChangeNextAction != nullptr)
		*ChangeNextAction = Parms.ChangeNextAction;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TargetChange
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AIAction_NPC_CombatBase_C::TargetChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "TargetChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TargetPlayerCameraCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AttackAble                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::TargetPlayerCameraCheck(bool* AttackAble)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "TargetPlayerCameraCheck");

	Params::BP_AIAction_NPC_CombatBase_C_TargetPlayerCameraCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AttackAble != nullptr)
		*AttackAble = Parms.AttackAble;
}


// Function BP_AIAction_NPC_CombatBase.BP_AIAction_NPC_CombatBase_C.TickFinishCheck
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ActionFinish                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AIAction_NPC_CombatBase_C::TickFinishCheck(bool* ActionFinish)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AIAction_NPC_CombatBase_C", "TickFinishCheck");

	Params::BP_AIAction_NPC_CombatBase_C_TickFinishCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActionFinish != nullptr)
		*ActionFinish = Parms.ActionFinish;
}

}

