#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HumanCryComponent

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_HumanCryComponent.BP_HumanCryComponent_C.BP_HumanCryComponent_AutoGenFunc
// 0x0018 (0x0018 - 0x0000)
struct BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc final
{
public:
	const class UPalActionBase*                   Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc) == 0x000008, "Wrong alignment on BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc");
static_assert(sizeof(BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc) == 0x000018, "Wrong size on BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc");
static_assert(offsetof(BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc, Action) == 0x000000, "Member 'BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc::Action' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000010, "Member 'BP_HumanCryComponent_C_BP_HumanCryComponent_AutoGenFunc::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_HumanCryComponent.BP_HumanCryComponent_C.ExecuteUbergraph_BP_HumanCryComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent) == 0x000004, "Wrong alignment on BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent");
static_assert(sizeof(BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent) == 0x000008, "Wrong size on BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent");
static_assert(offsetof(BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent, EntryPoint) == 0x000000, "Member 'BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_HumanCryComponent_C_ExecuteUbergraph_BP_HumanCryComponent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function BP_HumanCryComponent.BP_HumanCryComponent_C.Initialize
// 0x0018 (0x0018 - 0x0000)
struct BP_HumanCryComponent_C_Initialize final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          K2Node_DynamicCast_AsPal_Character;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HumanCryComponent_C_Initialize) == 0x000008, "Wrong alignment on BP_HumanCryComponent_C_Initialize");
static_assert(sizeof(BP_HumanCryComponent_C_Initialize) == 0x000018, "Wrong size on BP_HumanCryComponent_C_Initialize");
static_assert(offsetof(BP_HumanCryComponent_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_HumanCryComponent_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_Initialize, K2Node_DynamicCast_AsPal_Character) == 0x000008, "Member 'BP_HumanCryComponent_C_Initialize::K2Node_DynamicCast_AsPal_Character' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_HumanCryComponent_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HumanCryComponent.BP_HumanCryComponent_C.PlayCry
// 0x0030 (0x0030 - 0x0000)
struct BP_HumanCryComponent_C_PlayCry final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HumanCryComponent_C_PlayCry) == 0x000008, "Wrong alignment on BP_HumanCryComponent_C_PlayCry");
static_assert(sizeof(BP_HumanCryComponent_C_PlayCry) == 0x000030, "Wrong size on BP_HumanCryComponent_C_PlayCry");
static_assert(offsetof(BP_HumanCryComponent_C_PlayCry, AkEvent) == 0x000000, "Member 'BP_HumanCryComponent_C_PlayCry::AkEvent' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_PlayCry, Temp_struct_Variable) == 0x000008, "Member 'BP_HumanCryComponent_C_PlayCry::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_PlayCry, Temp_delegate_Variable) == 0x000018, "Member 'BP_HumanCryComponent_C_PlayCry::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_HumanCryComponent_C_PlayCry, CallFunc_PostEvent_ReturnValue) == 0x000028, "Member 'BP_HumanCryComponent_C_PlayCry::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

}

