#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalIncidentInvaderBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalIncidentInvaderBase.BP_PalIncidentInvaderBase_C
// 0x0070 (0x0290 - 0x0220)
#pragma pack(push, 0x1)
class alignas(0x10) UBP_PalIncidentInvaderBase_C : public UPalInvaderIncidentBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UPalIndividualCharacterHandle*>  IndividualHandleList;                              // 0x0228(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                MarchStartPoint;                                   // 0x0238(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MemberCount;                                       // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpawnedCount;                                      // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_DummyNavigationInvoker_C*           DummyNav_Start;                                    // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_DummyNavigationInvoker_C*           DummyNav_Goal;                                     // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CashedBaseCampLocation;                            // 0x0268(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBaseCampLocationCashed;                          // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DummyActorSetLoaction();
	void EndProc();
	void ExecuteUbergraph_BP_PalIncidentInvaderBase(int32 EntryPoint);
	void FindIndividualHandle(const struct FPalInstanceID& ID, class UPalIndividualCharacterHandle** Handle);
	void Get_Character_Location_Type(EPalCharacterLocationType* CharacterLocationType);
	void GetStartLocation(struct FVector* StartLocation);
	void GetTargetBaseCampPosition(struct FVector* Location);
	void GoalPointPerAgent(int32 SpawnedIndex, struct FVector* GoalPosition);
	void IsSquad(bool* Result);
	void OnAllCharacterSpawned(TArray<class APalAIController*>& Param_MemberController);
	void OnCharacterSpawned(class APalCharacter* SpawnedCharacter);
	void OnDestroyActor(class AActor* Actor);
	void OnEndInvade();
	void OnInitialized();
	void OnStartInvade();
	void RandomTransform(int32 Param_Index, struct FVector* RandomPos);
	void RemoveHandleList(class APalCharacter* Character);
	void SpawnDelegate(const struct FPalInstanceID& ID);
	void SpawnDummyNavInvoker(class ABP_DummyNavigationInvoker_C** DummyNav);
	void SpawnMemberCharacters(const struct FVector& StartLocation);
	void StartProc();
	void TerminateProc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalIncidentInvaderBase_C">();
	}
	static class UBP_PalIncidentInvaderBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_PalIncidentInvaderBase_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UBP_PalIncidentInvaderBase_C) == 0x000010, "Wrong alignment on UBP_PalIncidentInvaderBase_C");
static_assert(sizeof(UBP_PalIncidentInvaderBase_C) == 0x000290, "Wrong size on UBP_PalIncidentInvaderBase_C");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, UberGraphFrame) == 0x000220, "Member 'UBP_PalIncidentInvaderBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, IndividualHandleList) == 0x000228, "Member 'UBP_PalIncidentInvaderBase_C::IndividualHandleList' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, MarchStartPoint) == 0x000238, "Member 'UBP_PalIncidentInvaderBase_C::MarchStartPoint' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, MemberCount) == 0x000250, "Member 'UBP_PalIncidentInvaderBase_C::MemberCount' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, SpawnedCount) == 0x000254, "Member 'UBP_PalIncidentInvaderBase_C::SpawnedCount' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, DummyNav_Start) == 0x000258, "Member 'UBP_PalIncidentInvaderBase_C::DummyNav_Start' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, DummyNav_Goal) == 0x000260, "Member 'UBP_PalIncidentInvaderBase_C::DummyNav_Goal' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, CashedBaseCampLocation) == 0x000268, "Member 'UBP_PalIncidentInvaderBase_C::CashedBaseCampLocation' has a wrong offset!");
static_assert(offsetof(UBP_PalIncidentInvaderBase_C, IsBaseCampLocationCashed) == 0x000280, "Member 'UBP_PalIncidentInvaderBase_C::IsBaseCampLocationCashed' has a wrong offset!");

}

