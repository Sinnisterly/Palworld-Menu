#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalCaptureJudgeObject

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PalCaptureJudgeObject.BP_PalCaptureJudgeObject_C
// 0x0028 (0x02E0 - 0x02B8)
class ABP_PalCaptureJudgeObject_C final : public APalCaptureJudgeObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReturnOwner;                                     // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DC[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnSpeed;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PalCaptureJudgeObject(int32 EntryPoint);
	void OnCaptureSuccess(const class APalCharacter* Character, const struct FCaptureResult& Result);
	void OnFailedByMP(const class APalCharacter* Character, const struct FCaptureResult& Result);
	void OnFailedByTest(const class APalCharacter* Character, const struct FCaptureResult& Result);
	void OnFailedFinish();
	void OnSuccessFinish();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReturnOwnerMovement(double DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PalCaptureJudgeObject_C">();
	}
	static class ABP_PalCaptureJudgeObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PalCaptureJudgeObject_C>();
	}
};
static_assert(alignof(ABP_PalCaptureJudgeObject_C) == 0x000008, "Wrong alignment on ABP_PalCaptureJudgeObject_C");
static_assert(sizeof(ABP_PalCaptureJudgeObject_C) == 0x0002E0, "Wrong size on ABP_PalCaptureJudgeObject_C");
static_assert(offsetof(ABP_PalCaptureJudgeObject_C, UberGraphFrame) == 0x0002B8, "Member 'ABP_PalCaptureJudgeObject_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PalCaptureJudgeObject_C, StaticMesh) == 0x0002C0, "Member 'ABP_PalCaptureJudgeObject_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_PalCaptureJudgeObject_C, DefaultSceneRoot) == 0x0002C8, "Member 'ABP_PalCaptureJudgeObject_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PalCaptureJudgeObject_C, IsReturnOwner) == 0x0002D0, "Member 'ABP_PalCaptureJudgeObject_C::IsReturnOwner' has a wrong offset!");
static_assert(offsetof(ABP_PalCaptureJudgeObject_C, ReturnSpeed) == 0x0002D8, "Member 'ABP_PalCaptureJudgeObject_C::ReturnSpeed' has a wrong offset!");

}

