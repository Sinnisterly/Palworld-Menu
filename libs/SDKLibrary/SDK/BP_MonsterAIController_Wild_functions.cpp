#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterAIController_Wild

#include "Basic.hpp"

#include "BP_MonsterAIController_Wild_classes.hpp"
#include "BP_MonsterAIController_Wild_parameters.hpp"


namespace SDK
{

// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.BattleStartEvent__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           StartPalActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::BattleStartEvent__DelegateSignature(class AActor* StartPalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "BattleStartEvent__DelegateSignature");

	Params::BP_MonsterAIController_Wild_C_BattleStartEvent__DelegateSignature Parms{};

	Parms.StartPalActor = StartPalActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.DebugBattleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::DebugBattleStart(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "DebugBattleStart");

	Params::BP_MonsterAIController_Wild_C_DebugBattleStart Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.DebugBattleStartInternal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::DebugBattleStartInternal(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "DebugBattleStartInternal");

	Params::BP_MonsterAIController_Wild_C_DebugBattleStartInternal Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ExecuteUbergraph_BP_MonsterAIController_Wild
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ExecuteUbergraph_BP_MonsterAIController_Wild(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ExecuteUbergraph_BP_MonsterAIController_Wild");

	Params::BP_MonsterAIController_Wild_C_ExecuteUbergraph_BP_MonsterAIController_Wild Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ForceBattleStartForOutside
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           StartPalActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ForceBattleStartForOutside(class AActor* StartPalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ForceBattleStartForOutside");

	Params::BP_MonsterAIController_Wild_C_ForceBattleStartForOutside Parms{};

	Parms.StartPalActor = StartPalActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ForceBattleStartToTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ForceBattleStartToTarget(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ForceBattleStartToTarget");

	Params::BP_MonsterAIController_Wild_C_ForceBattleStartToTarget Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ForceEscaleStartForOutside
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           StartFriend                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ForceEscaleStartForOutside(class AActor* StartFriend, class AActor* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ForceEscaleStartForOutside");

	Params::BP_MonsterAIController_Wild_C_ForceEscaleStartForOutside Parms{};

	Parms.StartFriend = StartFriend;
	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.GetLeaderBB
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PalAIBlackboard_Common_C*     LeaderPalBrackboard                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::GetLeaderBB(class UBP_PalAIBlackboard_Common_C** LeaderPalBrackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "GetLeaderBB");

	Params::BP_MonsterAIController_Wild_C_GetLeaderBB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeaderPalBrackboard != nullptr)
		*LeaderPalBrackboard = Parms.LeaderPalBrackboard;
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.GetMyBB
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PalAIBlackboard_Common_C*     PalBrackboard                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::GetMyBB(class UBP_PalAIBlackboard_Common_C** PalBrackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "GetMyBB");

	Params::BP_MonsterAIController_Wild_C_GetMyBB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PalBrackboard != nullptr)
		*PalBrackboard = Parms.PalBrackboard;
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.GoBack_Teritory
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIController_Wild_C::GoBack_Teritory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "GoBack_Teritory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.IsSleeping
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Sleep                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::IsSleeping(bool* Sleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "IsSleeping");

	Params::BP_MonsterAIController_Wild_C_IsSleeping Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sleep != nullptr)
		*Sleep = Parms.Sleep;
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.OnDeadDelegate_¤ÙóÈ_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDeadInfo                     DeadInfo                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ABP_MonsterAIController_Wild_C::OnDeadDelegate______0(const struct FPalDeadInfo& DeadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "OnDeadDelegate_¤ÙóÈ_0");

	Params::BP_MonsterAIController_Wild_C_OnDeadDelegate______0 Parms{};

	Parms.DeadInfo = std::move(DeadInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.PerformanceSetup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Param_Pawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::PerformanceSetup(class APawn* Param_Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "PerformanceSetup");

	Params::BP_MonsterAIController_Wild_C_PerformanceSetup Parms{};

	Parms.Param_Pawn = Param_Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ReceiveEndPlay");

	Params::BP_MonsterAIController_Wild_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ReceivePossess");

	Params::BP_MonsterAIController_Wild_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.ReturnToTerritory
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIController_Wild_C::ReturnToTerritory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "ReturnToTerritory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.SetSpawndInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SpawnerLoc                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  WalkRadius                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::SetSpawndInfo(const struct FVector& SpawnerLoc, double ReturnRadius, double WalkRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "SetSpawndInfo");

	Params::BP_MonsterAIController_Wild_C_SetSpawndInfo Parms{};

	Parms.SpawnerLoc = std::move(SpawnerLoc);
	Parms.ReturnRadius = ReturnRadius;
	Parms.WalkRadius = WalkRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.SetupBySpawner
// (BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIController_Wild_C::SetupBySpawner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "SetupBySpawner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.SetupSleepTime
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_MonsterAIController_Wild_C::SetupSleepTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "SetupSleepTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MonsterAIController_Wild.BP_MonsterAIController_Wild_C.«¹¿à¤ÙóÈ_1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APalCharacter*                    InCharacter                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MonsterAIController_Wild_C::_________1(class APalCharacter* InCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MonsterAIController_Wild_C", "«¹¿à¤ÙóÈ_1");

	Params::BP_MonsterAIController_Wild_C__________1 Parms{};

	Parms.InCharacter = InCharacter;

	UObject::ProcessEvent(Func, &Parms);
}

}

