#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PalDamageCanvas_StackDamage

#include "Basic.hpp"

#include "WBP_PalDamageCanvas_StackDamage_classes.hpp"
#include "WBP_PalDamageCanvas_StackDamage_parameters.hpp"


namespace SDK
{

// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.AddDamageTextEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageInfo                   DamageInfo                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::AddDamageTextEvent(const struct FPalDamageInfo& DamageInfo, class AActor* Defender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "AddDamageTextEvent");

	Params::WBP_PalDamageCanvas_StackDamage_C_AddDamageTextEvent Parms{};

	Parms.DamageInfo = std::move(DamageInfo);
	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.AddNewDamageText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageInfo                   DamageInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::AddNewDamageText(const struct FPalDamageInfo& DamageInfo, class AActor* Defender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "AddNewDamageText");

	Params::WBP_PalDamageCanvas_StackDamage_C_AddNewDamageText Parms{};

	Parms.DamageInfo = std::move(DamageInfo);
	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CalcDamageTextType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageInfo                   DamageInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// EPalDamageTextType                      TextType                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::CalcDamageTextType(const struct FPalDamageInfo& DamageInfo, class AActor* Defender, EPalDamageTextType* TextType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "CalcDamageTextType");

	Params::WBP_PalDamageCanvas_StackDamage_C_CalcDamageTextType Parms{};

	Parms.DamageInfo = std::move(DamageInfo);
	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);

	if (TextType != nullptr)
		*TextType = Parms.TextType;
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CalcTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FPalDamageInfo                   DamageInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::CalcTargetLocation(const struct FPalDamageInfo& DamageInfo, class AActor* Defender, struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "CalcTargetLocation");

	Params::WBP_PalDamageCanvas_StackDamage_C_CalcTargetLocation Parms{};

	Parms.DamageInfo = std::move(DamageInfo);
	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CleanUpMap
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_PalDamageCanvas_StackDamage_C::CleanUpMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "CleanUpMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.CreateDamageWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalUIDamageTextBase*             CreatedWdiget                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::CreateDamageWidget(class UPalUIDamageTextBase** CreatedWdiget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "CreateDamageWidget");

	Params::WBP_PalDamageCanvas_StackDamage_C_CreateDamageWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CreatedWdiget != nullptr)
		*CreatedWdiget = Parms.CreatedWdiget;
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_PalDamageCanvas_StackDamage_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage");

	Params::WBP_PalDamageCanvas_StackDamage_C_ExecuteUbergraph_WBP_PalDamageCanvas_StackDamage Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.IsExistDamageText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsExist                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::IsExistDamageText(class AActor* Defender, bool* IsExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "IsExistDamageText");

	Params::WBP_PalDamageCanvas_StackDamage_C_IsExistDamageText Parms{};

	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);

	if (IsExist != nullptr)
		*IsExist = Parms.IsExist;
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.OnRequestedCloseWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPalUIDamageTextBase*             SelfWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::OnRequestedCloseWidget(class UPalUIDamageTextBase* SelfWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "OnRequestedCloseWidget");

	Params::WBP_PalDamageCanvas_StackDamage_C_OnRequestedCloseWidget Parms{};

	Parms.SelfWidget = SelfWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.OnSetup
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UWBP_PalDamageCanvas_StackDamage_C::OnSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "OnSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_PalDamageCanvas_StackDamage.WBP_PalDamageCanvas_StackDamage_C.UpdateDamageText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPalDamageInfo                   DamageInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           Defender                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_PalDamageCanvas_StackDamage_C::UpdateDamageText(const struct FPalDamageInfo& DamageInfo, class AActor* Defender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_PalDamageCanvas_StackDamage_C", "UpdateDamageText");

	Params::WBP_PalDamageCanvas_StackDamage_C_UpdateDamageText Parms{};

	Parms.DamageInfo = std::move(DamageInfo);
	Parms.Defender = Defender;

	UObject::ProcessEvent(Func, &Parms);
}

}

