#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalCaptureBodyBase

#include "Basic.hpp"

#include "E_PalCaptureSphereBouncedReason_structs.hpp"
#include "Pal_structs.hpp"
#include "EPalSphereCaptureFailedReason_structs.hpp"


namespace SDK::Params
{

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.ExecuteUbergraph_BP_PalCaptureBodyBase
// 0x00B8 (0x00B8 - 0x0000)
struct BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetTargetActor_TargetActor;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalDamageReactionComponent*            CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         K2Node_CustomEvent_TargetID;                       // 0x0030(0x0030)(HasGetValueTypeHash)
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetIndividualHandle_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_GetTargetActor_TargetActor_1;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFD[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          CallFunc_GetTargetHandle_targetHandle;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_level;                                // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isSneak;                              // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFE[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          K2Node_Event_targetCharacter;                      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFF[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_FindOwnerPalCharacter_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase");
static_assert(sizeof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase) == 0x0000B8, "Wrong size on BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, EntryPoint) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetTargetActor_TargetActor) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetTargetActor_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_CustomEvent_TargetID) == 0x000030, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_CustomEvent_TargetID' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetCharacterManager_ReturnValue) == 0x000060, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetIndividualHandle_ReturnValue) == 0x000068, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetIndividualHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetTargetActor_TargetActor_1) == 0x000078, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetTargetActor_TargetActor_1' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_HasAuthority_ReturnValue) == 0x000080, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_IsServer_ReturnValue) == 0x000082, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_GetTargetHandle_targetHandle) == 0x000088, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_GetTargetHandle_targetHandle' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_Event_level) == 0x000090, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_Event_level' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_Event_isSneak) == 0x000094, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_Event_isSneak' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, K2Node_Event_targetCharacter) == 0x000098, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::K2Node_Event_targetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_FindOwnerPalCharacter_ReturnValue) == 0x0000A8, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_FindOwnerPalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'BP_PalCaptureBodyBase_C_ExecuteUbergraph_BP_PalCaptureBodyBase::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.Get Is Into Ball
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCaptureBodyBase_C_Get_Is_Into_Ball final
{
public:
	bool                                          IntoBall;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_Get_Is_Into_Ball) == 0x000001, "Wrong alignment on BP_PalCaptureBodyBase_C_Get_Is_Into_Ball");
static_assert(sizeof(BP_PalCaptureBodyBase_C_Get_Is_Into_Ball) == 0x000001, "Wrong size on BP_PalCaptureBodyBase_C_Get_Is_Into_Ball");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Get_Is_Into_Ball, IntoBall) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_Get_Is_Into_Ball::IntoBall' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.GetAkOwnerComponent
// 0x0020 (0x0020 - 0x0000)
struct BP_PalCaptureBodyBase_C_GetAkOwnerComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_GetAkOwnerComponent");
static_assert(sizeof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent) == 0x000020, "Wrong size on BP_PalCaptureBodyBase_C_GetAkOwnerComponent");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent, ReturnValue) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_GetAkOwnerComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_GetAkOwnerComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_GetAkOwnerComponent::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_GetAkOwnerComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetAkOwnerComponent, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PalCaptureBodyBase_C_GetAkOwnerComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.GetCaptureLevel
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCaptureBodyBase_C_GetCaptureLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_GetCaptureLevel) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_GetCaptureLevel");
static_assert(sizeof(BP_PalCaptureBodyBase_C_GetCaptureLevel) == 0x000004, "Wrong size on BP_PalCaptureBodyBase_C_GetCaptureLevel");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetCaptureLevel, Level) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_GetCaptureLevel::Level' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.GetTargetActor
// 0x0020 (0x0020 - 0x0000)
struct BP_PalCaptureBodyBase_C_GetTargetActor final
{
public:
	class APalCharacter*                          TargetActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetTargetHandle_targetHandle;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_TryGetIndividualActor_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_GetTargetActor) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_GetTargetActor");
static_assert(sizeof(BP_PalCaptureBodyBase_C_GetTargetActor) == 0x000020, "Wrong size on BP_PalCaptureBodyBase_C_GetTargetActor");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetActor, TargetActor) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_GetTargetActor::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetActor, CallFunc_GetTargetHandle_targetHandle) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_GetTargetActor::CallFunc_GetTargetHandle_targetHandle' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetActor, CallFunc_TryGetIndividualActor_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_GetTargetActor::CallFunc_TryGetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_GetTargetActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetActor, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_PalCaptureBodyBase_C_GetTargetActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.GetTargetHandle
// 0x0008 (0x0008 - 0x0000)
struct BP_PalCaptureBodyBase_C_GetTargetHandle final
{
public:
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_GetTargetHandle) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_GetTargetHandle");
static_assert(sizeof(BP_PalCaptureBodyBase_C_GetTargetHandle) == 0x000008, "Wrong size on BP_PalCaptureBodyBase_C_GetTargetHandle");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetTargetHandle, Param_TargetHandle) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_GetTargetHandle::Param_TargetHandle' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.IsSneakBonusEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCaptureBodyBase_C_IsSneakBonusEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_IsSneakBonusEnabled) == 0x000001, "Wrong alignment on BP_PalCaptureBodyBase_C_IsSneakBonusEnabled");
static_assert(sizeof(BP_PalCaptureBodyBase_C_IsSneakBonusEnabled) == 0x000001, "Wrong size on BP_PalCaptureBodyBase_C_IsSneakBonusEnabled");
static_assert(offsetof(BP_PalCaptureBodyBase_C_IsSneakBonusEnabled, Enabled) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_IsSneakBonusEnabled::Enabled' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.OnBouncedBody__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature final
{
public:
	E_PalCaptureSphereBouncedReason               ReasonType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4000[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature");
static_assert(sizeof(BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature) == 0x000010, "Wrong size on BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature, ReasonType) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature::ReasonType' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature, Param_TargetHandle) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_OnBouncedBody__DelegateSignature::Param_TargetHandle' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.OnFailedCapture__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature final
{
public:
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalSphereCaptureFailedReason                 FailedReason;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature");
static_assert(sizeof(BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature) == 0x000010, "Wrong size on BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature, Param_TargetHandle) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature::Param_TargetHandle' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature, FailedReason) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_OnFailedCapture__DelegateSignature::FailedReason' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.OnPassingCapturePhase__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature final
{
public:
	int32                                         PhaseCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4001[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature");
static_assert(sizeof(BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature) == 0x000010, "Wrong size on BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature, PhaseCount) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature::PhaseCount' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature, Param_TargetHandle) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_OnPassingCapturePhase__DelegateSignature::Param_TargetHandle' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.OnShakeBody__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature final
{
public:
	class ABP_PalCaptureBodyBase_C*               ShakedBody;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature");
static_assert(sizeof(BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature) == 0x000008, "Wrong size on BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature, ShakedBody) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_OnShakeBody__DelegateSignature::ShakedBody' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.OnSuccessedCapture__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature final
{
public:
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature");
static_assert(sizeof(BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature) == 0x000008, "Wrong size on BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature");
static_assert(offsetof(BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature, Param_TargetHandle) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_OnSuccessedCapture__DelegateSignature::Param_TargetHandle' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.PlaySound
// 0x000C (0x000C - 0x0000)
struct BP_PalCaptureBodyBase_C_PlaySound final
{
public:
	struct FPalDataTableRowName_SoundID           ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FPalSoundOptions                       K2Node_MakeStruct_PalSoundOptions;                 // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_PlaySound) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_PlaySound");
static_assert(sizeof(BP_PalCaptureBodyBase_C_PlaySound) == 0x00000C, "Wrong size on BP_PalCaptureBodyBase_C_PlaySound");
static_assert(offsetof(BP_PalCaptureBodyBase_C_PlaySound, ID) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_PlaySound::ID' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_PlaySound, K2Node_MakeStruct_PalSoundOptions) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_PlaySound::K2Node_MakeStruct_PalSoundOptions' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCaptureBodyBase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_ReceiveTick");
static_assert(sizeof(BP_PalCaptureBodyBase_C_ReceiveTick) == 0x000004, "Wrong size on BP_PalCaptureBodyBase_C_ReceiveTick");
static_assert(offsetof(BP_PalCaptureBodyBase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetCaptureLevel
// 0x0028 (0x0028 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetCaptureLevel final
{
public:
	int32                                         NewParam;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4002[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_FindOwnerPalCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetCaptureLevel) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetCaptureLevel");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetCaptureLevel) == 0x000028, "Wrong size on BP_PalCaptureBodyBase_C_SetCaptureLevel");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, NewParam) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, CallFunc_FindOwnerPalCharacter_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::CallFunc_FindOwnerPalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevel, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetCaptureLevelInternal
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetCaptureLevelInternal final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetCaptureLevelInternal) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_SetCaptureLevelInternal");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetCaptureLevelInternal) == 0x000004, "Wrong size on BP_PalCaptureBodyBase_C_SetCaptureLevelInternal");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevelInternal, Level) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevelInternal::Level' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetCaptureLevelToALL
// 0x0004 (0x0004 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetCaptureLevelToALL final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetCaptureLevelToALL) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_SetCaptureLevelToALL");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetCaptureLevelToALL) == 0x000004, "Wrong size on BP_PalCaptureBodyBase_C_SetCaptureLevelToALL");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetCaptureLevelToALL, Level) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetCaptureLevelToALL::Level' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetIsIntoBall
// 0x000C (0x000C - 0x0000)
struct BP_PalCaptureBodyBase_C_SetIsIntoBall final
{
public:
	bool                                          IntoBall;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4003[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalDataTableRowName_SoundID           SoundId;                                           // 0x0004(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetIsIntoBall) == 0x000004, "Wrong alignment on BP_PalCaptureBodyBase_C_SetIsIntoBall");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetIsIntoBall) == 0x00000C, "Wrong size on BP_PalCaptureBodyBase_C_SetIsIntoBall");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetIsIntoBall, IntoBall) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetIsIntoBall::IntoBall' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetIsIntoBall, SoundId) == 0x000004, "Member 'BP_PalCaptureBodyBase_C_SetIsIntoBall::SoundId' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetSneakBonusFlag
// 0x0028 (0x0028 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetSneakBonusFlag final
{
public:
	bool                                          Flag;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4004[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_FindOwnerPalCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetSneakBonusFlag");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag) == 0x000028, "Wrong size on BP_PalCaptureBodyBase_C_SetSneakBonusFlag");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, Flag) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::Flag' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, CallFunc_FindOwnerPalCharacter_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::CallFunc_FindOwnerPalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlag, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlag::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetSneakBonusFlagInternal
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal final
{
public:
	bool                                          IsSneak;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal) == 0x000001, "Wrong alignment on BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal) == 0x000001, "Wrong size on BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal, IsSneak) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlagInternal::IsSneak' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetSneakBonusFlagToALL
// 0x0001 (0x0001 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL final
{
public:
	bool                                          IsSneak;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL) == 0x000001, "Wrong alignment on BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL) == 0x000001, "Wrong size on BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL, IsSneak) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetSneakBonusFlagToALL::IsSneak' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetTargetHandle
// 0x0040 (0x0040 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetTargetHandle final
{
public:
	class UPalIndividualCharacterHandle*          Param_TargetHandle;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4005[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalInstanceID                         CallFunc_GetIndividualID_ReturnValue;              // 0x0010(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetTargetHandle) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetTargetHandle");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetTargetHandle) == 0x000040, "Wrong size on BP_PalCaptureBodyBase_C_SetTargetHandle");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetTargetHandle, Param_TargetHandle) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetTargetHandle::Param_TargetHandle' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetTargetHandle, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_SetTargetHandle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetTargetHandle, CallFunc_GetIndividualID_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_SetTargetHandle::CallFunc_GetIndividualID_ReturnValue' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetTargetIDToALL
// 0x0030 (0x0030 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetTargetIDToALL final
{
public:
	struct FPalInstanceID                         TargetId;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetTargetIDToALL) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetTargetIDToALL");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetTargetIDToALL) == 0x000030, "Wrong size on BP_PalCaptureBodyBase_C_SetTargetIDToALL");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetTargetIDToALL, TargetId) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetTargetIDToALL::TargetId' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.Setup
// 0x0028 (0x0028 - 0x0000)
struct BP_PalCaptureBodyBase_C_Setup final
{
public:
	class APalCharacter*                          TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_FindOwnerPalCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerController*                   K2Node_DynamicCast_AsPal_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_Setup) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_Setup");
static_assert(sizeof(BP_PalCaptureBodyBase_C_Setup) == 0x000028, "Wrong size on BP_PalCaptureBodyBase_C_Setup");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, TargetCharacter) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_Setup::TargetCharacter' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, CallFunc_FindOwnerPalCharacter_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_Setup::CallFunc_FindOwnerPalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_Setup::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, K2Node_DynamicCast_AsPal_Player_Controller) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_Setup::K2Node_DynamicCast_AsPal_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PalCaptureBodyBase_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_Setup, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_PalCaptureBodyBase_C_Setup::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetupInServer
// 0x0008 (0x0008 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetupInServer final
{
public:
	class APalCharacter*                          TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetupInServer) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetupInServer");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetupInServer) == 0x000008, "Wrong size on BP_PalCaptureBodyBase_C_SetupInServer");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetupInServer, TargetCharacter) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetupInServer::TargetCharacter' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetupInternal
// 0x0008 (0x0008 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetupInternal final
{
public:
	class APalCharacter*                          TargetCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetupInternal) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetupInternal");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetupInternal) == 0x000008, "Wrong size on BP_PalCaptureBodyBase_C_SetupInternal");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetupInternal, TargetCharacter) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetupInternal::TargetCharacter' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.SetupToALL
// 0x0010 (0x0010 - 0x0000)
struct BP_PalCaptureBodyBase_C_SetupToALL final
{
public:
	class APalCharacter*                          Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_SetupToALL) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_SetupToALL");
static_assert(sizeof(BP_PalCaptureBodyBase_C_SetupToALL) == 0x000010, "Wrong size on BP_PalCaptureBodyBase_C_SetupToALL");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetupToALL, Target) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_SetupToALL::Target' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_SetupToALL, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_SetupToALL::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function BP_PalCaptureBodyBase.BP_PalCaptureBodyBase_C.GetOwnerCharacterOrRiderCharacter
// 0x0030 (0x0030 - 0x0000)
struct BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter final
{
public:
	class AActor*                                 Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalCharacter*                          CallFunc_FindOwnerPalCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalRideMarkerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4006[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetRiderCharacter_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter) == 0x000008, "Wrong alignment on BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter");
static_assert(sizeof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter) == 0x000030, "Wrong size on BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, Character) == 0x000000, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::Character' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_FindOwnerPalCharacter_ReturnValue) == 0x000008, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_FindOwnerPalCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_GetRiderCharacter_ReturnValue) == 0x000020, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_GetRiderCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000029, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter, CallFunc_IsValid_ReturnValue_3) == 0x00002A, "Member 'BP_PalCaptureBodyBase_C_GetOwnerCharacterOrRiderCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

}

